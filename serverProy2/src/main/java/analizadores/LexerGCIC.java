// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: LexerGCIC.jflex

package analizadores;
import java_cup.runtime.*; 
import analizadores.symG.*;
import java.util.List;
import java.util.ArrayList;
import objetos.ErrorCom;


// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class LexerGCIC implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\24\u0200\1\u0300\11\u0200\1\u0400\1\u0500\16\u0200"+
    "\1\u0600\247\u0200\10\u0700\u1020\u0200";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\10\0\2\1\1\2\1\3\2\4\22\0\1\5\1\6"+
    "\1\7\1\10\1\11\1\0\1\12\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\10\24\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54"+
    "\1\46\1\55\1\56\1\57\1\60\1\61\1\62\1\63"+
    "\1\64\1\46\1\65\1\0\1\66\1\0\1\67\1\0"+
    "\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77"+
    "\1\100\1\46\1\101\1\102\1\103\1\104\1\105\1\106"+
    "\1\46\1\107\1\110\1\111\1\112\1\61\1\113\1\114"+
    "\1\115\1\116\1\117\1\120\1\121\7\0\1\3\71\0"+
    "\1\122\1\0\77\123\60\0\2\124\115\0\1\125\u02a8\0"+
    "\2\3\u0100\0\1\126\u01d5\0\u0100\127";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[2048];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\1\1\4\2\1\1\5"+
    "\1\6\1\7\1\10\1\11\1\12\1\13\1\4\1\14"+
    "\1\15\1\16\1\17\1\20\1\1\22\4\1\21\1\22"+
    "\14\4\1\23\1\1\1\24\2\1\21\0\1\2\1\25"+
    "\2\0\1\26\1\0\1\27\2\30\1\4\1\0\1\31"+
    "\1\32\1\33\1\0\2\4\1\0\13\4\1\34\21\4"+
    "\1\35\7\4\1\36\1\34\24\0\1\37\1\0\1\30"+
    "\1\40\1\4\2\0\1\4\2\41\12\4\1\42\2\4"+
    "\2\0\2\4\1\0\1\4\1\0\1\43\1\4\1\0"+
    "\3\4\1\34\3\4\2\0\13\4\1\0\1\44\11\4"+
    "\1\45\3\4\7\0\1\43\14\0\1\30\1\4\2\0"+
    "\1\4\1\41\2\4\1\46\1\4\1\47\2\4\1\0"+
    "\1\4\1\50\4\4\1\0\6\4\6\0\1\4\1\0"+
    "\2\51\2\52\1\43\2\53\1\4\1\0\2\4\1\54"+
    "\2\4\1\54\1\0\2\4\1\0\4\4\1\0\3\4"+
    "\1\0\1\55\1\56\1\4\1\0\3\4\1\57\2\4"+
    "\1\60\1\61\1\4\1\62\1\4\1\63\1\4\4\0"+
    "\1\46\7\0\1\55\1\56\1\0\1\30\3\0\3\4"+
    "\1\46\2\4\2\64\1\4\1\0\1\4\1\65\2\4"+
    "\1\0\6\4\1\0\1\65\4\0\1\4\1\0\1\51"+
    "\4\52\1\53\2\66\2\4\1\0\1\54\2\4\1\0"+
    "\2\4\1\0\4\4\1\0\3\4\1\0\1\55\1\4"+
    "\1\56\2\67\1\4\1\70\1\71\4\4\1\72\12\0"+
    "\1\55\6\0\3\4\1\73\1\4\2\74\1\75\1\4"+
    "\2\76\1\4\1\0\1\4\1\0\1\4\1\77\2\4"+
    "\3\0\1\77\1\4\1\0\1\30\1\0\1\66\1\4"+
    "\2\100\1\101\1\4\1\101\2\4\1\0\3\4\1\0"+
    "\1\4\1\0\1\102\1\4\1\0\2\103\1\4\1\67"+
    "\3\4\1\104\2\4\10\0\1\102\3\0\1\2\1\105"+
    "\1\4\1\0\1\106\2\4\1\107\1\4\1\0\1\4"+
    "\1\0\2\4\2\110\1\107\1\0\2\111\2\112\1\4"+
    "\1\100\1\101\1\113\2\4\1\0\1\4\1\114\1\4"+
    "\1\0\1\4\1\0\1\102\2\115\1\103\1\4\1\0"+
    "\3\4\1\116\1\4\1\113\1\106\4\0\1\114\1\0"+
    "\1\4\1\0\1\106\1\4\1\117\2\120\1\4\1\0"+
    "\1\121\1\4\1\121\1\111\1\4\1\113\2\4\1\0"+
    "\2\4\1\0\2\122\1\115\1\4\1\0\4\4\5\0"+
    "\1\4\1\0\2\4\1\0\4\4\1\0\1\4\2\123"+
    "\1\122\2\124\2\4\1\125\1\4\6\0\2\126\2\4"+
    "\1\0\1\127\2\4\1\130\1\0\1\4\1\124\1\131"+
    "\1\4\1\132\2\0\1\130\2\0\1\4\2\133\2\4"+
    "\1\0\1\4\1\134\4\0\1\37\1\0\2\4\1\0"+
    "\2\135\1\4\3\0\1\4\2\136\2\137\2\0\1\4"+
    "\1\136\2\0\1\4\4\0\1\4\1\0\1\4\1\0"+
    "\2\140";

  private static int [] zzUnpackAction() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\130\0\260\0\u0108\0\u0160\0\u01b8\0\u0210\0\u0268"+
    "\0\130\0\130\0\130\0\130\0\130\0\u01b8\0\130\0\u02c0"+
    "\0\130\0\130\0\u0318\0\u0370\0\u03c8\0\u0420\0\u0478\0\u04d0"+
    "\0\u0528\0\u0580\0\u05d8\0\u0630\0\u0688\0\u06e0\0\u0738\0\u0790"+
    "\0\u07e8\0\u0840\0\u0898\0\u08f0\0\u0948\0\u09a0\0\u09f8\0\u0a50"+
    "\0\130\0\130\0\u0aa8\0\u0b00\0\u0b58\0\u0bb0\0\u0c08\0\u0c60"+
    "\0\u0cb8\0\u0d10\0\u0d68\0\u0dc0\0\u0e18\0\u0e70\0\130\0\u0ec8"+
    "\0\130\0\u0f20\0\u0f78\0\u0420\0\u0fd0\0\u1028\0\u1080\0\u10d8"+
    "\0\u1130\0\u1188\0\u11e0\0\u1238\0\u0f20\0\u1290\0\u12e8\0\u1340"+
    "\0\u1398\0\u0f78\0\u13f0\0\u1448\0\u14a0\0\130\0\u14f8\0\u1550"+
    "\0\130\0\u0268\0\u0268\0\u15a8\0\u1600\0\u1658\0\u16b0\0\130"+
    "\0\130\0\130\0\u1708\0\u1760\0\u17b8\0\u1810\0\u1868\0\u18c0"+
    "\0\u1918\0\u1970\0\u19c8\0\u1a20\0\u1a78\0\u1ad0\0\u1b28\0\u1b80"+
    "\0\u1bd8\0\u1c30\0\u1c88\0\u1ce0\0\u1d38\0\u1d90\0\u1de8\0\u1e40"+
    "\0\u1e98\0\u1ef0\0\u1f48\0\u1fa0\0\u1ff8\0\u2050\0\u20a8\0\u2100"+
    "\0\u2158\0\u21b0\0\u2208\0\u1658\0\u2260\0\u22b8\0\u2310\0\u2368"+
    "\0\u23c0\0\u2418\0\u2470\0\130\0\u24c8\0\u2520\0\u2578\0\u25d0"+
    "\0\u2628\0\u2680\0\u26d8\0\u2730\0\u2788\0\u27e0\0\u2838\0\u2890"+
    "\0\u28e8\0\u2940\0\u2998\0\u29f0\0\u2a48\0\u2aa0\0\u2af8\0\u2b50"+
    "\0\u2ba8\0\130\0\u2c00\0\u2c58\0\u1600\0\u2cb0\0\u2d08\0\u2d60"+
    "\0\u2db8\0\u2e10\0\u2e68\0\u2ec0\0\u2f18\0\u2f70\0\u2fc8\0\u3020"+
    "\0\u3078\0\u30d0\0\u3128\0\u3180\0\u31d8\0\u01b8\0\u3230\0\u3288"+
    "\0\u32e0\0\u3338\0\u3390\0\u33e8\0\u3440\0\u3498\0\u34f0\0\u3548"+
    "\0\u35a0\0\u35f8\0\u3650\0\u36a8\0\u3700\0\u3758\0\u37b0\0\u3808"+
    "\0\u3860\0\u38b8\0\u3910\0\u3968\0\u39c0\0\u3a18\0\u3a70\0\u3ac8"+
    "\0\u3b20\0\u3b78\0\u3bd0\0\u3c28\0\u3c80\0\u3cd8\0\u3d30\0\u0790"+
    "\0\u3d88\0\u3de0\0\u3e38\0\u3e90\0\u3ee8\0\u3f40\0\u3f98\0\u3ff0"+
    "\0\u4048\0\u0790\0\u40a0\0\u40f8\0\u4150\0\u41a8\0\u4200\0\u4258"+
    "\0\u42b0\0\u4308\0\u4360\0\u43b8\0\u4410\0\u4468\0\u44c0\0\u4518"+
    "\0\u4570\0\u45c8\0\u4620\0\u4678\0\u46d0\0\u4728\0\u4780\0\u47d8"+
    "\0\u4830\0\u4888\0\u48e0\0\u4938\0\u4990\0\u49e8\0\u4a40\0\u4a98"+
    "\0\u4af0\0\u4b48\0\u4ba0\0\u01b8\0\u4bf8\0\u4c50\0\u4ca8\0\u4d00"+
    "\0\u01b8\0\u4d58\0\u4db0\0\u4e08\0\u4e60\0\u4eb8\0\u4f10\0\u4f68"+
    "\0\u4fc0\0\u5018\0\u5070\0\u50c8\0\u5120\0\u5178\0\u51d0\0\u5228"+
    "\0\u5280\0\u52d8\0\u5330\0\u5388\0\u53e0\0\u5438\0\u5490\0\u54e8"+
    "\0\u5540\0\u5598\0\u55f0\0\u5648\0\u56a0\0\u56f8\0\u5750\0\u57a8"+
    "\0\u5800\0\u5858\0\u58b0\0\u5908\0\u5960\0\u59b8\0\u5a10\0\u5a68"+
    "\0\u5ac0\0\u5b18\0\u5b70\0\u5bc8\0\u5c20\0\u5c78\0\u5cd0\0\u5d28"+
    "\0\u5d80\0\u5dd8\0\u5e30\0\u5e88\0\u5ee0\0\u5f38\0\u5f90\0\u0790"+
    "\0\u5fe8\0\u6040\0\u0790\0\u0790\0\u6098\0\u0790\0\u60f0\0\u0790"+
    "\0\u6148\0\u61a0\0\u61f8\0\u6250\0\u62a8\0\u6300\0\u6358\0\u63b0"+
    "\0\u6408\0\u6460\0\u64b8\0\u6510\0\u6568\0\u65c0\0\u6618\0\u6670"+
    "\0\u66c8\0\u6720\0\u6778\0\u67d0\0\u6828\0\u6880\0\u68d8\0\u6930"+
    "\0\u6988\0\u69e0\0\u01b8\0\130\0\u6a38\0\u6a90\0\u6ae8\0\u01b8"+
    "\0\u6b40\0\u6b98\0\u6bf0\0\u6c48\0\u6ca0\0\u6cf8\0\u6d50\0\u6da8"+
    "\0\u6e00\0\u6e58\0\130\0\u6eb0\0\u6f08\0\u6f60\0\u6fb8\0\u7010"+
    "\0\u7068\0\u70c0\0\u7118\0\u7170\0\u71c8\0\u7220\0\u7278\0\u72d0"+
    "\0\u7328\0\u7380\0\u73d8\0\u7430\0\u7488\0\u74e0\0\u7538\0\u7590"+
    "\0\u75e8\0\u7640\0\u7698\0\u76f0\0\u7748\0\u77a0\0\u77f8\0\u7850"+
    "\0\u78a8\0\u7900\0\u7958\0\u79b0\0\u7a08\0\u7a60\0\u7ab8\0\u7b10"+
    "\0\u7b68\0\u7bc0\0\u0790\0\u0790\0\u7c18\0\u7c70\0\u7cc8\0\u7d20"+
    "\0\u0790\0\u7d78\0\u7dd0\0\u7e28\0\u7e80\0\u7ed8\0\u7f30\0\u7f88"+
    "\0\u7fe0\0\u8038\0\u8090\0\u80e8\0\u8140\0\u8198\0\u81f0\0\u8248"+
    "\0\u82a0\0\u82f8\0\u8350\0\u83a8\0\u8400\0\u01b8\0\u8458\0\u01b8"+
    "\0\130\0\u01b8\0\u84b0\0\u01b8\0\130\0\u8508\0\u8560\0\u85b8"+
    "\0\u8610\0\u8668\0\u01b8\0\u86c0\0\u8718\0\u8770\0\u87c8\0\u8820"+
    "\0\130\0\u8878\0\u88d0\0\u8928\0\u8980\0\u89d8\0\u8a30\0\u8a88"+
    "\0\u8ae0\0\u8b38\0\u8b90\0\u8be8\0\u8c40\0\u8c98\0\u8cf0\0\u8d48"+
    "\0\u8da0\0\u8df8\0\u8e50\0\u8ea8\0\u8f00\0\u8f58\0\u8fb0\0\u9008"+
    "\0\u9060\0\u90b8\0\u9110\0\u9168\0\u91c0\0\u9218\0\u9270\0\u0790"+
    "\0\u92c8\0\u9320\0\u9378\0\u93d0\0\u9428\0\u9480\0\u94d8\0\u9530"+
    "\0\u9588\0\u95e0\0\u9638\0\u9690\0\u96e8\0\u9740\0\u4938\0\u9798"+
    "\0\u97f0\0\u9848\0\u98a0\0\u98f8\0\u9950\0\u01b8\0\u99a8\0\u9a00"+
    "\0\u9a58\0\u9ab0\0\u9b08\0\u9b60\0\u01b8\0\130\0\130\0\u9bb8"+
    "\0\u9c10\0\u9c68\0\u9cc0\0\u9d18\0\u9d70\0\u9dc8\0\u9e20\0\u9e78"+
    "\0\u9ed0\0\u9f28\0\u9f80\0\u9fd8\0\ua030\0\ua088\0\ua0e0\0\ua138"+
    "\0\ua190\0\ua1e8\0\ua240\0\ua298\0\ua2f0\0\ua348\0\ua3a0\0\ua3f8"+
    "\0\ua450\0\ua4a8\0\u0790\0\ua500\0\ua558\0\ua5b0\0\ua608\0\ua660"+
    "\0\ua6b8\0\ua710\0\ua768\0\ua7c0\0\ua818\0\ua870\0\ua8c8\0\ua920"+
    "\0\u01b8\0\u01b8\0\130\0\ua978\0\ua9d0\0\u01b8\0\uaa28\0\130"+
    "\0\uaa80\0\uaad8\0\uab30\0\uab88\0\uabe0\0\uac38\0\uac90\0\uace8"+
    "\0\uad40\0\uad98\0\uadf0\0\uae48\0\uaea0\0\uaef8\0\uaf50\0\uafa8"+
    "\0\ub000\0\ub058\0\ub0b0\0\ub108\0\ub160\0\ub1b8\0\ub210\0\ub268"+
    "\0\ub2c0\0\ub318\0\ub370\0\ub3c8\0\ub420\0\ub478\0\ub4d0\0\ub528"+
    "\0\ub580\0\ub5d8\0\uace8\0\uad40\0\ub630\0\ub688\0\ub6e0\0\ub738"+
    "\0\ub790\0\u01b8\0\ub7e8\0\ub840\0\ub898\0\ub8f0\0\ub948\0\ub9a0"+
    "\0\ub9f8\0\uba50\0\ubaa8\0\ubb00\0\ubb58\0\ubbb0\0\u01b8\0\ubc08"+
    "\0\ubc60\0\ubcb8\0\ubd10\0\ubd68\0\ubdc0\0\u1658\0\ube18\0\u01b8"+
    "\0\ube70\0\ubec8\0\ubf20\0\ubf78\0\ubfd0\0\uc028\0\u01b8\0\130"+
    "\0\uc080\0\uc0d8\0\uc130\0\uc188\0\u01b8\0\uc1e0\0\uc238\0\uc290"+
    "\0\uc2e8\0\ub9a0\0\uc340\0\uc398\0\uc3f0\0\uc448\0\uc4a0\0\uc4f8"+
    "\0\uc550\0\uc5a8\0\uc600\0\uc658\0\uc6b0\0\uc708\0\uc760\0\uc7b8"+
    "\0\uc810\0\uc868\0\uc8c0\0\uc918\0\uc970\0\uc9c8\0\uca20\0\uca78"+
    "\0\ucad0\0\ucb28\0\ucb80\0\ucbd8\0\ucc30\0\ucc88\0\ucce0\0\ucd38"+
    "\0\ucd90\0\ucde8";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\2\3\1\2\2\3\1\4\1\5\1\2\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\2\1\17\2\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\2\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\2\40\1\41\1\40\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\2\40\1\50\2\40\1\51"+
    "\1\52\1\6\1\53\1\54\1\55\1\32\1\33\1\56"+
    "\1\35\1\57\1\60\1\40\1\41\1\40\1\61\1\62"+
    "\1\44\1\63\1\64\1\65\1\40\1\66\3\40\1\67"+
    "\1\70\1\71\1\2\1\40\1\72\1\73\2\2\131\0"+
    "\2\3\1\0\2\3\26\0\1\74\1\75\1\76\1\77"+
    "\1\100\1\101\1\102\1\103\1\104\1\105\2\0\1\106"+
    "\1\0\1\107\1\110\1\0\1\111\1\112\1\113\2\0"+
    "\1\114\5\0\1\75\1\76\1\77\1\100\1\101\1\102"+
    "\1\103\1\104\1\105\1\0\1\106\1\0\1\107\1\110"+
    "\1\0\1\111\1\112\1\113\1\0\1\114\10\0\1\105"+
    "\1\112\10\0\1\115\22\0\1\116\100\0\1\117\2\0"+
    "\1\117\2\0\2\117\2\0\2\117\3\0\1\117\2\0"+
    "\3\117\6\0\7\117\1\120\20\117\2\0\10\117\1\120"+
    "\17\117\4\0\1\117\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\30\6\2\0\30\6\4\0\1\6\16\0"+
    "\1\121\115\0\2\122\3\0\6\122\1\123\113\122\2\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\125"+
    "\1\0\2\20\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\23\40\3\0\1\124"+
    "\1\40\12\0\1\127\22\0\1\130\127\0\1\131\127\0"+
    "\1\132\141\0\1\133\32\0\1\133\32\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\7\40\1\134"+
    "\5\40\1\135\6\40\2\0\1\6\3\40\1\126\6\40"+
    "\1\134\5\40\1\135\6\40\3\0\1\124\1\40\1\0"+
    "\1\136\3\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\12\40\1\137\11\40\2\0\1\6\3\40"+
    "\1\126\11\40\1\137\11\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\1\140\2\40"+
    "\1\126\3\40\1\141\20\40\2\0\1\142\1\140\2\40"+
    "\1\126\3\40\1\141\17\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\143\23\40\2\0\1\6\3\40\1\126\1\143\22\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\7\40\1\144\1\40\1\145"+
    "\10\40\1\146\1\40\2\0\1\6\3\40\1\126\6\40"+
    "\1\144\1\40\1\145\7\40\1\146\2\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\1\147\2\40\1\126\24\40\2\0\1\6\1\147\2\40"+
    "\1\126\23\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\1\150\23\40"+
    "\2\0\1\6\3\40\1\126\1\150\22\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\17\40\1\151\4\40\2\0\1\6\3\40"+
    "\1\126\16\40\1\151\4\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\40\1\152\7\40\1\153\12\40\2\0\1\6\3\40"+
    "\1\126\1\40\1\152\6\40\1\153\12\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\1\154\23\40\2\0\1\6"+
    "\3\40\1\126\1\154\22\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\17\40\1\155\4\40\2\0\1\6\3\40\1\126\16\40"+
    "\1\155\4\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\11\40\1\156"+
    "\12\40\2\0\1\6\3\40\1\126\10\40\1\156\12\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\14\40\1\157\7\40\2\0"+
    "\1\6\3\40\1\126\13\40\1\157\7\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\160\23\40\2\0\1\6\3\40\1\126"+
    "\1\160\22\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\16\40\1\161"+
    "\5\40\2\0\1\6\3\40\1\126\15\40\1\161\5\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\3\40\1\162\10\40\1\163"+
    "\7\40\2\0\1\6\3\40\1\126\3\40\1\162\7\40"+
    "\1\163\7\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\3\40\1\164"+
    "\20\40\2\0\1\6\3\40\1\126\3\40\1\164\17\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\7\40\1\134\5\40\1\135"+
    "\6\40\2\0\1\6\3\40\1\126\6\40\1\165\5\40"+
    "\1\135\6\40\3\0\1\124\1\40\1\0\1\136\3\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\12\40\1\137\11\40\2\0\1\6\1\166\2\40\1\126"+
    "\11\40\1\137\11\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\1\140\2\40\1\126"+
    "\3\40\1\141\20\40\2\0\1\142\1\140\2\40\1\126"+
    "\3\40\1\141\2\40\1\167\2\40\1\170\11\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\1\147\2\40\1\126\24\40\2\0\1\6\1\147"+
    "\2\40\1\126\11\40\1\171\11\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\17\40\1\151\4\40\2\0\1\6\3\40\1\126"+
    "\1\172\12\40\1\173\2\40\1\151\4\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\40\1\152\7\40\1\153\12\40\2\0"+
    "\1\6\3\40\1\174\1\40\1\152\6\40\1\153\12\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\17\40\1\155\4\40\2\0"+
    "\1\6\1\175\2\40\1\126\16\40\1\155\4\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\11\40\1\156\12\40\2\0\1\6"+
    "\3\40\1\126\10\40\1\176\12\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\1\160\23\40\2\0\1\6\3\40\1\126\1\160"+
    "\10\40\1\177\11\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\16\40"+
    "\1\161\5\40\2\0\1\6\3\40\1\126\13\40\1\200"+
    "\1\40\1\161\5\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\3\40"+
    "\1\162\10\40\1\163\7\40\2\0\1\6\3\40\1\126"+
    "\1\201\2\40\1\162\7\40\1\163\5\40\1\202\1\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\3\40\1\164\20\40\2\0"+
    "\1\6\3\40\1\126\3\40\1\164\1\203\16\40\3\0"+
    "\1\124\1\40\124\0\1\204\51\0\1\205\7\0\1\206"+
    "\22\0\1\205\6\0\1\206\102\0\1\207\31\0\1\207"+
    "\66\0\1\210\5\0\1\136\23\0\1\210\5\0\1\136"+
    "\14\0\1\136\55\0\1\211\31\0\1\211\57\0\1\212"+
    "\6\0\1\213\23\0\1\212\6\0\1\213\71\0\1\214"+
    "\32\0\1\214\103\0\1\215\1\0\1\216\10\0\1\217"+
    "\16\0\1\215\1\0\1\216\7\0\1\217\50\0\1\220"+
    "\32\0\1\220\100\0\1\221\32\0\1\221\113\0\1\222"+
    "\31\0\1\222\56\0\1\223\32\0\1\223\113\0\1\224"+
    "\31\0\1\224\67\0\1\225\31\0\1\225\64\0\1\226"+
    "\32\0\1\226\77\0\1\227\10\0\1\230\21\0\1\227"+
    "\7\0\1\230\64\0\1\231\32\0\1\231\30\0\2\115"+
    "\3\0\122\115\3\0\1\117\2\0\1\117\1\0\1\232"+
    "\2\117\2\0\2\117\3\0\1\117\2\0\3\117\6\0"+
    "\7\117\1\120\20\117\2\0\10\117\1\120\17\117\4\0"+
    "\1\117\6\0\1\117\2\0\1\117\1\0\1\232\2\117"+
    "\2\0\2\117\3\0\1\117\2\0\3\117\6\0\7\117"+
    "\1\120\12\117\1\233\5\117\2\0\10\117\1\120\11\117"+
    "\1\233\5\117\4\0\1\117\5\0\2\124\1\0\2\124"+
    "\14\0\1\124\1\0\3\124\4\0\1\124\1\0\3\124"+
    "\1\234\24\124\3\0\3\124\1\234\23\124\3\0\2\124"+
    "\5\0\2\124\1\0\2\124\14\0\1\124\1\0\2\235"+
    "\1\124\4\0\1\124\1\0\3\124\1\234\24\124\3\0"+
    "\3\124\1\234\23\124\3\0\2\124\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\1\236\23\40"+
    "\2\0\1\6\3\40\1\126\1\236\22\40\3\0\1\124"+
    "\1\40\25\0\1\237\156\0\1\240\31\0\1\240\26\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\241\23\40\2\0\1\6\3\40\1\126\1\241\22\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\2\40\1\242\1\126\24\40\2\0\1\6"+
    "\2\40\1\242\1\126\23\40\3\0\1\124\1\40\43\0"+
    "\1\243\32\0\1\243\36\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\12\40\1\244\11\40\2\0"+
    "\1\6\3\40\1\126\11\40\1\244\11\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\14\40\1\245\7\40\2\0\1\6\3\40"+
    "\1\126\13\40\1\245\7\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\1\246\2\40"+
    "\1\126\24\40\2\0\1\6\1\246\2\40\1\126\23\40"+
    "\3\0\1\124\1\40\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\1\6\1\247\1\6\1\250\2\6\1\251"+
    "\1\252\1\253\2\6\1\254\2\6\1\255\1\256\1\6"+
    "\1\257\1\260\5\6\2\0\2\6\1\247\1\6\1\250"+
    "\2\6\1\251\1\252\1\253\1\6\1\254\2\6\1\255"+
    "\1\256\1\6\1\257\1\260\5\6\4\0\1\6\1\261"+
    "\1\262\3\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\2\40\1\263\1\126\15\40\1\264\6\40\2\0\1\6"+
    "\2\40\1\263\1\126\14\40\1\264\6\40\3\0\1\124"+
    "\1\40\1\0\1\265\3\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\15\40\1\266\6\40\2\0"+
    "\1\6\3\40\1\126\14\40\1\266\6\40\3\0\1\124"+
    "\1\40\1\0\1\267\3\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\270\24\40\2\0\1\6\3\40"+
    "\1\270\23\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\4\40\1\271"+
    "\17\40\2\0\1\6\3\40\1\126\4\40\1\271\16\40"+
    "\3\0\1\124\1\40\1\272\4\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\7\40\1\273\14\40"+
    "\2\0\1\6\3\40\1\126\6\40\1\273\14\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\16\40\1\274\5\40\2\0\1\6"+
    "\3\40\1\126\15\40\1\274\5\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\11\40\1\275\12\40\2\0\1\6\3\40\1\126"+
    "\10\40\1\275\12\40\3\0\1\124\1\40\5\0\2\276"+
    "\1\0\2\276\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\23\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\4\40\1\277\10\40\1\300\1\301\5\40\2\0"+
    "\1\6\3\40\1\126\4\40\1\277\7\40\1\300\1\301"+
    "\5\40\3\0\1\124\1\40\1\302\1\303\3\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\16\40"+
    "\1\304\5\40\2\0\1\6\3\40\1\126\15\40\1\304"+
    "\5\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\10\40\1\305\13\40"+
    "\2\0\1\6\3\40\1\126\7\40\1\305\13\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\306\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\12\40\1\307\11\40"+
    "\2\0\1\6\3\40\1\126\11\40\1\307\11\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\310\13\40\1\311\4\40\1\312\3\40"+
    "\2\0\1\6\3\40\1\310\12\40\1\311\10\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\14\40\1\313\7\40\2\0\1\6"+
    "\3\40\1\126\13\40\1\313\7\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\1\314\23\40\2\0\1\6\3\40\1\126\1\314"+
    "\22\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\17\40\1\315\4\40"+
    "\2\0\1\6\3\40\1\126\16\40\1\315\4\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\4\40\1\316\17\40\2\0\1\6"+
    "\3\40\1\126\4\40\1\316\16\40\3\0\1\124\1\40"+
    "\1\317\4\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\241\23\40\2\0\1\6\3\40\1\126"+
    "\1\241\14\40\1\320\5\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\2\40\1\321\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\1\322\2\40"+
    "\1\126\23\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\6\40\1\323\14\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\10\40"+
    "\1\324\12\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\4\40\1\325\16\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\1\326"+
    "\22\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\6"+
    "\3\40\1\126\7\40\1\327\13\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\306\2\40\1\330\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\17\40\1\331\3\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\2\40\1\332\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\20\40\1\333\2\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\12\40\1\334\10\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\335"+
    "\23\40\3\0\1\124\1\40\5\0\2\205\1\0\2\205"+
    "\167\0\1\302\10\0\1\303\1\336\20\0\1\302\7\0"+
    "\1\303\1\336\12\0\1\302\1\303\57\0\1\337\31\0"+
    "\1\337\61\0\1\340\32\0\1\340\106\0\1\341\31\0"+
    "\1\341\77\0\1\342\31\0\1\342\55\0\1\343\32\0"+
    "\1\343\76\0\1\344\16\0\1\265\13\0\1\344\15\0"+
    "\1\265\14\0\1\265\60\0\1\267\31\0\1\267\14\0"+
    "\1\267\42\0\1\345\32\0\1\345\101\0\1\272\32\0"+
    "\1\272\23\0\1\272\53\0\1\346\31\0\1\346\104\0"+
    "\1\347\31\0\1\347\70\0\1\350\31\0\1\350\102\0"+
    "\1\351\31\0\1\351\67\0\1\352\31\0\1\352\113\0"+
    "\1\353\100\0\1\354\13\0\1\355\4\0\1\356\11\0"+
    "\1\354\12\0\1\355\62\0\1\357\32\0\1\357\113\0"+
    "\1\360\31\0\1\360\62\0\1\317\32\0\1\317\23\0"+
    "\1\317\5\0\1\117\2\0\1\117\1\0\1\232\2\117"+
    "\2\0\2\117\3\0\1\117\2\0\3\117\6\0\7\117"+
    "\1\120\12\117\1\361\5\117\2\0\10\117\1\120\11\117"+
    "\1\361\5\117\4\0\1\117\5\0\2\124\1\0\2\124"+
    "\14\0\1\124\1\0\3\124\4\0\1\124\1\0\3\124"+
    "\1\234\1\362\23\124\3\0\3\124\1\234\1\362\22\124"+
    "\3\0\2\124\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\2\40\1\363\1\126\24\40\2\0\1\6\2\40"+
    "\1\363\1\126\23\40\3\0\1\124\1\40\25\0\1\364"+
    "\161\0\1\365\31\0\1\365\23\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\14\40\1\366\7\40"+
    "\2\0\1\6\3\40\1\126\13\40\1\366\7\40\3\0"+
    "\1\124\1\40\5\0\2\367\1\0\2\367\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\5\0\2\243\1\0\2\243"+
    "\123\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\7\40\1\370\14\40\2\0\1\6\3\40\1\126"+
    "\6\40\1\370\14\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\1\371\2\40\1\126"+
    "\24\40\2\0\1\6\1\371\2\40\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\14\40\1\372\7\40\2\0\1\6"+
    "\3\40\1\126\13\40\1\372\7\40\3\0\1\124\1\40"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\16\6"+
    "\1\373\1\6\1\374\2\6\1\375\4\6\2\0\16\6"+
    "\1\373\1\6\1\374\2\6\1\375\4\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\10\6"+
    "\1\376\17\6\2\0\11\6\1\376\16\6\4\0\1\6"+
    "\1\377\14\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\2\6\1\u0100\25\6\2\0\3\6\1\u0100\24\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\1\6\1\u0101"+
    "\7\0\4\6\1\u0102\23\6\2\0\5\6\1\u0102\22\6"+
    "\4\0\1\6\15\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\14\6\1\u0103\1\u0104\12\6\2\0\14\6\1\u0103"+
    "\1\u0104\12\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\10\6\1\u0105\17\6\2\0\11\6"+
    "\1\u0105\16\6\4\0\1\6\1\u0106\14\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\17\6\1\u0107\10\6\2\0"+
    "\17\6\1\u0107\10\6\4\0\1\6\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\2\6\1\u0108\1\6\1\u0109"+
    "\12\6\1\u010a\10\6\2\0\3\6\1\u0108\1\6\1\u0109"+
    "\11\6\1\u010a\10\6\4\0\1\6\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\4\6\1\u010b\3\6\1\u010c"+
    "\17\6\2\0\5\6\1\u010b\3\6\1\u010c\16\6\4\0"+
    "\1\6\1\u010d\54\0\1\u010e\1\u010f\30\0\1\u010e\1\u010f"+
    "\62\0\1\u0110\1\0\1\u0111\12\0\1\u0112\15\0\1\u0110"+
    "\1\0\1\u0111\11\0\1\u0112\22\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\4\40\1\u0113\17\40"+
    "\2\0\1\6\3\40\1\126\4\40\1\u0113\16\40\3\0"+
    "\1\124\1\40\1\u0114\4\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\2\40\1\u0115\1\126\24\40\2\0\1\6"+
    "\2\40\1\u0115\1\126\23\40\3\0\1\124\1\40\43\0"+
    "\1\u0116\32\0\1\u0116\36\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\1\u0117\23\40\2\0\1\6"+
    "\3\40\1\126\1\u0117\22\40\3\0\1\124\1\40\45\0"+
    "\1\u0118\32\0\1\u0118\34\0\2\u0119\1\0\2\u0119\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\1\236\23\40\2\0\1\6"+
    "\3\40\1\126\1\236\22\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\16\40\1\u011a\5\40\2\0\1\6\3\40\1\126\15\40"+
    "\1\u011a\5\40\3\0\1\124\1\40\63\0\1\u011b\31\0"+
    "\1\u011b\17\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\15\40\1\u011c\6\40\2\0\1\6\3\40"+
    "\1\126\14\40\1\u011c\6\40\3\0\1\124\1\40\1\0"+
    "\1\u011d\3\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\u011e\23\40\2\0\1\6\3\40\1\126"+
    "\1\u011e\22\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\16\40\1\u011f"+
    "\5\40\2\0\1\6\3\40\1\126\15\40\1\u011f\5\40"+
    "\3\0\1\124\1\40\5\0\2\276\1\0\2\276\14\0"+
    "\1\124\1\0\3\124\4\0\1\124\1\0\3\124\1\234"+
    "\24\124\3\0\3\124\1\234\23\124\3\0\2\124\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\16\40\1\u0120\5\40\2\0\1\6\3\40\1\126\15\40"+
    "\1\u0120\5\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\1\u0121\23\40"+
    "\2\0\1\6\3\40\1\126\1\u0121\22\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\u0122\23\40\2\0\1\6\3\40\1\126"+
    "\1\u0122\22\40\3\0\1\124\1\40\63\0\1\u0123\31\0"+
    "\1\u0123\57\0\1\u0124\32\0\1\u0124\34\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\4\40\1\u0125"+
    "\6\40\1\u0126\10\40\2\0\1\6\3\40\1\126\4\40"+
    "\1\u0125\5\40\1\u0126\10\40\3\0\1\124\1\40\1\u0127"+
    "\4\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\u0128\3\40\1\126\23\40\3\0"+
    "\1\124\1\40\15\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\13\6\1\u0129\14\6\2\0\13\6\1\u0129\14\6"+
    "\4\0\1\6\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\2\40\1\u012a\1\126\24\40\2\0\1\6\2\40"+
    "\1\u012a\1\126\23\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\1\236"+
    "\3\40\1\u012b\17\40\2\0\1\6\3\40\1\126\1\236"+
    "\3\40\1\u012b\16\40\3\0\1\124\1\40\1\u012c\4\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\u012d\23\40\2\0\1\6\3\40\1\126\1\u012d\22\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\1\u012e\23\40\2\0\1\6"+
    "\3\40\1\126\1\u012e\22\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\4\40\1\u012f\17\40\2\0\1\6\3\40\1\126\4\40"+
    "\1\u012f\16\40\3\0\1\124\1\40\1\u0130\4\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\11\40"+
    "\1\u0131\12\40\2\0\1\6\3\40\1\126\10\40\1\u0131"+
    "\12\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\1\u0132\23\40\2\0"+
    "\1\6\3\40\1\126\1\u0132\22\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\7\40\1\u0133\14\40\2\0\1\6\3\40\1\126"+
    "\6\40\1\u0133\14\40\3\0\1\124\1\40\54\0\1\u0134"+
    "\31\0\1\u0134\26\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\5\40\1\u0135\15\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\14\40\1\u0136\6\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\11\40\1\u0137\2\40\1\u0138\6\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\6\3\40\1\126\15\40\1\u0139"+
    "\5\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\6"+
    "\3\40\1\126\2\40\1\u013a\20\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\6\3\40\1\126\1\40\1\u013b"+
    "\21\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\6"+
    "\3\40\1\126\1\u013c\22\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\6\40\1\u013d\14\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\14\40\1\u013e\6\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\15\40\1\u013f\5\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\1\u0140\22\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\1\236"+
    "\23\40\2\0\1\6\3\40\1\126\1\236\14\40\1\u0141"+
    "\5\40\3\0\1\124\1\40\45\0\1\u0142\32\0\1\u0142"+
    "\100\0\1\u0130\32\0\1\u0130\23\0\1\u0130\60\0\1\u0143"+
    "\31\0\1\u0143\70\0\1\u0144\31\0\1\u0144\62\0\1\u0145"+
    "\32\0\1\u0145\114\0\1\u0146\31\0\1\u0146\65\0\1\u0114"+
    "\32\0\1\u0114\23\0\1\u0114\4\0\2\345\1\0\2\345"+
    "\200\0\1\u011d\31\0\1\u011d\14\0\1\u011d\43\0\1\u0147"+
    "\32\0\1\u0147\112\0\1\u0148\31\0\1\u0148\63\0\1\u0127"+
    "\6\0\1\u0149\23\0\1\u0127\5\0\1\u0149\15\0\1\u0127"+
    "\72\0\1\u014a\110\0\1\u014b\31\0\1\u014b\72\0\1\u012c"+
    "\32\0\1\u012c\23\0\1\u012c\44\0\1\u014c\32\0\1\u014c"+
    "\74\0\1\u014d\32\0\1\u014d\105\0\1\u014e\31\0\1\u014e"+
    "\64\0\1\u014f\32\0\1\u014f\35\0\1\117\2\0\1\117"+
    "\1\0\1\232\2\117\2\0\2\117\3\0\1\117\2\0"+
    "\3\117\6\0\7\117\1\120\7\117\1\u0150\10\117\2\0"+
    "\10\117\1\120\6\117\1\u0150\10\117\4\0\1\117\5\0"+
    "\2\124\1\0\2\124\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\2\124\1\u0151\1\234\24\124\3\0\2\124"+
    "\1\u0151\1\234\23\124\3\0\2\124\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\23\40\3\0\1\124\1\40\1\u0152"+
    "\3\0\21\364\1\u0153\105\364\37\0\1\u0154\32\0\1\u0154"+
    "\37\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\16\40\1\u0155\5\40\2\0\1\6\3\40\1\126"+
    "\15\40\1\u0155\5\40\3\0\1\124\1\40\5\0\2\367"+
    "\1\0\2\367\14\0\1\124\1\0\3\124\4\0\1\124"+
    "\1\0\3\124\1\234\24\124\3\0\3\124\1\234\23\124"+
    "\3\0\2\124\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\1\u0156\23\40\2\0\1\6\3\40"+
    "\1\126\1\u0156\22\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\2\40\1\u0157\1\126"+
    "\24\40\2\0\1\6\2\40\1\u0157\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\u0158\1\0\2\u0158\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\3\6\1\u0159\24\6\2\0\4\6"+
    "\1\u0159\23\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\22\6\1\u015a\5\6\2\0\22\6"+
    "\1\u015a\5\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\24\6\1\u015b\3\6\2\0\30\6"+
    "\4\0\1\6\65\0\1\u015c\57\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\10\6\1\u015d\17\6\2\0\11\6"+
    "\1\u015d\16\6\4\0\1\6\1\u015e\14\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\1\u015f\27\6\2\0\1\6"+
    "\1\u015f\26\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\6\6\1\u0160\21\6\2\0\7\6"+
    "\1\u0160\20\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\17\6\1\u0161\10\6\2\0\17\6"+
    "\1\u0161\10\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\15\6\1\u0162\12\6\2\0\15\6"+
    "\1\u0162\12\6\4\0\1\6\56\0\1\u0163\31\0\1\u0163"+
    "\34\0\1\6\7\0\1\6\2\0\2\6\7\0\22\6"+
    "\1\u0164\5\6\2\0\22\6\1\u0164\5\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\20\6"+
    "\1\u0165\7\6\2\0\20\6\1\u0165\7\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\13\6"+
    "\1\u0166\14\6\2\0\13\6\1\u0166\14\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\1\u0167"+
    "\27\6\2\0\1\6\1\u0167\26\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\26\6\1\u0168"+
    "\1\6\2\0\25\6\1\u0168\2\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\22\6\1\u0169"+
    "\5\6\2\0\22\6\1\u0169\5\6\4\0\1\6\63\0"+
    "\1\u016a\31\0\1\u016a\61\0\1\u016b\32\0\1\u016b\105\0"+
    "\1\u016c\31\0\1\u016c\76\0\1\u016d\31\0\1\u016d\70\0"+
    "\1\u016e\31\0\1\u016e\62\0\1\u016f\32\0\1\u016f\40\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\10\40\1\u0170\13\40\2\0\1\6\3\40\1\126\7\40"+
    "\1\u0170\13\40\3\0\1\124\1\40\55\0\1\u0171\31\0"+
    "\1\u0171\25\0\2\u0172\1\0\2\u0172\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\u0116\1\0\2\u0116\123\0"+
    "\2\u0173\1\0\1\u0173\1\u0174\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\6\3\40\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\u0175\1\0\1\u0175\1\u0176\123\0"+
    "\2\u0119\1\0\2\u0119\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\24\124\3\0\3\124\1\234"+
    "\23\124\3\0\2\124\5\0\2\u0177\1\0\2\u0177\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\23\40\3\0\1\124\1\40\5\0\2\u011b\1\0"+
    "\2\u011b\123\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\u0178\23\40\2\0\1\6\3\40\1\126"+
    "\1\u0178\22\40\3\0\1\124\1\40\45\0\1\u0179\32\0"+
    "\1\u0179\34\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\7\40\1\u017a\14\40\2\0\1\6\3\40"+
    "\1\126\6\40\1\u017a\14\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\4\40\1\u017b\17\40\2\0\1\6\3\40\1\126\4\40"+
    "\1\u017b\16\40\3\0\1\124\1\40\1\u017c\4\0\2\u017d"+
    "\1\0\2\u017d\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\23\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\14\40\1\u017e\7\40\2\0\1\6\3\40\1\126"+
    "\13\40\1\u017e\7\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\2\40"+
    "\1\u017f\21\40\2\0\1\6\3\40\1\126\2\40\1\u017f"+
    "\20\40\3\0\1\124\1\40\5\0\2\u0123\1\0\2\u0123"+
    "\177\0\1\u0180\31\0\1\u0180\21\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\10\40\1\u0181\13\40"+
    "\2\0\1\6\3\40\1\126\7\40\1\u0181\13\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\1\u0182\2\40\1\126\24\40\2\0\1\6\1\u0182"+
    "\2\40\1\126\23\40\3\0\1\124\1\40\55\0\1\u0183"+
    "\31\0\1\u0183\35\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\1\u0184\27\6\2\0\1\6\1\u0184\26\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\16\6\1\u0185\11\6\2\0\16\6\1\u0185\11\6\4\0"+
    "\1\6\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\u0186\23\40\2\0\1\6\3\40\1\126"+
    "\1\u0186\22\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\14\40\1\u0187"+
    "\7\40\2\0\1\6\3\40\1\126\13\40\1\u0187\7\40"+
    "\3\0\1\124\1\40\61\0\1\u0188\31\0\1\u0188\21\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\1\u0189\2\40"+
    "\1\126\24\40\2\0\1\6\1\u0189\2\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\14\40\1\u018a\7\40\2\0"+
    "\1\6\3\40\1\126\13\40\1\u018a\7\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\11\40\1\u018b\12\40\2\0\1\6\3\40"+
    "\1\126\10\40\1\u018b\12\40\3\0\1\124\1\40\56\0"+
    "\1\u018c\31\0\1\u018c\24\0\2\u018d\1\0\2\u018d\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\21\40\1\u018e\2\40\2\0"+
    "\1\6\3\40\1\126\17\40\1\u018e\3\40\3\0\1\124"+
    "\1\40\5\0\2\u018f\1\0\2\u018f\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\1\u0190\23\40\2\0\1\6"+
    "\3\40\1\126\1\u0190\22\40\3\0\1\124\1\40\45\0"+
    "\1\u0191\32\0\1\u0191\34\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\2\40\1\u0192\20\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\14\40\1\u0193\6\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\13\40\1\u0194\7\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\u0195\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\23\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\3\40"+
    "\1\u0196\17\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\4\40\1\u0197\16\40\3\0\1\124"+
    "\1\40\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\u0198\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\3\40\1\u0199\17\40\3\0\1\124\1\40\47\0"+
    "\1\u019a\32\0\1\u019a\110\0\1\u019b\31\0\1\u019b\57\0"+
    "\1\u019c\32\0\1\u019c\72\0\1\u019d\32\0\1\u019d\36\0"+
    "\2\u0146\1\0\2\u0146\172\0\1\u019e\31\0\1\u019e\72\0"+
    "\1\u017c\32\0\1\u017c\23\0\1\u017c\40\0\1\u019f\32\0"+
    "\1\u019f\74\0\1\u01a0\32\0\1\u01a0\112\0\1\u01a1\31\0"+
    "\1\u01a1\57\0\1\u01a2\32\0\1\u01a2\114\0\1\u01a3\31\0"+
    "\1\u01a3\21\0\2\u01a4\1\0\2\u01a4\54\0\1\u01a5\30\0"+
    "\1\u01a5\15\0\2\u014f\1\0\2\u014f\124\0\1\117\2\0"+
    "\1\117\1\0\1\232\2\117\2\0\2\117\3\0\1\117"+
    "\2\0\2\117\1\u01a6\6\0\7\117\1\120\11\117\1\u01a7"+
    "\6\117\2\0\10\117\1\120\10\117\1\u01a7\6\117\4\0"+
    "\1\117\1\0\1\u01a8\3\0\2\124\1\0\2\124\14\0"+
    "\1\124\1\0\3\124\4\0\1\124\1\0\3\124\1\234"+
    "\24\124\3\0\3\124\1\234\23\124\3\0\2\124\1\u0152"+
    "\54\0\1\124\31\0\1\124\24\0\21\364\1\u01a9\105\364"+
    "\36\0\1\u01aa\32\0\1\u01aa\40\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\u01ab"+
    "\3\40\1\126\23\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\1\u01ac\2\40\1\126"+
    "\24\40\2\0\1\6\1\u01ac\2\40\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\16\40\1\u01ad\5\40\2\0\1\6"+
    "\3\40\1\126\15\40\1\u01ad\5\40\3\0\1\124\1\40"+
    "\5\0\2\u0158\1\0\2\u0158\14\0\1\124\1\0\3\124"+
    "\4\0\1\124\1\0\3\124\1\234\24\124\3\0\3\124"+
    "\1\234\23\124\3\0\2\124\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\27\6\1\u01ae\2\0\26\6\1\u01ae"+
    "\1\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\22\6\1\u01af\5\6\2\0\22\6\1\u01af"+
    "\5\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\2\6\1\u01b0\25\6\2\0\3\6\1\u01b0"+
    "\24\6\4\0\1\6\43\0\1\u01b1\32\0\1\u01b1\46\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\3\6\1\u01b2"+
    "\24\6\2\0\4\6\1\u01b2\23\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\23\6\1\u01b3"+
    "\4\6\2\0\23\6\1\u01b3\4\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\12\6\1\u01b4"+
    "\15\6\2\0\12\6\1\u01b4\15\6\4\0\1\6\2\0"+
    "\1\u01b5\50\0\1\u01b5\31\0\1\u01b5\24\0\1\u01b5\12\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\10\6\1\u01b6"+
    "\17\6\2\0\11\6\1\u01b6\16\6\4\0\1\6\1\u01b7"+
    "\14\0\1\6\7\0\1\6\2\0\2\6\7\0\10\6"+
    "\1\u01b8\17\6\2\0\11\6\1\u01b8\16\6\4\0\1\6"+
    "\1\u01b9\14\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\4\6\1\u01ba\23\6\2\0\5\6\1\u01ba\22\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\14\6\1\u01bb\13\6\2\0\14\6\1\u01bb\13\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\22\6\1\u01bc\5\6\2\0\22\6\1\u01bc\5\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\13\6\1\u01bd\14\6\2\0\13\6\1\u01bd\14\6\4\0"+
    "\1\6\54\0\1\u01be\31\0\1\u01be\105\0\1\u01bf\31\0"+
    "\1\u01bf\62\0\1\u01b9\32\0\1\u01b9\23\0\1\u01b9\44\0"+
    "\1\u01c0\32\0\1\u01c0\104\0\1\u01c1\31\0\1\u01c1\25\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\1\u01c2\2\40"+
    "\1\126\24\40\2\0\1\6\1\u01c2\2\40\1\126\23\40"+
    "\3\0\1\124\1\40\41\0\1\u01c3\32\0\1\u01c3\40\0"+
    "\2\u0172\1\0\2\u0172\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\24\124\3\0\3\124\1\234"+
    "\23\124\3\0\2\124\5\0\2\u0173\1\0\2\u0173\14\0"+
    "\1\124\1\0\3\124\4\0\1\124\1\0\3\124\1\234"+
    "\24\124\3\0\3\124\1\234\23\124\3\0\2\124\5\0"+
    "\2\u0173\1\0\2\u0173\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\4\124\1\u01c4\17\124\3\0"+
    "\3\124\1\234\4\124\1\u01c4\16\124\3\0\2\124\1\u01c5"+
    "\4\0\2\u0175\1\0\2\u0175\123\0\2\u0175\1\0\2\u0175"+
    "\37\0\1\u01c5\32\0\1\u01c5\23\0\1\u01c5\4\0\2\u0177"+
    "\1\0\2\u0177\14\0\1\124\1\0\3\124\4\0\1\124"+
    "\1\0\3\124\1\234\24\124\3\0\3\124\1\234\23\124"+
    "\3\0\2\124\5\0\2\u01c6\1\0\2\u01c6\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\5\0\2\u0179\1\0\2\u0179"+
    "\123\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\1\u01c7\23\40\2\0\1\6\3\40\1\126\1\u01c7"+
    "\22\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\7\40\1\u01c8\14\40"+
    "\2\0\1\6\3\40\1\126\6\40\1\u01c8\14\40\3\0"+
    "\1\124\1\40\54\0\1\u01c9\31\0\1\u01c9\26\0\2\u017d"+
    "\1\0\2\u017d\14\0\1\124\1\0\3\124\4\0\1\124"+
    "\1\0\3\124\1\234\24\124\3\0\3\124\1\234\23\124"+
    "\3\0\2\124\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\16\40\1\u01ca\5\40\2\0\1\6"+
    "\3\40\1\126\15\40\1\u01ca\5\40\3\0\1\124\1\40"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\1\u01cb\23\40\2\0\1\6\3\40\1\126\1\u01cb"+
    "\22\40\3\0\1\124\1\40\63\0\1\u01cc\31\0\1\u01cc"+
    "\17\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\13\40\1\u01cd\10\40\2\0\1\6\3\40\1\126"+
    "\12\40\1\u01cd\10\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\14\40"+
    "\1\u01ce\7\40\2\0\1\6\3\40\1\126\13\40\1\u01ce"+
    "\7\40\3\0\1\124\1\40\60\0\1\u01cf\31\0\1\u01cf"+
    "\32\0\1\6\7\0\1\6\2\0\2\6\7\0\13\6"+
    "\1\u01d0\14\6\2\0\13\6\1\u01d0\14\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\1\u01d1"+
    "\27\6\2\0\1\6\1\u01d1\26\6\4\0\1\6\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\15\40\1\u01d2\6\40\2\0\1\6\3\40\1\126\14\40"+
    "\1\u01d2\6\40\3\0\1\124\1\40\1\0\1\u01d3\3\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\u01d4\23\40\2\0\1\6\3\40\1\126\1\u01d4\22\40"+
    "\3\0\1\124\1\40\45\0\1\u01d5\32\0\1\u01d5\34\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\16\40\1\u01d6\5\40\2\0\1\6\3\40\1\126\15\40"+
    "\1\u01d6\5\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\15\40\1\u01d7"+
    "\6\40\2\0\1\6\3\40\1\126\14\40\1\u01d7\6\40"+
    "\3\0\1\124\1\40\1\0\1\u01d8\3\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\2\40\1\u01d9"+
    "\21\40\2\0\1\6\3\40\1\126\2\40\1\u01d9\20\40"+
    "\3\0\1\124\1\40\47\0\1\u01da\32\0\1\u01da\32\0"+
    "\2\u018d\1\0\2\u018d\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\24\124\3\0\3\124\1\234"+
    "\23\124\3\0\2\124\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\3\40\1\u01db\20\40\2\0"+
    "\1\6\3\40\1\126\3\40\1\u01db\17\40\3\0\1\124"+
    "\1\40\5\0\2\u018f\1\0\2\u018f\14\0\1\124\1\0"+
    "\3\124\4\0\1\124\1\0\3\124\1\234\24\124\3\0"+
    "\3\124\1\234\23\124\3\0\2\124\5\0\2\u01dc\1\0"+
    "\2\u01dc\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\23\40\3\0\1\124\1\40\5\0"+
    "\2\u0191\1\0\2\u0191\123\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\13\40\1\u01dd\7\40\3\0\1\124\1\40\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\6\6\1\u01de\12\6\1\u01df\6\6\4\0\1\6\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\15\40\1\u01e0\5\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\2\40"+
    "\1\u01e1\1\126\23\40\3\0\1\124\1\40\15\0\1\6"+
    "\7\0\1\6\2\0\2\6\7\0\30\6\2\0\1\6"+
    "\1\u01e2\26\6\4\0\1\6\45\0\1\u01e3\32\0\1\u01e3"+
    "\122\0\1\u01e4\75\0\1\u01e5\32\0\1\u01e5\116\0\1\u01e6"+
    "\31\0\1\u01e6\57\0\1\u01e7\32\0\1\u01e7\110\0\1\u01e8"+
    "\31\0\1\u01e8\70\0\1\u01e9\31\0\1\u01e9\62\0\1\u01ea"+
    "\32\0\1\u01ea\116\0\1\u01eb\31\0\1\u01eb\74\0\1\u01d8"+
    "\31\0\1\u01d8\14\0\1\u01d8\3\0\2\u01a4\1\0\2\u01a4"+
    "\166\0\1\u01ec\32\0\1\u01ec\32\0\1\117\2\0\1\117"+
    "\1\0\1\232\2\117\2\0\2\117\3\0\1\117\1\0"+
    "\1\u01ed\3\117\6\0\7\117\1\120\20\117\2\0\10\117"+
    "\1\120\17\117\4\0\1\117\6\0\1\117\2\0\1\117"+
    "\1\0\1\232\2\117\2\0\2\117\3\0\1\117\2\0"+
    "\2\117\1\u01a6\6\0\7\117\1\120\20\117\2\0\10\117"+
    "\1\120\17\117\4\0\1\117\32\0\1\u01ee\101\0\21\364"+
    "\1\u01a9\10\364\1\u01ef\74\364\51\0\1\u01f0\31\0\1\u01f0"+
    "\36\0\1\6\7\0\1\6\2\0\2\6\7\0\10\6"+
    "\1\u01f1\17\6\2\0\11\6\1\u01f1\16\6\4\0\1\6"+
    "\1\u01f2\4\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\11\40\1\u01f3\12\40\2\0\1\6\3\40"+
    "\1\126\10\40\1\u01f3\12\40\3\0\1\124\1\40\5\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\1\u01f4\23\40\2\0\1\6\3\40\1\126\1\u01f4\22\40"+
    "\3\0\1\124\1\40\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\16\6\1\u01f5\11\6\2\0\16\6\1\u01f5"+
    "\11\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\22\6\1\u01f6\5\6\2\0\22\6\1\u01f6"+
    "\5\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\16\6\1\u01f7\11\6\2\0\16\6\1\u01f7"+
    "\11\6\4\0\1\6\57\0\1\u01f8\31\0\1\u01f8\33\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\17\6\1\u01f9"+
    "\10\6\2\0\17\6\1\u01f9\10\6\4\0\1\6\60\0"+
    "\1\u01fa\31\0\1\u01fa\32\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\2\6\1\u01fb\25\6\2\0\3\6\1\u01fb"+
    "\24\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\1\u01fc\27\6\2\0\1\6\1\u01fc\26\6"+
    "\4\0\1\6\15\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\4\6\1\u01fd\23\6\2\0\5\6\1\u01fd\22\6"+
    "\4\0\1\6\45\0\1\u01fe\32\0\1\u01fe\112\0\1\u01ff"+
    "\31\0\1\u01ff\55\0\1\u0200\32\0\1\u0200\36\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\7\40"+
    "\1\u0201\14\40\2\0\1\6\3\40\1\126\6\40\1\u0201"+
    "\14\40\3\0\1\124\1\40\54\0\1\u0202\31\0\1\u0202"+
    "\26\0\2\124\1\0\2\124\14\0\1\124\1\0\3\124"+
    "\4\0\1\124\1\0\3\124\1\234\1\124\1\u0203\22\124"+
    "\3\0\3\124\1\234\1\124\1\u0203\21\124\3\0\2\124"+
    "\46\0\1\u0204\32\0\1\u0204\33\0\2\u01c6\1\0\2\u01c6"+
    "\14\0\1\124\1\0\3\124\4\0\1\124\1\0\3\124"+
    "\1\234\24\124\3\0\3\124\1\234\23\124\3\0\2\124"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\10\40\1\u0205\13\40\2\0\1\6\3\40\1\126"+
    "\7\40\1\u0205\13\40\3\0\1\124\1\40\5\0\2\u0206"+
    "\1\0\2\u0206\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\23\40\3\0\1\124\1\40"+
    "\5\0\2\u01c9\1\0\2\u01c9\123\0\2\u0207\1\0\2\u0207"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\6"+
    "\3\40\1\126\23\40\3\0\1\124\1\40\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\14\40"+
    "\1\u0208\7\40\2\0\1\6\3\40\1\126\13\40\1\u0208"+
    "\7\40\3\0\1\124\1\40\5\0\2\u01cc\1\0\2\u01cc"+
    "\123\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\1\u0209"+
    "\2\40\1\126\24\40\2\0\1\6\1\u0209\2\40\1\126"+
    "\23\40\3\0\1\124\1\40\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\u020a"+
    "\3\40\1\126\23\40\3\0\1\124\1\40\41\0\1\u020b"+
    "\32\0\1\u020b\50\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\4\6\1\u020c\23\6\2\0\5\6\1\u020c\22\6"+
    "\4\0\1\6\15\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\3\6\1\u020d\24\6\2\0\4\6\1\u020d\23\6"+
    "\4\0\1\6\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\15\40\1\u020e\6\40\2\0\1\6"+
    "\3\40\1\126\14\40\1\u020e\6\40\3\0\1\124\1\40"+
    "\1\0\1\u020f\60\0\1\u020f\31\0\1\u020f\14\0\1\u020f"+
    "\3\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\2\40"+
    "\1\u0210\1\126\24\40\2\0\1\6\2\40\1\u0210\1\126"+
    "\23\40\3\0\1\124\1\40\43\0\1\u0211\32\0\1\u0211"+
    "\36\0\2\u0212\1\0\2\u0212\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\24\40\2\0\1\6\3\40\1\126\23\40\3\0"+
    "\1\124\1\40\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\1\u0213\23\40\2\0\1\6\3\40"+
    "\1\126\1\u0213\22\40\3\0\1\124\1\40\45\0\1\u0214"+
    "\32\0\1\u0214\34\0\2\u0215\1\0\2\u0215\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\5\0\2\u01da\1\0\2\u01da"+
    "\123\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\4\40\1\u0216\17\40\2\0\1\6\3\40\1\126"+
    "\4\40\1\u0216\16\40\3\0\1\124\1\40\1\u0217\4\0"+
    "\2\u01dc\1\0\2\u01dc\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\24\124\3\0\3\124\1\234"+
    "\23\124\3\0\2\124\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\11\40\1\u0218\11\40\3\0\1\124\1\40\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\1\6\1\u0219\26\6\4\0\1\6\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\30\6\2\0\11\6\1\u021a"+
    "\16\6\4\0\1\6\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\5\40\1\u021b\15\40\3\0\1\124\1\40\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\13\6\1\u021c\14\6\4\0\1\6\61\0\1\u021d\31\0"+
    "\1\u021d\65\0\1\u01f2\32\0\1\u01f2\23\0\1\u01f2\55\0"+
    "\1\u021e\31\0\1\u021e\64\0\1\u021f\32\0\1\u021f\104\0"+
    "\1\u0220\31\0\1\u0220\113\0\1\u0221\101\0\1\u0222\32\0"+
    "\1\u0222\73\0\1\u0223\32\0\1\u0223\35\0\2\u01eb\1\0"+
    "\2\u01eb\167\0\1\u0217\32\0\1\u0217\23\0\1\u0217\26\0"+
    "\1\u0224\127\0\1\u01ed\105\0\2\u01f0\1\0\2\u01f0\133\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\15\6\1\u0225"+
    "\12\6\2\0\15\6\1\u0225\12\6\4\0\1\6\56\0"+
    "\1\u0226\31\0\1\u0226\24\0\2\u0227\1\0\2\u0227\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\23\40\3\0\1\124\1\40\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\14\40\1\u0228"+
    "\7\40\2\0\1\6\3\40\1\126\13\40\1\u0228\7\40"+
    "\3\0\1\124\1\40\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\15\6\1\u0229\12\6\2\0\15\6\1\u0229"+
    "\12\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\15\6\1\u022a\12\6\2\0\15\6\1\u022a"+
    "\12\6\4\0\1\6\56\0\1\u022b\31\0\1\u022b\34\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\22\6\1\u022c"+
    "\5\6\2\0\22\6\1\u022c\5\6\4\0\1\6\63\0"+
    "\1\u022d\31\0\1\u022d\27\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\22\6\1\u022e\5\6\2\0\22\6\1\u022e"+
    "\5\6\4\0\1\6\15\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\20\6\1\u022f\7\6\2\0\20\6\1\u022f"+
    "\7\6\4\0\1\6\63\0\1\u0230\31\0\1\u0230\17\0"+
    "\2\u0231\1\0\2\u0231\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\126\23\40\3\0\1\124"+
    "\1\40\5\0\2\u0202\1\0\2\u0202\123\0\2\u0203\1\0"+
    "\2\u0203\14\0\1\124\1\0\3\124\4\0\1\124\1\0"+
    "\3\124\1\234\24\124\3\0\3\124\1\234\23\124\3\0"+
    "\2\124\5\0\2\u0204\1\0\2\u0204\123\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\1\u0232\23\40"+
    "\2\0\1\6\3\40\1\126\1\u0232\22\40\3\0\1\124"+
    "\1\40\5\0\2\u0206\1\0\2\u0206\14\0\1\124\1\0"+
    "\3\124\4\0\1\124\1\0\3\124\1\234\24\124\3\0"+
    "\3\124\1\234\23\124\3\0\2\124\5\0\2\u0207\1\0"+
    "\2\u0207\14\0\1\124\1\0\3\124\4\0\1\124\1\0"+
    "\3\124\1\234\24\124\3\0\3\124\1\234\23\124\3\0"+
    "\2\124\5\0\2\u0233\1\0\2\u0233\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\14\40\1\u0234\7\40\2\0"+
    "\1\6\3\40\1\126\13\40\1\u0234\7\40\3\0\1\124"+
    "\1\40\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\15\6\1\u0235\12\6\2\0\15\6\1\u0235\12\6\4\0"+
    "\1\6\61\0\1\u0236\31\0\1\u0236\31\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\1\u0237\27\6\2\0\1\6"+
    "\1\u0237\26\6\4\0\1\6\5\0\2\u0223\1\0\2\u0223"+
    "\3\0\1\6\7\0\1\6\2\0\2\6\7\0\30\6"+
    "\2\0\30\6\4\0\1\6\5\0\2\124\1\0\2\124"+
    "\3\0\1\6\7\0\1\6\1\124\1\0\2\40\1\124"+
    "\4\0\1\124\1\0\3\40\1\126\24\40\2\0\1\u0238"+
    "\3\40\1\126\23\40\3\0\1\124\1\40\73\0\1\u0239"+
    "\41\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\16\40\1\u023a\5\40\2\0\1\6\3\40\1\126"+
    "\15\40\1\u023a\5\40\3\0\1\124\1\40\63\0\1\u023b"+
    "\31\0\1\u023b\17\0\2\u0212\1\0\2\u0212\14\0\1\124"+
    "\1\0\3\124\4\0\1\124\1\0\3\124\1\234\24\124"+
    "\3\0\3\124\1\234\23\124\3\0\2\124\5\0\2\u023c"+
    "\1\0\2\u023c\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\126\24\40"+
    "\2\0\1\6\3\40\1\126\23\40\3\0\1\124\1\40"+
    "\5\0\2\u0214\1\0\2\u0214\123\0\2\u0215\1\0\2\u0215"+
    "\14\0\1\124\1\0\3\124\4\0\1\124\1\0\3\124"+
    "\1\234\24\124\3\0\3\124\1\234\23\124\3\0\2\124"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\7\40\1\u023d\14\40\2\0\1\6\3\40\1\126"+
    "\6\40\1\u023d\14\40\3\0\1\124\1\40\54\0\1\u023e"+
    "\31\0\1\u023e\26\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\6\3\40\1\126"+
    "\16\40\1\u023f\4\40\3\0\1\124\1\40\15\0\1\6"+
    "\7\0\1\6\2\0\2\6\7\0\30\6\2\0\14\6"+
    "\1\u0240\13\6\4\0\1\6\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\30\6\2\0\27\6\1\u0241\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\30\6\2\0\11\6\1\u0242\16\6\4\0\1\6\5\0"+
    "\2\u021d\1\0\2\u021d\123\0\2\u021e\1\0\2\u021e\177\0"+
    "\1\u0243\31\0\1\u0243\61\0\1\u0244\32\0\1\u0244\105\0"+
    "\1\u0245\31\0\1\u0245\60\0\1\u0246\32\0\1\u0246\40\0"+
    "\2\u0223\1\0\2\u0223\143\0\1\u0247\2\0\2\u0247\7\0"+
    "\30\u0247\3\0\27\u0247\22\0\1\6\7\0\1\6\2\0"+
    "\2\6\7\0\5\6\1\u0248\22\6\2\0\6\6\1\u0248"+
    "\21\6\4\0\1\6\46\0\1\u0249\32\0\1\u0249\33\0"+
    "\2\u0227\1\0\2\u0227\14\0\1\124\1\0\3\124\4\0"+
    "\1\124\1\0\3\124\1\234\24\124\3\0\3\124\1\234"+
    "\23\124\3\0\2\124\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\u024a\3\40"+
    "\1\126\23\40\3\0\1\124\1\40\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\10\6\1\u024b\17\6\2\0"+
    "\11\6\1\u024b\16\6\4\0\1\6\1\u024c\50\0\1\u024c"+
    "\32\0\1\u024c\23\0\1\u024c\14\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\4\6\1\u024d\23\6\2\0\5\6"+
    "\1\u024d\22\6\4\0\1\6\5\0\2\u0231\1\0\2\u0231"+
    "\14\0\1\124\1\0\3\124\4\0\1\124\1\0\3\124"+
    "\1\234\24\124\3\0\3\124\1\234\23\124\3\0\2\124"+
    "\5\0\2\124\1\0\2\124\3\0\1\6\7\0\1\6"+
    "\1\124\1\0\2\40\1\124\4\0\1\124\1\0\3\40"+
    "\1\126\11\40\1\u024e\12\40\2\0\1\6\3\40\1\126"+
    "\10\40\1\u024e\12\40\3\0\1\124\1\40\5\0\2\u0233"+
    "\1\0\2\u0233\14\0\1\124\1\0\3\124\4\0\1\124"+
    "\1\0\3\124\1\234\24\124\3\0\3\124\1\234\23\124"+
    "\3\0\2\124\5\0\2\124\1\0\2\124\3\0\1\6"+
    "\7\0\1\6\1\124\1\0\2\40\1\124\4\0\1\124"+
    "\1\0\3\40\1\126\24\40\2\0\1\u024f\3\40\1\126"+
    "\23\40\3\0\1\124\1\40\15\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\23\6\1\u0250\4\6\2\0\23\6"+
    "\1\u0250\4\6\4\0\1\6\73\0\1\u0251\51\0\1\6"+
    "\7\0\1\6\2\0\2\6\7\0\22\6\1\u0252\5\6"+
    "\2\0\22\6\1\u0252\5\6\4\0\1\6\15\0\1\6"+
    "\7\0\1\6\2\0\2\u0253\7\0\30\u0253\2\0\1\6"+
    "\27\u0253\4\0\1\u0253\30\0\2\u0254\7\0\30\u0254\3\0"+
    "\27\u0254\4\0\1\u0254\5\0\2\u0255\1\0\2\u0255\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\3\40\1\126\24\40\2\0\1\6\3\40"+
    "\1\126\23\40\3\0\1\124\1\40\5\0\2\u023b\1\0"+
    "\2\u023b\123\0\2\u023c\1\0\2\u023c\14\0\1\124\1\0"+
    "\3\124\4\0\1\124\1\0\3\124\1\234\24\124\3\0"+
    "\3\124\1\234\23\124\3\0\2\124\5\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\1\u0256\23\40"+
    "\2\0\1\6\3\40\1\126\1\u0256\22\40\3\0\1\124"+
    "\1\40\45\0\1\u0257\32\0\1\u0257\34\0\2\124\1\0"+
    "\2\124\3\0\1\6\7\0\1\6\1\124\1\0\2\40"+
    "\1\124\4\0\1\124\1\0\3\40\1\126\24\40\2\0"+
    "\1\6\3\40\1\126\10\40\1\u0258\12\40\3\0\1\124"+
    "\1\40\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\30\6\2\0\11\6\1\u0259\16\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\5\6\1\u025a\22\6\4\0\1\6\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\30\6\2\0\7\6\1\u025b"+
    "\20\6\4\0\1\6\73\0\1\u025c\112\0\1\u025d\31\0"+
    "\1\u025d\103\0\1\u025e\31\0\1\u025e\74\0\1\u025f\31\0"+
    "\1\u025f\16\0\2\u0260\3\0\14\u0260\1\u0261\2\u0260\2\u0261"+
    "\7\u0260\30\u0261\3\u0260\27\u0261\10\u0260\12\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\16\6\1\u0262\11\6\2\0"+
    "\16\6\1\u0262\11\6\4\0\1\6\57\0\1\u0263\31\0"+
    "\1\u0263\33\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\1\u0264\27\6\2\0\1\6\1\u0264\26\6\4\0\1\6"+
    "\15\0\1\6\7\0\1\6\2\0\2\6\7\0\15\6"+
    "\1\u0265\12\6\2\0\15\6\1\u0265\12\6\4\0\1\6"+
    "\56\0\1\u0266\31\0\1\u0266\34\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\1\u0267\27\6\2\0\1\6\1\u0267"+
    "\26\6\4\0\1\6\5\0\2\124\1\0\2\124\3\0"+
    "\1\6\7\0\1\6\1\124\1\0\2\40\1\124\4\0"+
    "\1\124\1\0\1\40\1\u0268\1\40\1\126\24\40\2\0"+
    "\1\6\1\40\1\u0268\1\40\1\126\23\40\3\0\1\124"+
    "\1\40\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\15\6\1\u0269\12\6\2\0\15\6\1\u0269\12\6\4\0"+
    "\1\6\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\14\6\1\u026a\13\6\2\0\14\6\1\u026a\13\6\4\0"+
    "\1\6\56\0\1\u026b\31\0\1\u026b\34\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\16\6\1\u026c\11\6\2\0"+
    "\16\6\1\u026c\11\6\4\0\1\6\5\0\2\u0255\1\0"+
    "\2\u0255\14\0\1\124\1\0\3\124\4\0\1\124\1\0"+
    "\3\124\1\234\24\124\3\0\3\124\1\234\23\124\3\0"+
    "\2\124\5\0\2\u026d\1\0\2\u026d\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\24\40\2\0\1\6\3\40\1\126\23\40"+
    "\3\0\1\124\1\40\5\0\2\u0257\1\0\2\u0257\123\0"+
    "\2\124\1\0\2\124\3\0\1\6\7\0\1\6\1\124"+
    "\1\0\2\40\1\124\4\0\1\124\1\0\3\40\1\126"+
    "\24\40\2\0\1\6\3\40\1\u026e\23\40\3\0\1\124"+
    "\1\40\15\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\30\6\2\0\13\6\1\u026f\14\6\4\0\1\6\15\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\15\6\1\u0270\12\6\4\0\1\6\41\0\1\u0271\32\0"+
    "\1\u0271\75\0\1\u0272\32\0\1\u0272\107\0\1\u0273\31\0"+
    "\1\u0273\77\0\1\u0274\31\0\1\u0274\43\0\2\u0275\1\0"+
    "\2\u0275\7\0\30\u0275\3\0\27\u0275\11\0\2\u0260\3\0"+
    "\14\u0260\2\u0275\1\u0260\2\u0275\7\u0260\30\u0275\3\u0260\27\u0275"+
    "\10\u0260\2\0\2\u0263\1\0\2\u0263\3\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\30\6\2\0\30\6\4\0"+
    "\1\6\5\0\2\u0263\1\0\2\u0263\133\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\13\6\1\u0276\14\6\2\0"+
    "\13\6\1\u0276\14\6\4\0\1\6\15\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\6\6\1\u0277\21\6\2\0"+
    "\7\6\1\u0277\20\6\4\0\1\6\47\0\1\u0278\32\0"+
    "\1\u0278\32\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\23\40\1\u0279\2\0\1\6\3\40\1\126"+
    "\21\40\1\u0279\1\40\3\0\1\124\1\40\15\0\1\6"+
    "\7\0\1\6\2\0\2\6\7\0\23\6\1\u027a\4\6"+
    "\2\0\23\6\1\u027a\4\6\4\0\1\6\5\0\2\u0273"+
    "\1\0\2\u0273\3\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\30\6\2\0\30\6\4\0\1\6\64\0\1\u027b"+
    "\31\0\1\u027b\26\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\20\6\1\u027c\7\6\2\0\20\6\1\u027c\7\6"+
    "\4\0\1\6\5\0\2\u026d\1\0\2\u026d\14\0\1\124"+
    "\1\0\3\124\4\0\1\124\1\0\3\124\1\234\24\124"+
    "\3\0\3\124\1\234\23\124\3\0\2\124\15\0\1\6"+
    "\7\0\1\6\2\0\2\6\7\0\30\6\2\0\26\6"+
    "\1\u027d\1\6\4\0\1\6\54\0\1\u027e\31\0\1\u027e"+
    "\111\0\1\u027f\30\0\1\u027f\13\0\2\u0273\1\0\2\u0273"+
    "\177\0\1\u0280\31\0\1\u0280\20\0\2\u0260\1\117\2\0"+
    "\1\u0281\1\u0260\1\u0282\2\u0281\2\u0260\2\u0281\3\u0260\2\u0275"+
    "\1\u0281\2\u0275\1\u0281\4\u0260\1\u0281\1\u0260\7\u0275\1\u0283"+
    "\20\u0275\2\u0260\1\u0281\7\u0275\1\u0283\17\u0275\4\u0260\1\u0281"+
    "\3\u0260\12\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\4\6\1\u0284\23\6\2\0\5\6\1\u0284\22\6\4\0"+
    "\1\6\5\0\2\124\1\0\2\124\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\4\40\1\u0285\17\40\2\0\1\6\3\40"+
    "\1\126\4\40\1\u0285\16\40\3\0\1\124\1\40\1\u0286"+
    "\14\0\1\6\7\0\1\6\2\0\2\6\7\0\14\6"+
    "\1\u0287\13\6\2\0\14\6\1\u0287\13\6\4\0\1\6"+
    "\55\0\1\u0288\31\0\1\u0288\35\0\1\6\7\0\1\6"+
    "\2\0\2\6\7\0\10\6\1\u0289\17\6\2\0\11\6"+
    "\1\u0289\16\6\4\0\1\6\1\u028a\44\0\1\u028b\32\0"+
    "\1\u028b\100\0\1\u0286\32\0\1\u0286\23\0\1\u0286\50\0"+
    "\1\u028a\32\0\1\u028a\23\0\1\u028a\5\0\1\117\2\0"+
    "\1\117\1\0\1\232\2\117\2\0\2\117\3\0\2\u0275"+
    "\1\0\2\u0275\1\117\6\0\7\u0275\1\u0283\20\u0275\2\0"+
    "\1\117\7\u0275\1\u0283\17\u0275\4\0\1\117\4\0\2\u0260"+
    "\1\117\2\0\1\u0281\1\u0260\1\u0282\2\u0281\2\u0260\2\u0281"+
    "\3\u0260\2\u0275\1\u0281\2\u0275\1\u0281\4\u0260\1\u0281\1\u0260"+
    "\7\u0275\1\u0283\12\u0275\1\u028c\5\u0275\2\u0260\1\u0281\7\u0275"+
    "\1\u0283\11\u0275\1\u028c\5\u0275\4\u0260\1\u0281\3\u0260\12\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\1\u028d\27\6"+
    "\2\0\1\6\1\u028d\26\6\4\0\1\6\5\0\2\124"+
    "\1\0\2\124\3\0\1\6\7\0\1\6\1\124\1\0"+
    "\2\40\1\124\4\0\1\124\1\0\3\40\1\u028e\24\40"+
    "\2\0\1\6\3\40\1\u028e\23\40\3\0\1\124\1\40"+
    "\44\0\1\u028f\32\0\1\u028f\35\0\2\u0288\1\0\2\u0288"+
    "\3\0\1\6\7\0\1\6\2\0\2\6\7\0\30\6"+
    "\2\0\30\6\4\0\1\6\5\0\2\u0288\1\0\2\u0288"+
    "\133\0\1\6\7\0\1\6\2\0\2\6\7\0\16\6"+
    "\1\u0290\11\6\2\0\16\6\1\u0290\11\6\4\0\1\6"+
    "\57\0\1\u0291\31\0\1\u0291\57\0\1\u0292\32\0\1\u0292"+
    "\37\0\2\u0260\1\117\2\0\1\u0281\1\u0260\1\u0282\2\u0281"+
    "\2\u0260\2\u0281\3\u0260\2\u0275\1\u0281\2\u0275\1\u0281\4\u0260"+
    "\1\u0281\1\u0260\7\u0275\1\u0283\12\u0275\1\u0293\5\u0275\2\u0260"+
    "\1\u0281\7\u0275\1\u0283\11\u0275\1\u0293\5\u0275\4\u0260\1\u0281"+
    "\3\u0260\12\0\1\6\7\0\1\6\2\0\2\6\7\0"+
    "\22\6\1\u0294\5\6\2\0\22\6\1\u0294\5\6\4\0"+
    "\1\6\5\0\2\u0295\1\0\2\u0295\3\0\1\6\7\0"+
    "\1\6\1\124\1\0\2\40\1\124\4\0\1\124\1\0"+
    "\3\40\1\126\1\236\23\40\2\0\1\6\3\40\1\126"+
    "\1\236\22\40\3\0\1\124\1\40\5\0\2\u028f\1\0"+
    "\2\u028f\123\0\2\u0291\1\0\2\u0291\3\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\30\6\2\0\30\6\4\0"+
    "\1\6\5\0\2\u0291\1\0\2\u0291\201\0\1\u0296\31\0"+
    "\1\u0296\16\0\2\u0260\1\117\2\0\1\u0281\1\u0260\1\u0282"+
    "\2\u0281\2\u0260\2\u0281\3\u0260\2\u0275\1\u0281\2\u0275\1\u0281"+
    "\4\u0260\1\u0281\1\u0260\7\u0275\1\u0283\7\u0275\1\u0297\10\u0275"+
    "\2\u0260\1\u0281\7\u0275\1\u0283\6\u0275\1\u0297\10\u0275\4\u0260"+
    "\1\u0281\3\u0260\12\0\1\6\7\0\1\6\2\0\2\6"+
    "\7\0\16\6\1\u0298\11\6\2\0\16\6\1\u0298\11\6"+
    "\4\0\1\6\5\0\2\u0295\1\0\2\u0295\14\0\1\124"+
    "\1\0\3\124\4\0\1\124\1\0\3\124\1\234\24\124"+
    "\3\0\3\124\1\234\23\124\3\0\2\124\57\0\1\u0299"+
    "\31\0\1\u0299\22\0\2\u0260\1\117\2\0\1\u0281\1\u0260"+
    "\1\u0282\2\u0281\2\u0260\2\u0281\3\u0260\2\u0275\1\u0281\2\u0275"+
    "\1\u029a\4\u0260\1\u0281\1\u0260\7\u0275\1\u0283\11\u0275\1\u029b"+
    "\6\u0275\2\u0260\1\u0281\7\u0275\1\u0283\10\u0275\1\u029b\6\u0275"+
    "\4\u0260\1\u0281\1\u0260\1\u029c\1\u0260\12\0\1\6\7\0"+
    "\1\6\2\0\2\6\7\0\20\6\1\u029d\7\6\2\0"+
    "\20\6\1\u029d\7\6\4\0\1\6\61\0\1\u029e\31\0"+
    "\1\u029e\22\0\1\117\2\0\1\117\1\0\1\232\2\117"+
    "\2\0\2\117\3\0\2\u0275\1\u01ed\2\u0275\1\117\6\0"+
    "\7\u0275\1\u0283\20\u0275\2\0\1\117\7\u0275\1\u0283\17\u0275"+
    "\4\0\1\117\4\0\2\u0260\1\117\2\0\1\u0281\1\u0260"+
    "\1\u0282\2\u0281\2\u0260\2\u0281\3\u0260\2\u0275\1\u0281\2\u0275"+
    "\1\u029a\4\u0260\1\u0281\1\u0260\7\u0275\1\u0283\20\u0275\2\u0260"+
    "\1\u0281\7\u0275\1\u0283\17\u0275\4\u0260\1\u0281\3\u0260\22\0"+
    "\2\u0275\1\0\2\u0275\1\u01ee\6\0\30\u0275\3\0\27\u0275"+
    "\22\0\1\6\7\0\1\6\2\0\2\6\7\0\10\6"+
    "\1\u029f\17\6\2\0\11\6\1\u029f\16\6\4\0\1\6"+
    "\1\u02a0\50\0\1\u02a0\32\0\1\u02a0\23\0\1\u02a0\14\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\16\6\1\u02a1"+
    "\11\6\2\0\16\6\1\u02a1\11\6\4\0\1\6\57\0"+
    "\1\u02a2\31\0\1\u02a2\23\0\2\u02a2\1\0\2\u02a2\3\0"+
    "\1\6\7\0\1\6\2\0\2\6\7\0\30\6\2\0"+
    "\30\6\4\0\1\6\5\0\2\u02a2\1\0\2\u02a2\122\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[52800];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\6\1\5\11\1\1\1\11\1\1\2\11"+
    "\26\1\2\11\14\1\1\11\1\1\1\11\2\1\21\0"+
    "\1\1\1\11\2\0\1\11\1\0\4\1\1\0\3\11"+
    "\1\0\2\1\1\0\45\1\1\11\1\1\24\0\1\11"+
    "\1\0\3\1\2\0\20\1\2\0\2\1\1\0\1\1"+
    "\1\0\2\1\1\0\7\1\2\0\13\1\1\0\16\1"+
    "\7\0\1\1\14\0\2\1\2\0\11\1\1\0\6\1"+
    "\1\0\6\1\6\0\1\1\1\0\10\1\1\0\6\1"+
    "\1\0\2\1\1\0\4\1\1\0\3\1\1\0\3\1"+
    "\1\0\15\1\4\0\1\1\7\0\2\1\1\0\1\1"+
    "\3\0\7\1\1\11\1\1\1\0\4\1\1\0\6\1"+
    "\1\0\1\11\4\0\1\1\1\0\12\1\1\0\3\1"+
    "\1\0\2\1\1\0\4\1\1\0\3\1\1\0\15\1"+
    "\12\0\1\1\6\0\6\1\1\11\3\1\1\11\1\1"+
    "\1\0\1\1\1\0\4\1\3\0\1\11\1\1\1\0"+
    "\1\1\1\0\11\1\1\0\3\1\1\0\1\1\1\0"+
    "\2\1\1\0\12\1\10\0\1\1\3\0\3\1\1\0"+
    "\5\1\1\0\1\1\1\0\3\1\2\11\1\0\12\1"+
    "\1\0\3\1\1\0\1\1\1\0\5\1\1\0\7\1"+
    "\4\0\1\1\1\0\1\1\1\0\4\1\1\11\1\1"+
    "\1\0\2\1\1\11\5\1\1\0\2\1\1\0\4\1"+
    "\1\0\4\1\5\0\1\1\1\0\2\1\1\0\4\1"+
    "\1\0\12\1\6\0\4\1\1\0\4\1\1\0\5\1"+
    "\2\0\1\1\2\0\2\1\1\11\2\1\1\0\2\1"+
    "\4\0\1\1\1\0\2\1\1\0\3\1\3\0\5\1"+
    "\2\0\2\1\2\0\1\1\4\0\1\1\1\0\1\1"+
    "\1\0\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
    private List<ErrorCom> erroresCom;

    private void error(String lexeme) {
        erroresCom.add(new ErrorCom("Lexico","Simbolo no existe en el lenguaje",String.valueOf(yyline+1),String.valueOf(yycolumn+1),lexeme,""));
    }    

    private void errorPrueba(String lexeme, String tipo) {
        erroresCom.add(new ErrorCom("PRUEBA",tipo,String.valueOf(yyline+1),String.valueOf(yycolumn+1),lexeme,""));
    }

    public List<ErrorCom> getErroresCom() {
        return erroresCom;
    }




  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public LexerGCIC(java.io.Reader in) {
      erroresCom = new ArrayList<>();
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(symG.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { error(yytext()); new Symbol(symG.error,yyline,yycolumn, yytext());
            }
            // fall through
          case 97: break;
          case 2:
            { 
            }
            // fall through
          case 98: break;
          case 3:
            { return new Symbol(symG.EXCL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 99: break;
          case 4:
            { return new Symbol(symG.IDET,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 100: break;
          case 5:
            { return new Symbol(symG.PARI,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 101: break;
          case 6:
            { return new Symbol(symG.PARD,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 102: break;
          case 7:
            { return new Symbol(symG.MULT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 103: break;
          case 8:
            { return new Symbol(symG.SUMA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 104: break;
          case 9:
            { return new Symbol(symG.COMA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 105: break;
          case 10:
            { return new Symbol(symG.RESTA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 106: break;
          case 11:
            { return new Symbol(symG.BARRA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 107: break;
          case 12:
            { return new Symbol(symG.DOSPUNT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 108: break;
          case 13:
            { return new Symbol(symG.PUNTCOMA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 109: break;
          case 14:
            { return new Symbol(symG.MEN,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 110: break;
          case 15:
            { return new Symbol(symG.IGUAL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 111: break;
          case 16:
            { return new Symbol(symG.MAY,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 112: break;
          case 17:
            { return new Symbol(symG.CORCHCUADI,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 113: break;
          case 18:
            { return new Symbol(symG.CORCHCUADD,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 114: break;
          case 19:
            { return new Symbol(symG.CORCHI,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 115: break;
          case 20:
            { return new Symbol(symG.CORCHD,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 116: break;
          case 21:
            { return new Symbol(symG.DIFER,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 117: break;
          case 22:
            { return new Symbol(symG.AND,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 118: break;
          case 23:
            { return new Symbol(symG.CARACTER,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 119: break;
          case 24:
            { return new Symbol(symG.PALABRAS,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 120: break;
          case 25:
            { return new Symbol(symG.MENIG,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 121: break;
          case 26:
            { return new Symbol(symG.DOBIGUAL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 122: break;
          case 27:
            { return new Symbol(symG.MAYIG,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 123: break;
          case 28:
            { return new Symbol(symG.IF,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 124: break;
          case 29:
            { return new Symbol(symG.IDETIQUETA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 125: break;
          case 30:
            { return new Symbol(symG.OR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 126: break;
          case 31:
            { return new Symbol(symG.VALP,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 127: break;
          case 32:
            { return new Symbol(symG.DECIM,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 128: break;
          case 33:
            { return new Symbol(symG.ASC,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 129: break;
          case 34:
            { return new Symbol(symG.PAR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 130: break;
          case 35:
            { return new Symbol(symG.END,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 131: break;
          case 36:
            { return new Symbol(symG.ALT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 132: break;
          case 37:
            { return new Symbol(symG.SRC,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 133: break;
          case 38:
            { return new Symbol(symG.CHAR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 134: break;
          case 39:
            { return new Symbol(symG.BR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 135: break;
          case 40:
            { return new Symbol(symG.H1,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 136: break;
          case 41:
            { return new Symbol(symG.DESC,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 137: break;
          case 42:
            { return new Symbol(symG.ELSE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 138: break;
          case 43:
            { return new Symbol(symG.EXIT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 139: break;
          case 44:
            { return new Symbol(symG.INITC,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 140: break;
          case 45:
            { return new Symbol(symG.THEN,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 141: break;
          case 46:
            { return new Symbol(symG.TRUE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 142: break;
          case 47:
            { return new Symbol(symG.COLS,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 143: break;
          case 48:
            { return new Symbol(symG.HREF,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 144: break;
          case 49:
            { return new Symbol(symG.NAME,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 145: break;
          case 50:
            { return new Symbol(symG.ROWS,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 146: break;
          case 51:
            { return new Symbol(symG.TYPE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 147: break;
          case 52:
            { return new Symbol(symG.DIV,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 148: break;
          case 53:
            { return new Symbol(symG.IMG,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 149: break;
          case 54:
            { return new Symbol(symG.FALSE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 150: break;
          case 55:
            { return new Symbol(symG.WHILE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 151: break;
          case 56:
            { return new Symbol(symG.CLASS,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 152: break;
          case 57:
            { return new Symbol(symG.COLOR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 153: break;
          case 58:
            { return new Symbol(symG.WIDTH,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 154: break;
          case 59:
            { return new Symbol(symG.BODY,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 155: break;
          case 60:
            { return new Symbol(symG.GCIC,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 156: break;
          case 61:
            { return new Symbol(symG.HEAD,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 157: break;
          case 62:
            { return new Symbol(symG.LINK,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 158: break;
          case 63:
            { return new Symbol(symG.SPAM,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 159: break;
          case 64:
            { return new Symbol(symG.HUNTIL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 160: break;
          case 65:
            { return new Symbol(symG.INSERT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 161: break;
          case 66:
            { return new Symbol(symG.REPEAT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 162: break;
          case 67:
            { return new Symbol(symG.STRING,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 163: break;
          case 68:
            { return new Symbol(symG.HEIGHT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 164: break;
          case 69:
            { return new Symbol(symG.GLOBAL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 165: break;
          case 70:
            { return new Symbol(symG.BOOLEAN,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 166: break;
          case 71:
            { return new Symbol(symG.INPUT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 167: break;
          case 72:
            { return new Symbol(symG.TITLE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 168: break;
          case 73:
            { return new Symbol(symG.DECIMAL,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 169: break;
          case 74:
            { return new Symbol(symG.ELSEIF,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 170: break;
          case 75:
            { return new Symbol(symG.INTEGER,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 171: break;
          case 76:
            { return new Symbol(symG.ONLOAD,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 172: break;
          case 77:
            { return new Symbol(symG.REVERSE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 173: break;
          case 78:
            { return new Symbol(symG.ONCLICK,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 174: break;
          case 79:
            { return new Symbol(symG.BUTTON,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 175: break;
          case 80:
            { return new Symbol(symG.OPTION,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 176: break;
          case 81:
            { return new Symbol(symG.SELECT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 177: break;
          case 82:
            { return new Symbol(symG.REDIRECT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 178: break;
          case 83:
            { return new Symbol(symG.PROCESO,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 179: break;
          case 84:
            { return new Symbol(symG.THENWHILE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 180: break;
          case 85:
            { return new Symbol(symG.FSIZE,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 181: break;
          case 86:
            { return new Symbol(symG.ALERTINFO,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 182: break;
          case 87:
            { return new Symbol(symG.TEXTAREA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 183: break;
          case 88:
            { return new Symbol(symG.LETPAR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 184: break;
          case 89:
            { return new Symbol(symG.BACK,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 185: break;
          case 90:
            { return new Symbol(symG.TEXTALIGN,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 186: break;
          case 91:
            { return new Symbol(symG.SCRIPTING,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 187: break;
          case 92:
            { return new Symbol(symG.FFAMILY,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 188: break;
          case 93:
            { return new Symbol(symG.LETIMPAR,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 189: break;
          case 94:
            { return new Symbol(symG.GETELEMENT,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 190: break;
          case 95:
            { return new Symbol(symG.NUMALEA,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 191: break;
          case 96:
            { return new Symbol(symG.CARALEATORIO,yyline+1,yycolumn+1, yytext());
            }
            // fall through
          case 192: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String[] argv) {
    if (argv.length == 0) {
      System.out.println("Usage : java LexerGCIC [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          // Side-effect: is encodingName valid?
          java.nio.charset.Charset.forName(encodingName);
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        LexerGCIC scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new LexerGCIC(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
