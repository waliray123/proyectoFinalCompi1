
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import objetos.ErrorCom;
import objetos.Etiqueta;
import objetos.ParametroEtiqueta;
import objetos.Instrucciones.DeclAsign;
import objetos.Instrucciones.InsIf;
import objetos.Instruccion;
import objetos.Instrucciones.Ciclo;
import objetos.Instrucciones.InsInsert;
import objetos.Instrucciones.AlertInfo;
import objetos.Proceso;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserGCIC extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symG.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserGCIC() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserGCIC(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserGCIC(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u016e\000\002\002\004\000\002\057\002\000\002\002" +
    "\010\000\002\060\002\000\002\003\007\000\002\061\002" +
    "\000\002\062\002\000\002\003\012\000\002\063\002\000" +
    "\002\064\002\000\002\003\016\000\002\065\002\000\002" +
    "\003\014\000\002\066\002\000\002\067\002\000\002\003" +
    "\016\000\002\070\002\000\002\071\002\000\002\003\012" +
    "\000\002\072\002\000\002\073\002\000\002\003\012\000" +
    "\002\074\002\000\002\003\014\000\002\075\002\000\002" +
    "\003\007\000\002\076\002\000\002\077\002\000\002\003" +
    "\016\000\002\100\002\000\002\101\002\000\002\003\016" +
    "\000\002\102\002\000\002\103\002\000\002\003\016\000" +
    "\002\104\002\000\002\003\015\000\002\003\006\000\002" +
    "\003\003\000\002\105\002\000\002\106\002\000\002\025" +
    "\016\000\002\107\002\000\002\025\014\000\002\110\002" +
    "\000\002\111\002\000\002\025\016\000\002\112\002\000" +
    "\002\113\002\000\002\025\012\000\002\114\002\000\002" +
    "\115\002\000\002\025\016\000\002\116\002\000\002\025" +
    "\014\000\002\117\002\000\002\025\007\000\002\120\002" +
    "\000\002\121\002\000\002\025\016\000\002\122\002\000" +
    "\002\123\002\000\002\025\016\000\002\124\002\000\002" +
    "\125\002\000\002\025\016\000\002\126\002\000\002\025" +
    "\015\000\002\025\006\000\002\025\003\000\002\127\002" +
    "\000\002\130\002\000\002\056\016\000\002\131\002\000" +
    "\002\056\014\000\002\132\002\000\002\133\002\000\002" +
    "\056\016\000\002\134\002\000\002\135\002\000\002\056" +
    "\012\000\002\136\002\000\002\137\002\000\002\056\016" +
    "\000\002\140\002\000\002\056\014\000\002\141\002\000" +
    "\002\056\007\000\002\142\002\000\002\143\002\000\002" +
    "\056\016\000\002\144\002\000\002\145\002\000\002\056" +
    "\016\000\002\146\002\000\002\147\002\000\002\056\016" +
    "\000\002\150\002\000\002\056\015\000\002\056\006\000" +
    "\002\056\003\000\002\151\002\000\002\055\012\000\002" +
    "\152\002\000\002\055\012\000\002\055\002\000\002\153" +
    "\002\000\002\154\002\000\002\004\015\000\002\155\002" +
    "\000\002\156\002\000\002\004\016\000\002\157\002\000" +
    "\002\004\010\000\002\004\003\000\002\160\002\000\002" +
    "\161\002\000\002\007\015\000\002\007\006\000\002\007" +
    "\003\000\002\005\003\000\002\005\003\000\002\005\002" +
    "\000\002\162\002\000\002\024\007\000\002\163\002\000" +
    "\002\024\007\000\002\164\002\000\002\024\007\000\002" +
    "\165\002\000\002\024\007\000\002\166\002\000\002\010" +
    "\010\000\002\167\002\000\002\010\010\000\002\010\002" +
    "\000\002\170\002\000\002\011\007\000\002\171\002\000" +
    "\002\012\007\000\002\012\002\000\002\172\002\000\002" +
    "\013\010\000\002\013\004\000\002\013\002\000\002\173" +
    "\002\000\002\014\010\000\002\014\004\000\002\014\002" +
    "\000\002\174\002\000\002\015\010\000\002\175\002\000" +
    "\002\015\010\000\002\015\004\000\002\015\002\000\002" +
    "\176\002\000\002\016\010\000\002\016\004\000\002\016" +
    "\002\000\002\177\002\000\002\017\010\000\002\200\002" +
    "\000\002\017\010\000\002\201\002\000\002\017\010\000" +
    "\002\017\004\000\002\017\002\000\002\202\002\000\002" +
    "\020\010\000\002\203\002\000\002\020\010\000\002\204" +
    "\002\000\002\020\010\000\002\205\002\000\002\020\010" +
    "\000\002\206\002\000\002\020\010\000\002\020\002\000" +
    "\002\207\002\000\002\021\010\000\002\210\002\000\002" +
    "\021\010\000\002\211\002\000\002\021\010\000\002\021" +
    "\004\000\002\021\002\000\002\212\002\000\002\022\010" +
    "\000\002\022\004\000\002\022\002\000\002\213\002\000" +
    "\002\023\010\000\002\023\004\000\002\023\002\000\002" +
    "\006\004\000\002\214\002\000\002\026\005\000\002\215" +
    "\002\000\002\026\005\000\002\216\002\000\002\217\002" +
    "\000\002\220\002\000\002\026\015\000\002\221\002\000" +
    "\002\222\002\000\002\223\002\000\002\026\017\000\002" +
    "\224\002\000\002\225\002\000\002\226\002\000\002\026" +
    "\014\000\002\227\002\000\002\026\011\000\002\230\002" +
    "\000\002\231\002\000\002\026\012\000\002\026\006\000" +
    "\002\026\002\000\002\232\002\000\002\043\007\000\002" +
    "\040\003\000\002\040\003\000\002\040\003\000\002\040" +
    "\003\000\002\040\003\000\002\041\003\000\002\041\003" +
    "\000\002\042\003\000\002\042\002\000\002\047\003\000" +
    "\002\233\002\000\002\047\006\000\002\047\004\000\002" +
    "\234\002\000\002\044\006\000\002\235\002\000\002\045" +
    "\005\000\002\236\002\000\002\045\005\000\002\237\002" +
    "\000\002\045\005\000\002\240\002\000\002\045\005\000" +
    "\002\241\002\000\002\045\005\000\002\242\002\000\002" +
    "\045\005\000\002\243\002\000\002\045\010\000\002\244" +
    "\002\000\002\045\010\000\002\245\002\000\002\045\010" +
    "\000\002\246\002\000\002\045\010\000\002\247\002\000" +
    "\002\045\010\000\002\250\002\000\002\045\010\000\002" +
    "\251\002\000\002\045\007\000\002\252\002\000\002\045" +
    "\007\000\002\253\002\000\002\254\002\000\002\045\010" +
    "\000\002\052\003\000\002\052\003\000\002\052\003\000" +
    "\002\255\002\000\002\050\005\000\002\256\002\000\002" +
    "\050\005\000\002\257\002\000\002\050\005\000\002\260" +
    "\002\000\002\050\005\000\002\050\003\000\002\261\002" +
    "\000\002\036\011\000\002\036\004\000\002\037\003\000" +
    "\002\037\002\000\002\262\002\000\002\046\005\000\002" +
    "\263\002\000\002\046\005\000\002\264\002\000\002\046" +
    "\005\000\002\265\002\000\002\046\005\000\002\266\002" +
    "\000\002\046\005\000\002\267\002\000\002\046\005\000" +
    "\002\270\002\000\002\046\010\000\002\271\002\000\002" +
    "\046\010\000\002\272\002\000\002\046\010\000\002\273" +
    "\002\000\002\046\010\000\002\274\002\000\002\046\010" +
    "\000\002\275\002\000\002\046\010\000\002\276\002\000" +
    "\002\046\007\000\002\277\002\000\002\046\007\000\002" +
    "\300\002\000\002\301\002\000\002\046\010\000\002\302" +
    "\002\000\002\051\005\000\002\303\002\000\002\051\005" +
    "\000\002\304\002\000\002\051\005\000\002\305\002\000" +
    "\002\051\005\000\002\051\002\000\002\053\003\000\002" +
    "\053\003\000\002\053\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\306\002\000\002\054\005" +
    "\000\002\307\002\000\002\054\005\000\002\054\002\000" +
    "\002\027\011\000\002\310\002\000\002\030\005\000\002" +
    "\311\002\000\002\030\011\000\002\030\002\000\002\312" +
    "\002\000\002\031\004\000\002\313\002\000\002\031\004" +
    "\000\002\314\002\000\002\032\005\000\002\315\002\000" +
    "\002\032\005\000\002\316\002\000\002\317\002\000\002" +
    "\032\010\000\002\320\002\000\002\033\005\000\002\321" +
    "\002\000\002\033\005\000\002\322\002\000\002\033\005" +
    "\000\002\323\002\000\002\033\005\000\002\033\002\000" +
    "\002\324\002\000\002\034\005\000\002\325\002\000\002" +
    "\034\005\000\002\035\004\000\002\035\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0375\000\004\005\004\001\002\000\004\013\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\006\004\000\010\000\001\002\000\006\004\uff7a\010" +
    "\011\001\002\000\006\043\u036e\044\u036f\001\002\000\004" +
    "\004\013\001\002\000\006\003\014\005\015\001\002\000" +
    "\006\002\uffdb\005\uffdb\001\002\000\036\007\030\014\026" +
    "\017\021\020\031\021\022\022\033\023\027\025\025\026" +
    "\034\027\023\030\017\031\032\032\020\033\024\001\002" +
    "\000\004\002\uffff\001\002\000\006\004\uffe7\010\uffe7\001" +
    "\002\000\006\004\uffe1\010\uffe1\001\002\000\006\004\ufffc" +
    "\010\ufffc\001\002\000\006\004\ufff6\010\ufff6\001\002\000" +
    "\004\004\uffe9\001\002\000\006\004\uffde\010\uffde\001\002" +
    "\000\006\004\uffee\010\uffee\001\002\000\004\004\255\001" +
    "\002\000\006\004\ufff1\010\ufff1\001\002\000\004\013\216" +
    "\001\002\000\006\004\ufff9\010\ufff9\001\002\000\006\004" +
    "\uffe4\010\uffe4\001\002\000\006\004\ufff4\010\ufff4\001\002" +
    "\000\006\004\uffeb\010\uffeb\001\002\000\006\004\uff50\010" +
    "\036\001\002\000\014\043\046\050\051\051\050\052\052" +
    "\053\047\001\002\000\004\004\040\001\002\000\004\005" +
    "\041\001\002\000\004\007\042\001\002\000\004\026\043" +
    "\001\002\000\004\004\044\001\002\000\006\003\014\005" +
    "\015\001\002\000\006\002\uffea\005\uffea\001\002\000\004" +
    "\012\053\001\002\000\004\012\053\001\002\000\004\012" +
    "\053\001\002\000\004\012\053\001\002\000\004\012\053" +
    "\001\002\000\004\057\060\001\002\000\004\011\uff56\001" +
    "\002\000\004\011\056\001\002\000\006\004\uff50\010\036" +
    "\001\002\000\004\004\uff55\001\002\000\004\011\uff3f\001" +
    "\002\000\004\011\uff5a\001\002\000\004\011\063\001\002" +
    "\000\006\004\uff50\010\036\001\002\000\004\004\uff59\001" +
    "\002\000\004\011\uff58\001\002\000\004\011\067\001\002" +
    "\000\006\004\uff50\010\036\001\002\000\004\004\uff57\001" +
    "\002\000\004\011\uff54\001\002\000\004\011\073\001\002" +
    "\000\006\004\uff50\010\036\001\002\000\004\004\uff53\001" +
    "\002\000\004\011\uff52\001\002\000\004\011\077\001\002" +
    "\000\006\004\uff50\010\036\001\002\000\004\004\uff51\001" +
    "\002\000\006\004\uff67\010\103\001\002\000\004\004\140" +
    "\001\002\000\016\037\106\040\112\041\113\043\107\045" +
    "\111\046\110\001\002\000\006\004\uff67\010\103\001\002" +
    "\000\004\004\uff68\001\002\000\004\012\053\001\002\000" +
    "\004\012\053\001\002\000\004\012\053\001\002\000\004" +
    "\012\053\001\002\000\004\012\053\001\002\000\004\012" +
    "\053\001\002\000\004\011\uff82\001\002\000\004\011\116" +
    "\001\002\000\006\004\uff81\010\uff81\001\002\000\004\011" +
    "\uff84\001\002\000\004\011\121\001\002\000\006\004\uff83" +
    "\010\uff83\001\002\000\004\011\uff6c\001\002\000\004\011" +
    "\124\001\002\000\006\004\uff67\010\103\001\002\000\004" +
    "\004\uff6b\001\002\000\004\011\uff6a\001\002\000\004\011" +
    "\130\001\002\000\006\004\uff67\010\103\001\002\000\004" +
    "\004\uff69\001\002\000\004\011\uff80\001\002\000\004\011" +
    "\134\001\002\000\006\004\uff7f\010\uff7f\001\002\000\004" +
    "\011\uff86\001\002\000\004\011\137\001\002\000\006\004" +
    "\uff85\010\uff85\001\002\000\010\005\uff87\055\141\056\143" +
    "\001\002\000\004\005\uff89\001\002\000\004\005\ufff3\001" +
    "\002\000\004\005\uff88\001\002\000\004\005\145\001\002" +
    "\000\004\007\146\001\002\000\004\022\147\001\002\000" +
    "\004\004\150\001\002\000\006\003\014\005\015\001\002" +
    "\000\006\002\ufff2\005\ufff2\001\002\000\006\004\uff44\010" +
    "\153\001\002\000\014\036\167\037\106\040\112\041\113" +
    "\043\107\001\002\000\004\004\157\001\002\000\006\004" +
    "\uff44\010\153\001\002\000\004\004\uff45\001\002\000\010" +
    "\005\uff87\055\141\056\143\001\002\000\004\005\uffe3\001" +
    "\002\000\004\005\162\001\002\000\004\007\163\001\002" +
    "\000\004\031\164\001\002\000\004\004\165\001\002\000" +
    "\006\003\014\005\015\001\002\000\006\002\uffe2\005\uffe2" +
    "\001\002\000\004\012\053\001\002\000\004\011\uff47\001" +
    "\002\000\004\011\172\001\002\000\006\004\uff44\010\153" +
    "\001\002\000\004\004\uff46\001\002\000\006\004\uff71\010" +
    "\176\001\002\000\004\004\206\001\002\000\014\036\201" +
    "\037\106\040\112\041\113\043\107\001\002\000\006\004" +
    "\uff71\010\176\001\002\000\004\004\uff72\001\002\000\004" +
    "\012\053\001\002\000\004\011\uff74\001\002\000\004\011" +
    "\204\001\002\000\006\004\uff71\010\176\001\002\000\004" +
    "\004\uff73\001\002\000\010\005\uff87\055\141\056\143\001" +
    "\002\000\004\005\ufff8\001\002\000\004\005\211\001\002" +
    "\000\004\007\212\001\002\000\004\020\213\001\002\000" +
    "\004\004\214\001\002\000\006\003\014\005\015\001\002" +
    "\000\006\002\ufff7\005\ufff7\001\002\000\004\004\217\001" +
    "\002\000\006\002\uffdc\005\uffdc\001\002\000\006\004\uff63" +
    "\010\221\001\002\000\014\036\250\037\106\040\112\041" +
    "\113\043\107\001\002\000\006\004\uff63\010\221\001\002" +
    "\000\004\004\224\001\002\000\006\003\225\005\227\001" +
    "\002\000\006\003\uff8a\005\uff8a\001\002\000\006\003\ufff0" +
    "\005\ufff0\001\002\000\006\007\230\024\231\001\002\000" +
    "\004\023\243\001\002\000\004\004\uff8e\001\002\000\004" +
    "\004\233\001\002\000\010\005\uff87\055\141\056\143\001" +
    "\002\000\004\005\uff8d\001\002\000\004\005\236\001\002" +
    "\000\004\007\237\001\002\000\004\024\240\001\002\000" +
    "\004\004\241\001\002\000\006\003\225\005\227\001\002" +
    "\000\006\003\uff8c\005\uff8c\001\002\000\004\004\244\001" +
    "\002\000\006\003\uff8b\005\uff8b\001\002\000\006\003\014" +
    "\005\015\001\002\000\006\002\uffef\005\uffef\001\002\000" +
    "\004\004\uff64\001\002\000\004\012\053\001\002\000\004" +
    "\011\uff66\001\002\000\004\011\253\001\002\000\006\004" +
    "\uff63\010\221\001\002\000\004\004\uff65\001\002\000\006" +
    "\003\ufffe\005\ufffe\001\002\000\006\003\257\005\260\001" +
    "\002\000\006\002\uff8f\005\uff8f\001\002\000\010\007\263" +
    "\015\264\016\262\001\002\000\006\002\ufffd\005\ufffd\001" +
    "\002\000\004\010\uff94\001\002\000\004\014\276\001\002" +
    "\000\004\004\uff97\001\002\000\004\004\266\001\002\000" +
    "\010\005\uff87\055\141\056\143\001\002\000\004\005\uff96" +
    "\001\002\000\004\005\271\001\002\000\004\007\272\001" +
    "\002\000\004\015\273\001\002\000\004\004\274\001\002" +
    "\000\006\003\257\005\260\001\002\000\006\002\uff95\005" +
    "\uff95\001\002\000\004\004\277\001\002\000\006\003\uff91" +
    "\005\uff91\001\002\000\006\003\014\005\015\001\002\000" +
    "\006\002\uff90\005\uff90\001\002\000\004\010\304\001\002" +
    "\000\004\004\311\001\002\000\004\034\305\001\002\000" +
    "\004\012\053\001\002\000\004\011\uff79\001\002\000\004" +
    "\011\310\001\002\000\004\004\uff78\001\002\000\010\005" +
    "\uff87\055\141\056\143\001\002\000\004\005\uff93\001\002" +
    "\000\004\005\314\001\002\000\004\007\315\001\002\000" +
    "\004\016\316\001\002\000\004\004\317\001\002\000\006" +
    "\003\257\005\260\001\002\000\006\002\uff92\005\uff92\001" +
    "\002\000\006\004\uff5b\010\322\001\002\000\020\035\u02c0" +
    "\036\u02be\037\106\040\112\041\113\043\107\047\u02bf\001" +
    "\002\000\006\004\uff5b\010\322\001\002\000\004\004\325" +
    "\001\002\000\006\003\326\005\327\001\002\000\006\003" +
    "\uff9d\005\uff9d\001\002\000\032\007\343\020\342\021\336" +
    "\022\345\023\341\025\340\026\346\027\335\030\333\031" +
    "\344\032\334\033\337\001\002\000\006\003\uffed\005\uffed" +
    "\001\002\000\006\003\014\005\015\001\002\000\006\002" +
    "\uffec\005\uffec\001\002\000\006\004\uffa9\010\uffa9\001\002" +
    "\000\006\004\uffa3\010\uffa3\001\002\000\004\004\uffab\001" +
    "\002\000\006\004\uffb8\010\uffb8\001\002\000\006\004\uffa0" +
    "\010\uffa0\001\002\000\006\004\uffb0\010\uffb0\001\002\000" +
    "\006\004\uffb3\010\uffb3\001\002\000\006\004\uffbb\010\uffbb" +
    "\001\002\000\004\025\u0103\001\002\000\006\004\uffa6\010" +
    "\uffa6\001\002\000\006\004\uffb6\010\uffb6\001\002\000\006" +
    "\004\uffad\010\uffad\001\002\000\006\004\uff50\010\036\001" +
    "\002\000\004\004\351\001\002\000\004\005\352\001\002" +
    "\000\004\007\353\001\002\000\004\026\354\001\002\000" +
    "\004\004\355\001\002\000\006\003\326\005\327\001\002" +
    "\000\006\003\uffac\005\uffac\001\002\000\006\004\uff67\010" +
    "\103\001\002\000\004\004\361\001\002\000\010\005\uff87" +
    "\055\141\056\143\001\002\000\004\005\uffb5\001\002\000" +
    "\004\005\364\001\002\000\004\007\365\001\002\000\004" +
    "\022\366\001\002\000\004\004\367\001\002\000\006\003" +
    "\326\005\327\001\002\000\006\003\uffb4\005\uffb4\001\002" +
    "\000\006\004\uff44\010\153\001\002\000\004\004\373\001" +
    "\002\000\010\005\uff87\055\141\056\143\001\002\000\004" +
    "\005\uffa5\001\002\000\004\005\376\001\002\000\004\007" +
    "\377\001\002\000\004\031\u0100\001\002\000\004\004\u0101" +
    "\001\002\000\006\003\326\005\327\001\002\000\006\003" +
    "\uffa4\005\uffa4\001\002\000\004\004\u0104\001\002\000\006" +
    "\003\uff9e\005\uff9e\001\002\000\006\004\uff71\010\176\001" +
    "\002\000\004\004\u0107\001\002\000\010\005\uff87\055\141" +
    "\056\143\001\002\000\004\005\uffba\001\002\000\004\005" +
    "\u010a\001\002\000\004\007\u010b\001\002\000\004\020\u010c" +
    "\001\002\000\004\004\u010d\001\002\000\006\003\326\005" +
    "\327\001\002\000\006\003\uffb9\005\uffb9\001\002\000\006" +
    "\004\uff63\010\221\001\002\000\004\004\u0111\001\002\000" +
    "\006\003\225\005\227\001\002\000\006\003\uffb2\005\uffb2" +
    "\001\002\000\006\003\326\005\327\001\002\000\006\003" +
    "\uffb1\005\uffb1\001\002\000\006\004\uff5b\010\322\001\002" +
    "\000\004\004\u0117\001\002\000\006\003\326\005\327\001" +
    "\002\000\004\005\uffaf\001\002\000\004\005\u011a\001\002" +
    "\000\004\007\u011b\001\002\000\004\025\u011c\001\002\000" +
    "\004\004\u011d\001\002\000\006\003\326\005\327\001\002" +
    "\000\006\003\uffae\005\uffae\001\002\000\006\004\uff40\010" +
    "\u0120\001\002\000\014\036\u027f\037\106\040\112\041\113" +
    "\043\107\001\002\000\004\004\u0124\001\002\000\006\004" +
    "\uff40\010\u0120\001\002\000\004\004\uff41\001\002\000\010" +
    "\005\uff98\131\u0126\132\u0127\001\002\000\004\005\u027a\001" +
    "\002\000\004\124\uff9a\001\002\000\004\124\uff9c\001\002" +
    "\000\004\124\u0129\001\002\000\004\125\u012a\001\002\000" +
    "\004\010\u012b\001\002\000\036\011\uff28\056\uff3c\060\uff3e" +
    "\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075\u012d\076" +
    "\uff3a\105\uff36\107\uff2e\110\uff32\137\uff3c\001\002\000\006" +
    "\056\u0153\137\u0155\001\002\000\004\124\u026e\001\002\000" +
    "\014\060\u024e\061\u0254\062\u0252\063\u0253\064\u024f\001\002" +
    "\000\004\110\u0263\001\002\000\004\011\u0261\001\002\000" +
    "\004\105\u01d0\001\002\000\004\074\u01c9\001\002\000\004" +
    "\107\u01bb\001\002\000\004\076\u0135\001\002\000\004\124" +
    "\u0136\001\002\000\044\006\u0138\056\ufee7\057\ufee7\065\ufee7" +
    "\066\ufee7\067\ufee7\070\ufee7\071\ufee7\072\ufee7\073\ufee7\111" +
    "\ufee7\112\ufee7\124\ufee7\133\ufee7\137\ufee7\140\ufee7\141\ufee7" +
    "\001\002\000\042\056\u0153\057\u0162\065\u015f\066\u0154\067" +
    "\u0161\070\u0160\071\u0163\072\u015e\073\u015b\111\u0157\112\u015c" +
    "\124\u0156\133\u0158\137\u0155\140\u015a\141\u0159\001\002\000" +
    "\042\056\ufee8\057\ufee8\065\ufee8\066\ufee8\067\ufee8\070\ufee8" +
    "\071\ufee8\072\ufee8\073\ufee8\111\ufee8\112\ufee8\124\ufee8\133" +
    "\ufee8\137\ufee8\140\ufee8\141\ufee8\001\002\000\004\125\uff39" +
    "\001\002\000\004\125\u013b\001\002\000\004\100\u013c\001" +
    "\002\000\004\101\u013d\001\002\000\004\127\u014c\001\002" +
    "\000\044\011\ufeae\056\ufeae\060\ufeae\061\ufeae\062\ufeae\063" +
    "\ufeae\064\ufeae\074\ufeae\075\ufeae\076\ufeae\103\u0141\104\u0140" +
    "\105\ufeae\107\ufeae\110\ufeae\136\ufeae\137\ufeae\001\002\000" +
    "\040\011\uff38\056\uff38\060\uff38\061\uff38\062\uff38\063\uff38" +
    "\064\uff38\074\uff38\075\uff38\076\uff38\105\uff38\107\uff38\110" +
    "\uff38\136\uff38\137\uff38\001\002\000\004\101\ufeb2\001\002" +
    "\000\004\124\ufeb0\001\002\000\004\124\u0143\001\002\000" +
    "\044\006\u0138\056\ufee7\057\ufee7\065\ufee7\066\ufee7\067\ufee7" +
    "\070\ufee7\071\ufee7\072\ufee7\073\ufee7\111\ufee7\112\ufee7\124" +
    "\ufee7\133\ufee7\137\ufee7\140\ufee7\141\ufee7\001\002\000\004" +
    "\125\u0145\001\002\000\004\101\u013d\001\002\000\044\011" +
    "\ufeae\056\ufeae\060\ufeae\061\ufeae\062\ufeae\063\ufeae\064\ufeae" +
    "\074\ufeae\075\ufeae\076\ufeae\103\u0141\104\u0140\105\ufeae\107" +
    "\ufeae\110\ufeae\136\ufeae\137\ufeae\001\002\000\040\011\ufeaf" +
    "\056\ufeaf\060\ufeaf\061\ufeaf\062\ufeaf\063\ufeaf\064\ufeaf\074" +
    "\ufeaf\075\ufeaf\076\ufeaf\105\ufeaf\107\ufeaf\110\ufeaf\136\ufeaf" +
    "\137\ufeaf\001\002\000\004\101\u013d\001\002\000\040\011" +
    "\ufeb1\056\ufeb1\060\ufeb1\061\ufeb1\062\ufeb1\063\ufeb1\064\ufeb1" +
    "\074\ufeb1\075\ufeb1\076\ufeb1\105\ufeb1\107\ufeb1\110\ufeb1\136" +
    "\ufeb1\137\ufeb1\001\002\000\040\011\uff28\056\uff3c\060\uff3e" +
    "\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075\u012d\076" +
    "\uff3a\105\uff36\107\uff2e\110\uff32\136\uff28\137\uff3c\001\002" +
    "\000\006\011\uff37\136\uff37\001\002\000\004\136\u014d\001" +
    "\002\000\036\056\uff3c\060\uff3e\061\uff3e\062\uff3e\063\uff3e" +
    "\064\uff3e\074\uff2c\075\u012d\076\uff3a\105\uff36\107\uff2e\110" +
    "\uff32\136\uff28\137\uff3c\001\002\000\004\136\u014f\001\002" +
    "\000\004\130\u0150\001\002\000\004\102\u0151\001\002\000" +
    "\044\011\ufeb3\056\ufeb3\060\ufeb3\061\ufeb3\062\ufeb3\063\ufeb3" +
    "\064\ufeb3\074\ufeb3\075\ufeb3\076\ufeb3\103\ufeb3\104\ufeb3\105" +
    "\ufeb3\107\ufeb3\110\ufeb3\136\ufeb3\137\ufeb3\001\002\000\020" +
    "\004\u01ae\005\u01aa\114\u01ac\115\u01ad\116\u01ab\117\u01b0\125" +
    "\ufee9\001\002\000\100\004\uff20\005\uff20\007\uff20\011\uff20" +
    "\012\uff20\056\uff20\060\uff20\061\uff20\062\uff20\063\uff20\064" +
    "\uff20\074\uff20\075\uff20\076\uff20\105\uff20\107\uff20\110\uff20" +
    "\114\uff20\115\uff20\116\uff20\117\uff20\120\uff20\121\uff20\122" +
    "\uff20\123\uff20\125\uff20\126\uff20\134\uff20\135\uff20\136\uff20" +
    "\137\uff20\001\002\000\004\124\u01a5\001\002\000\100\004" +
    "\uff1f\005\uff1f\007\uff1f\011\uff1f\012\uff1f\056\uff1f\060\uff1f" +
    "\061\uff1f\062\uff1f\063\uff1f\064\uff1f\074\uff1f\075\uff1f\076" +
    "\uff1f\105\uff1f\107\uff1f\110\uff1f\114\uff1f\115\uff1f\116\uff1f" +
    "\117\uff1f\120\uff1f\121\uff1f\122\uff1f\123\uff1f\125\uff1f\126" +
    "\uff1f\134\uff1f\135\uff1f\136\uff1f\137\uff1f\001\002\000\042" +
    "\056\ufeca\057\ufeca\065\ufeca\066\ufeca\067\ufeca\070\ufeca\071" +
    "\ufeca\072\ufeca\073\ufeca\111\ufeca\112\ufeca\124\ufeca\133\ufeca" +
    "\137\ufeca\140\ufeca\141\ufeca\001\002\000\072\004\ufee4\005" +
    "\ufee4\007\ufee4\011\ufee4\056\ufee4\060\ufee4\061\ufee4\062\ufee4" +
    "\063\ufee4\064\ufee4\074\ufee4\075\ufee4\076\ufee4\105\ufee4\107" +
    "\ufee4\110\ufee4\114\ufee4\115\ufee4\116\ufee4\117\ufee4\120\ufee4" +
    "\121\ufee4\122\ufee4\123\ufee4\125\ufee4\135\ufee4\136\ufee4\137" +
    "\ufee4\001\002\000\004\124\u0199\001\002\000\072\004\ufedc" +
    "\005\ufedc\007\ufedc\011\ufedc\056\ufedc\060\ufedc\061\ufedc\062" +
    "\ufedc\063\ufedc\064\ufedc\074\ufedc\075\ufedc\076\ufedc\105\ufedc" +
    "\107\ufedc\110\ufedc\114\ufedc\115\ufedc\116\ufedc\117\ufedc\120" +
    "\ufedc\121\ufedc\122\ufedc\123\ufedc\125\ufedc\135\ufedc\136\ufedc" +
    "\137\ufedc\001\002\000\072\004\ufede\005\ufede\007\ufede\011" +
    "\ufede\056\ufede\060\ufede\061\ufede\062\ufede\063\ufede\064\ufede" +
    "\074\ufede\075\ufede\076\ufede\105\ufede\107\ufede\110\ufede\114" +
    "\ufede\115\ufede\116\ufede\117\ufede\120\ufede\121\ufede\122\ufede" +
    "\123\ufede\125\ufede\135\ufede\136\ufede\137\ufede\001\002\000" +
    "\004\124\u0191\001\002\000\072\004\ufee2\005\ufee2\007\ufee2" +
    "\011\ufee2\056\ufee2\060\ufee2\061\ufee2\062\ufee2\063\ufee2\064" +
    "\ufee2\074\ufee2\075\ufee2\076\ufee2\105\ufee2\107\ufee2\110\ufee2" +
    "\114\ufee2\115\ufee2\116\ufee2\117\ufee2\120\ufee2\121\ufee2\122" +
    "\ufee2\123\ufee2\125\ufee2\135\ufee2\136\ufee2\137\ufee2\001\002" +
    "\000\072\004\ufee0\005\ufee0\007\ufee0\011\ufee0\056\ufee0\060" +
    "\ufee0\061\ufee0\062\ufee0\063\ufee0\064\ufee0\074\ufee0\075\ufee0" +
    "\076\ufee0\105\ufee0\107\ufee0\110\ufee0\114\ufee0\115\ufee0\116" +
    "\ufee0\117\ufee0\120\ufee0\121\ufee0\122\ufee0\123\ufee0\125\ufee0" +
    "\135\ufee0\136\ufee0\137\ufee0\001\002\000\004\124\u0189\001" +
    "\002\000\004\124\u0184\001\002\000\004\124\u017f\001\002" +
    "\000\004\124\u017a\001\002\000\072\004\ufee6\005\ufee6\007" +
    "\ufee6\011\ufee6\056\ufee6\060\ufee6\061\ufee6\062\ufee6\063\ufee6" +
    "\064\ufee6\074\ufee6\075\ufee6\076\ufee6\105\ufee6\107\ufee6\110" +
    "\ufee6\114\ufee6\115\ufee6\116\ufee6\117\ufee6\120\ufee6\121\ufee6" +
    "\122\ufee6\123\ufee6\125\ufee6\135\ufee6\136\ufee6\137\ufee6\001" +
    "\002\000\004\124\u0164\001\002\000\012\056\u0153\057\u0167" +
    "\137\u0155\141\u0168\001\002\000\004\125\u0169\001\002\000" +
    "\004\125\ufef5\001\002\000\004\125\ufef7\001\002\000\004" +
    "\125\ufef6\001\002\000\072\004\ufed0\005\ufed0\007\ufed0\011" +
    "\ufed0\056\ufed0\060\ufed0\061\ufed0\062\ufed0\063\ufed0\064\ufed0" +
    "\074\ufed0\075\ufed0\076\ufed0\105\ufed0\107\ufed0\110\ufed0\114" +
    "\ufed0\115\ufed0\116\ufed0\117\ufed0\120\ufed0\121\ufed0\122\ufed0" +
    "\123\ufed0\125\ufed0\135\ufed0\136\ufed0\137\ufed0\001\002\000" +
    "\072\004\ufebf\005\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf" +
    "\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076" +
    "\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf" +
    "\117\ufebf\120\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\135" +
    "\ufebf\136\ufebf\137\ufebf\001\002\000\042\056\ufec5\057\ufec5" +
    "\065\ufec5\066\ufec5\067\ufec5\070\ufec5\071\ufec5\072\ufec5\073" +
    "\ufec5\111\ufec5\112\ufec5\124\ufec5\133\ufec5\137\ufec5\140\ufec5" +
    "\141\ufec5\001\002\000\042\056\ufec3\057\ufec3\065\ufec3\066" +
    "\ufec3\067\ufec3\070\ufec3\071\ufec3\072\ufec3\073\ufec3\111\ufec3" +
    "\112\ufec3\124\ufec3\133\ufec3\137\ufec3\140\ufec3\141\ufec3\001" +
    "\002\000\062\004\ufecf\005\ufecf\011\ufecf\056\ufecf\060\ufecf" +
    "\061\ufecf\062\ufecf\063\ufecf\064\ufecf\074\ufecf\075\ufecf\076" +
    "\ufecf\105\ufecf\107\ufecf\110\ufecf\114\ufecf\115\ufecf\116\ufecf" +
    "\117\ufecf\120\ufecf\125\ufecf\135\ufecf\136\ufecf\137\ufecf\001" +
    "\002\000\042\056\ufec1\057\ufec1\065\ufec1\066\ufec1\067\ufec1" +
    "\070\ufec1\071\ufec1\072\ufec1\073\ufec1\111\ufec1\112\ufec1\124" +
    "\ufec1\133\ufec1\137\ufec1\140\ufec1\141\ufec1\001\002\000\042" +
    "\056\ufec7\057\ufec7\065\ufec7\066\ufec7\067\ufec7\070\ufec7\071" +
    "\ufec7\072\ufec7\073\ufec7\111\ufec7\112\ufec7\124\ufec7\133\ufec7" +
    "\137\ufec7\140\ufec7\141\ufec7\001\002\000\042\056\u0153\057" +
    "\u0162\065\u015f\066\u0154\067\u0161\070\u0160\071\u0163\072\u015e" +
    "\073\u015b\111\u0157\112\u015c\124\u0156\133\u0158\137\u0155\140" +
    "\u015a\141\u0159\001\002\000\062\004\ufec6\005\ufec6\011\ufec6" +
    "\056\ufec6\060\ufec6\061\ufec6\062\ufec6\063\ufec6\064\ufec6\074" +
    "\ufec6\075\ufec6\076\ufec6\105\ufec6\107\ufec6\110\ufec6\114\ufec6" +
    "\115\ufec6\116\ufec6\117\ufec6\120\ufec6\125\ufec6\135\ufec6\136" +
    "\ufec6\137\ufec6\001\002\000\042\056\u0153\057\u0162\065\u015f" +
    "\066\u0154\067\u0161\070\u0160\071\u0163\072\u015e\073\u015b\111" +
    "\u0157\112\u015c\124\u0156\133\u0158\137\u0155\140\u015a\141\u0159" +
    "\001\002\000\062\004\ufec0\005\ufec0\011\ufec0\056\ufec0\060" +
    "\ufec0\061\ufec0\062\ufec0\063\ufec0\064\ufec0\074\ufec0\075\ufec0" +
    "\076\ufec0\105\ufec0\107\ufec0\110\ufec0\114\ufec0\115\ufec0\116" +
    "\ufec0\117\ufec0\120\ufec0\125\ufec0\135\ufec0\136\ufec0\137\ufec0" +
    "\001\002\000\042\056\u0153\057\u0162\065\u015f\066\u0154\067" +
    "\u0161\070\u0160\071\u0163\072\u015e\073\u015b\111\u0157\112\u015c" +
    "\124\u0156\133\u0158\137\u0155\140\u015a\141\u0159\001\002\000" +
    "\062\004\ufec2\005\ufec2\011\ufec2\056\ufec2\060\ufec2\061\ufec2" +
    "\062\ufec2\063\ufec2\064\ufec2\074\ufec2\075\ufec2\076\ufec2\105" +
    "\ufec2\107\ufec2\110\ufec2\114\ufec2\115\ufec2\116\ufec2\117\ufec2" +
    "\120\ufec2\125\ufec2\135\ufec2\136\ufec2\137\ufec2\001\002\000" +
    "\042\056\u0153\057\u0162\065\u015f\066\u0154\067\u0161\070\u0160" +
    "\071\u0163\072\u015e\073\u015b\111\u0157\112\u015c\124\u0156\133" +
    "\u0158\137\u0155\140\u015a\141\u0159\001\002\000\062\004\ufec4" +
    "\005\ufec4\011\ufec4\056\ufec4\060\ufec4\061\ufec4\062\ufec4\063" +
    "\ufec4\064\ufec4\074\ufec4\075\ufec4\076\ufec4\105\ufec4\107\ufec4" +
    "\110\ufec4\114\ufec4\115\ufec4\116\ufec4\117\ufec4\120\ufec4\125" +
    "\ufec4\135\ufec4\136\ufec4\137\ufec4\001\002\000\072\004\ufebf" +
    "\005\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062" +
    "\ufebf\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf" +
    "\107\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120" +
    "\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf" +
    "\137\ufebf\001\002\000\062\004\ufee5\005\ufee5\011\ufee5\056" +
    "\ufee5\060\ufee5\061\ufee5\062\ufee5\063\ufee5\064\ufee5\074\ufee5" +
    "\075\ufee5\076\ufee5\105\ufee5\107\ufee5\110\ufee5\114\ufee5\115" +
    "\ufee5\116\ufee5\117\ufee5\120\ufee5\125\ufee5\135\ufee5\136\ufee5" +
    "\137\ufee5\001\002\000\012\056\u0153\057\u0167\137\u0155\141" +
    "\u0168\001\002\000\004\125\u017c\001\002\000\072\004\ufed4" +
    "\005\ufed4\007\ufed4\011\ufed4\056\ufed4\060\ufed4\061\ufed4\062" +
    "\ufed4\063\ufed4\064\ufed4\074\ufed4\075\ufed4\076\ufed4\105\ufed4" +
    "\107\ufed4\110\ufed4\114\ufed4\115\ufed4\116\ufed4\117\ufed4\120" +
    "\ufed4\121\ufed4\122\ufed4\123\ufed4\125\ufed4\135\ufed4\136\ufed4" +
    "\137\ufed4\001\002\000\072\004\ufebf\005\ufebf\007\u016e\011" +
    "\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064\ufebf" +
    "\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf\114" +
    "\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122\u016b" +
    "\123\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002\000" +
    "\062\004\ufed3\005\ufed3\011\ufed3\056\ufed3\060\ufed3\061\ufed3" +
    "\062\ufed3\063\ufed3\064\ufed3\074\ufed3\075\ufed3\076\ufed3\105" +
    "\ufed3\107\ufed3\110\ufed3\114\ufed3\115\ufed3\116\ufed3\117\ufed3" +
    "\120\ufed3\125\ufed3\135\ufed3\136\ufed3\137\ufed3\001\002\000" +
    "\012\056\u0153\057\u0167\137\u0155\141\u0168\001\002\000\004" +
    "\125\u0181\001\002\000\072\004\ufed2\005\ufed2\007\ufed2\011" +
    "\ufed2\056\ufed2\060\ufed2\061\ufed2\062\ufed2\063\ufed2\064\ufed2" +
    "\074\ufed2\075\ufed2\076\ufed2\105\ufed2\107\ufed2\110\ufed2\114" +
    "\ufed2\115\ufed2\116\ufed2\117\ufed2\120\ufed2\121\ufed2\122\ufed2" +
    "\123\ufed2\125\ufed2\135\ufed2\136\ufed2\137\ufed2\001\002\000" +
    "\072\004\ufebf\005\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf" +
    "\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076" +
    "\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf" +
    "\117\ufebf\120\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\135" +
    "\ufebf\136\ufebf\137\ufebf\001\002\000\062\004\ufed1\005\ufed1" +
    "\011\ufed1\056\ufed1\060\ufed1\061\ufed1\062\ufed1\063\ufed1\064" +
    "\ufed1\074\ufed1\075\ufed1\076\ufed1\105\ufed1\107\ufed1\110\ufed1" +
    "\114\ufed1\115\ufed1\116\ufed1\117\ufed1\120\ufed1\125\ufed1\135" +
    "\ufed1\136\ufed1\137\ufed1\001\002\000\012\056\u0153\057\u0167" +
    "\137\u0155\141\u0168\001\002\000\004\125\u0186\001\002\000" +
    "\072\004\ufed8\005\ufed8\007\ufed8\011\ufed8\056\ufed8\060\ufed8" +
    "\061\ufed8\062\ufed8\063\ufed8\064\ufed8\074\ufed8\075\ufed8\076" +
    "\ufed8\105\ufed8\107\ufed8\110\ufed8\114\ufed8\115\ufed8\116\ufed8" +
    "\117\ufed8\120\ufed8\121\ufed8\122\ufed8\123\ufed8\125\ufed8\135" +
    "\ufed8\136\ufed8\137\ufed8\001\002\000\072\004\ufebf\005\ufebf" +
    "\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063" +
    "\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf" +
    "\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121" +
    "\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf" +
    "\001\002\000\062\004\ufed7\005\ufed7\011\ufed7\056\ufed7\060" +
    "\ufed7\061\ufed7\062\ufed7\063\ufed7\064\ufed7\074\ufed7\075\ufed7" +
    "\076\ufed7\105\ufed7\107\ufed7\110\ufed7\114\ufed7\115\ufed7\116" +
    "\ufed7\117\ufed7\120\ufed7\125\ufed7\135\ufed7\136\ufed7\137\ufed7" +
    "\001\002\000\004\125\u018a\001\002\000\072\004\ufece\005" +
    "\ufece\007\ufece\011\ufece\056\ufece\060\ufece\061\ufece\062\ufece" +
    "\063\ufece\064\ufece\074\ufece\075\ufece\076\ufece\105\ufece\107" +
    "\ufece\110\ufece\114\ufece\115\ufece\116\ufece\117\ufece\120\ufece" +
    "\121\ufece\122\ufece\123\ufece\125\ufece\135\ufece\136\ufece\137" +
    "\ufece\001\002\000\072\004\ufebf\005\ufebf\007\u016e\011\ufebf" +
    "\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074" +
    "\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf" +
    "\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122\u016b\123" +
    "\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002\000\062" +
    "\004\ufecd\005\ufecd\011\ufecd\056\ufecd\060\ufecd\061\ufecd\062" +
    "\ufecd\063\ufecd\064\ufecd\074\ufecd\075\ufecd\076\ufecd\105\ufecd" +
    "\107\ufecd\110\ufecd\114\ufecd\115\ufecd\116\ufecd\117\ufecd\120" +
    "\ufecd\125\ufecd\135\ufecd\136\ufecd\137\ufecd\001\002\000\072" +
    "\004\ufebf\005\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf\061" +
    "\ufebf\062\ufebf\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf" +
    "\105\ufebf\107\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117" +
    "\ufebf\120\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf" +
    "\136\ufebf\137\ufebf\001\002\000\062\004\ufedf\005\ufedf\011" +
    "\ufedf\056\ufedf\060\ufedf\061\ufedf\062\ufedf\063\ufedf\064\ufedf" +
    "\074\ufedf\075\ufedf\076\ufedf\105\ufedf\107\ufedf\110\ufedf\114" +
    "\ufedf\115\ufedf\116\ufedf\117\ufedf\120\ufedf\125\ufedf\135\ufedf" +
    "\136\ufedf\137\ufedf\001\002\000\072\004\ufebf\005\ufebf\007" +
    "\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf" +
    "\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110" +
    "\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f" +
    "\122\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001" +
    "\002\000\062\004\ufee1\005\ufee1\011\ufee1\056\ufee1\060\ufee1" +
    "\061\ufee1\062\ufee1\063\ufee1\064\ufee1\074\ufee1\075\ufee1\076" +
    "\ufee1\105\ufee1\107\ufee1\110\ufee1\114\ufee1\115\ufee1\116\ufee1" +
    "\117\ufee1\120\ufee1\125\ufee1\135\ufee1\136\ufee1\137\ufee1\001" +
    "\002\000\004\125\u0192\001\002\000\072\004\ufecc\005\ufecc" +
    "\007\ufecc\011\ufecc\056\ufecc\060\ufecc\061\ufecc\062\ufecc\063" +
    "\ufecc\064\ufecc\074\ufecc\075\ufecc\076\ufecc\105\ufecc\107\ufecc" +
    "\110\ufecc\114\ufecc\115\ufecc\116\ufecc\117\ufecc\120\ufecc\121" +
    "\ufecc\122\ufecc\123\ufecc\125\ufecc\135\ufecc\136\ufecc\137\ufecc" +
    "\001\002\000\072\004\ufebf\005\ufebf\007\u016e\011\ufebf\056" +
    "\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074\ufebf" +
    "\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf\115" +
    "\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122\u016b\123\u016c" +
    "\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002\000\062\004" +
    "\ufecb\005\ufecb\011\ufecb\056\ufecb\060\ufecb\061\ufecb\062\ufecb" +
    "\063\ufecb\064\ufecb\074\ufecb\075\ufecb\076\ufecb\105\ufecb\107" +
    "\ufecb\110\ufecb\114\ufecb\115\ufecb\116\ufecb\117\ufecb\120\ufecb" +
    "\125\ufecb\135\ufecb\136\ufecb\137\ufecb\001\002\000\072\004" +
    "\ufebf\005\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf" +
    "\062\ufebf\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105" +
    "\ufebf\107\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf" +
    "\120\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf\136" +
    "\ufebf\137\ufebf\001\002\000\062\004\ufedd\005\ufedd\011\ufedd" +
    "\056\ufedd\060\ufedd\061\ufedd\062\ufedd\063\ufedd\064\ufedd\074" +
    "\ufedd\075\ufedd\076\ufedd\105\ufedd\107\ufedd\110\ufedd\114\ufedd" +
    "\115\ufedd\116\ufedd\117\ufedd\120\ufedd\125\ufedd\135\ufedd\136" +
    "\ufedd\137\ufedd\001\002\000\072\004\ufebf\005\ufebf\007\u016e" +
    "\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064" +
    "\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf" +
    "\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122" +
    "\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002" +
    "\000\062\004\ufedb\005\ufedb\011\ufedb\056\ufedb\060\ufedb\061" +
    "\ufedb\062\ufedb\063\ufedb\064\ufedb\074\ufedb\075\ufedb\076\ufedb" +
    "\105\ufedb\107\ufedb\110\ufedb\114\ufedb\115\ufedb\116\ufedb\117" +
    "\ufedb\120\ufedb\125\ufedb\135\ufedb\136\ufedb\137\ufedb\001\002" +
    "\000\004\141\u019a\001\002\000\004\125\u019b\001\002\000" +
    "\072\004\ufeda\005\ufeda\007\ufeda\011\ufeda\056\ufeda\060\ufeda" +
    "\061\ufeda\062\ufeda\063\ufeda\064\ufeda\074\ufeda\075\ufeda\076" +
    "\ufeda\105\ufeda\107\ufeda\110\ufeda\114\ufeda\115\ufeda\116\ufeda" +
    "\117\ufeda\120\ufeda\121\ufeda\122\ufeda\123\ufeda\125\ufeda\135" +
    "\ufeda\136\ufeda\137\ufeda\001\002\000\072\004\ufebf\005\ufebf" +
    "\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063" +
    "\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf" +
    "\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121" +
    "\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf" +
    "\001\002\000\062\004\ufed9\005\ufed9\011\ufed9\056\ufed9\060" +
    "\ufed9\061\ufed9\062\ufed9\063\ufed9\064\ufed9\074\ufed9\075\ufed9" +
    "\076\ufed9\105\ufed9\107\ufed9\110\ufed9\114\ufed9\115\ufed9\116" +
    "\ufed9\117\ufed9\120\ufed9\125\ufed9\135\ufed9\136\ufed9\137\ufed9" +
    "\001\002\000\072\004\ufebf\005\ufebf\007\u016e\011\ufebf\056" +
    "\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074\ufebf" +
    "\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf\115" +
    "\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122\u016b\123\u016c" +
    "\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002\000\062\004" +
    "\ufee3\005\ufee3\011\ufee3\056\ufee3\060\ufee3\061\ufee3\062\ufee3" +
    "\063\ufee3\064\ufee3\074\ufee3\075\ufee3\076\ufee3\105\ufee3\107" +
    "\ufee3\110\ufee3\114\ufee3\115\ufee3\116\ufee3\117\ufee3\120\ufee3" +
    "\125\ufee3\135\ufee3\136\ufee3\137\ufee3\001\002\000\042\056" +
    "\u0153\057\u0162\065\u015f\066\u0154\067\u0161\070\u0160\071\u0163" +
    "\072\u015e\073\u015b\111\u0157\112\u015c\124\u0156\133\u0158\137" +
    "\u0155\140\u015a\141\u0159\001\002\000\004\125\u01a2\001\002" +
    "\000\072\004\ufec9\005\ufec9\007\ufec9\011\ufec9\056\ufec9\060" +
    "\ufec9\061\ufec9\062\ufec9\063\ufec9\064\ufec9\074\ufec9\075\ufec9" +
    "\076\ufec9\105\ufec9\107\ufec9\110\ufec9\114\ufec9\115\ufec9\116" +
    "\ufec9\117\ufec9\120\ufec9\121\ufec9\122\ufec9\123\ufec9\125\ufec9" +
    "\135\ufec9\136\ufec9\137\ufec9\001\002\000\072\004\ufebf\005" +
    "\ufebf\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf" +
    "\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107" +
    "\ufebf\110\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf" +
    "\121\u016f\122\u016b\123\u016c\125\ufebf\135\ufebf\136\ufebf\137" +
    "\ufebf\001\002\000\062\004\ufec8\005\ufec8\011\ufec8\056\ufec8" +
    "\060\ufec8\061\ufec8\062\ufec8\063\ufec8\064\ufec8\074\ufec8\075" +
    "\ufec8\076\ufec8\105\ufec8\107\ufec8\110\ufec8\114\ufec8\115\ufec8" +
    "\116\ufec8\117\ufec8\120\ufec8\125\ufec8\135\ufec8\136\ufec8\137" +
    "\ufec8\001\002\000\012\056\u0153\057\u0167\137\u0155\141\u0168" +
    "\001\002\000\004\125\u01a7\001\002\000\072\004\ufed6\005" +
    "\ufed6\007\ufed6\011\ufed6\056\ufed6\060\ufed6\061\ufed6\062\ufed6" +
    "\063\ufed6\064\ufed6\074\ufed6\075\ufed6\076\ufed6\105\ufed6\107" +
    "\ufed6\110\ufed6\114\ufed6\115\ufed6\116\ufed6\117\ufed6\120\ufed6" +
    "\121\ufed6\122\ufed6\123\ufed6\125\ufed6\135\ufed6\136\ufed6\137" +
    "\ufed6\001\002\000\072\004\ufebf\005\ufebf\007\u016e\011\ufebf" +
    "\056\ufebf\060\ufebf\061\ufebf\062\ufebf\063\ufebf\064\ufebf\074" +
    "\ufebf\075\ufebf\076\ufebf\105\ufebf\107\ufebf\110\ufebf\114\ufebf" +
    "\115\ufebf\116\ufebf\117\ufebf\120\ufebf\121\u016f\122\u016b\123" +
    "\u016c\125\ufebf\135\ufebf\136\ufebf\137\ufebf\001\002\000\062" +
    "\004\ufed5\005\ufed5\011\ufed5\056\ufed5\060\ufed5\061\ufed5\062" +
    "\ufed5\063\ufed5\064\ufed5\074\ufed5\075\ufed5\076\ufed5\105\ufed5" +
    "\107\ufed5\110\ufed5\114\ufed5\115\ufed5\116\ufed5\117\ufed5\120" +
    "\ufed5\125\ufed5\135\ufed5\136\ufed5\137\ufed5\001\002\000\044" +
    "\006\ufebc\056\ufebc\057\ufebc\065\ufebc\066\ufebc\067\ufebc\070" +
    "\ufebc\071\ufebc\072\ufebc\073\ufebc\111\ufebc\112\ufebc\124\ufebc" +
    "\133\ufebc\137\ufebc\140\ufebc\141\ufebc\001\002\000\044\006" +
    "\ufeba\056\ufeba\057\ufeba\065\ufeba\066\ufeba\067\ufeba\070\ufeba" +
    "\071\ufeba\072\ufeba\073\ufeba\111\ufeba\112\ufeba\124\ufeba\133" +
    "\ufeba\137\ufeba\140\ufeba\141\ufeba\001\002\000\044\006\ufebd" +
    "\056\ufebd\057\ufebd\065\ufebd\066\ufebd\067\ufebd\070\ufebd\071" +
    "\ufebd\072\ufebd\073\ufebd\111\ufebd\112\ufebd\124\ufebd\133\ufebd" +
    "\137\ufebd\140\ufebd\141\ufebd\001\002\000\044\006\ufebe\056" +
    "\ufebe\057\ufebe\065\ufebe\066\ufebe\067\ufebe\070\ufebe\071\ufebe" +
    "\072\ufebe\073\ufebe\111\ufebe\112\ufebe\124\ufebe\133\ufebe\137" +
    "\ufebe\140\ufebe\141\ufebe\001\002\000\044\006\ufebb\056\ufebb" +
    "\057\ufebb\065\ufebb\066\ufebb\067\ufebb\070\ufebb\071\ufebb\072" +
    "\ufebb\073\ufebb\111\ufebb\112\ufebb\124\ufebb\133\ufebb\137\ufebb" +
    "\140\ufebb\141\ufebb\001\002\000\044\006\ufeeb\056\ufeeb\057" +
    "\ufeeb\065\ufeeb\066\ufeeb\067\ufeeb\070\ufeeb\071\ufeeb\072\ufeeb" +
    "\073\ufeeb\111\ufeeb\112\ufeeb\124\ufeeb\133\ufeeb\137\ufeeb\140" +
    "\ufeeb\141\ufeeb\001\002\000\044\006\ufeb9\056\ufeb9\057\ufeb9" +
    "\065\ufeb9\066\ufeb9\067\ufeb9\070\ufeb9\071\ufeb9\072\ufeb9\073" +
    "\ufeb9\111\ufeb9\112\ufeb9\124\ufeb9\133\ufeb9\137\ufeb9\140\ufeb9" +
    "\141\ufeb9\001\002\000\044\006\u0138\056\ufee7\057\ufee7\065" +
    "\ufee7\066\ufee7\067\ufee7\070\ufee7\071\ufee7\072\ufee7\073\ufee7" +
    "\111\ufee7\112\ufee7\124\ufee7\133\ufee7\137\ufee7\140\ufee7\141" +
    "\ufee7\001\002\000\042\056\u0153\057\u0162\065\u015f\066\u0154" +
    "\067\u0161\070\u0160\071\u0163\072\u015e\073\u015b\111\u0157\112" +
    "\u015c\124\u0156\133\u0158\137\u0155\140\u015a\141\u0159\001\002" +
    "\000\010\120\u01b6\125\ufeb4\135\u01b5\001\002\000\004\125" +
    "\ufeea\001\002\000\044\006\ufeb6\056\ufeb6\057\ufeb6\065\ufeb6" +
    "\066\ufeb6\067\ufeb6\070\ufeb6\071\ufeb6\072\ufeb6\073\ufeb6\111" +
    "\ufeb6\112\ufeb6\124\ufeb6\133\ufeb6\137\ufeb6\140\ufeb6\141\ufeb6" +
    "\001\002\000\044\006\ufeb8\056\ufeb8\057\ufeb8\065\ufeb8\066" +
    "\ufeb8\067\ufeb8\070\ufeb8\071\ufeb8\072\ufeb8\073\ufeb8\111\ufeb8" +
    "\112\ufeb8\124\ufeb8\133\ufeb8\137\ufeb8\140\ufeb8\141\ufeb8\001" +
    "\002\000\044\006\u0138\056\ufee7\057\ufee7\065\ufee7\066\ufee7" +
    "\067\ufee7\070\ufee7\071\ufee7\072\ufee7\073\ufee7\111\ufee7\112" +
    "\ufee7\124\ufee7\133\ufee7\137\ufee7\140\ufee7\141\ufee7\001\002" +
    "\000\004\125\ufeb7\001\002\000\044\006\u0138\056\ufee7\057" +
    "\ufee7\065\ufee7\066\ufee7\067\ufee7\070\ufee7\071\ufee7\072\ufee7" +
    "\073\ufee7\111\ufee7\112\ufee7\124\ufee7\133\ufee7\137\ufee7\140" +
    "\ufee7\141\ufee7\001\002\000\004\125\ufeb5\001\002\000\004" +
    "\124\u01bc\001\002\000\010\056\u0153\137\u0155\141\u01bf\001" +
    "\002\000\006\125\ufe99\134\ufe99\001\002\000\004\125\u01c4" +
    "\001\002\000\006\125\ufe97\134\ufe97\001\002\000\006\125" +
    "\ufe94\134\u01c2\001\002\000\004\125\ufe96\001\002\000\010" +
    "\056\u0153\137\u0155\141\u01bf\001\002\000\004\125\ufe95\001" +
    "\002\000\004\126\u01c5\001\002\000\040\011\uff28\056\uff3c" +
    "\060\uff3e\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075" +
    "\u012d\076\uff3a\105\uff36\107\uff2e\110\uff32\136\uff28\137\uff3c" +
    "\001\002\000\006\011\uff2d\136\uff2d\001\002\000\006\125" +
    "\ufe94\134\u01c2\001\002\000\004\125\ufe98\001\002\000\004" +
    "\124\u01ca\001\002\000\012\056\u0153\057\u0167\137\u0155\141" +
    "\u0168\001\002\000\004\125\uff2b\001\002\000\004\125\u01cd" +
    "\001\002\000\004\126\u01ce\001\002\000\040\011\uff28\056" +
    "\uff3c\060\uff3e\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c" +
    "\075\u012d\076\uff3a\105\uff36\107\uff2e\110\uff32\136\uff28\137" +
    "\uff3c\001\002\000\006\011\uff2a\136\uff2a\001\002\000\004" +
    "\124\u01d1\001\002\000\020\056\ufeab\060\ufead\061\ufead\062" +
    "\ufead\063\ufead\064\ufead\137\ufeab\001\002\000\014\060\u024e" +
    "\061\u0254\062\u0252\063\u0253\064\u024f\001\002\000\004\125" +
    "\u022d\001\002\000\006\056\u0153\137\u0155\001\002\000\004" +
    "\012\uff18\001\002\000\004\125\ufeaa\001\002\000\004\012" +
    "\u01d8\001\002\000\042\056\u0153\057\u01e7\065\u01e4\066\u01d9" +
    "\067\u01e6\070\u01e5\071\u01e8\072\u01e3\073\u01e0\111\u01db\112" +
    "\u01e1\124\u01da\133\u01dc\137\u0155\140\u01de\141\u01dd\001\002" +
    "\000\004\124\u0228\001\002\000\042\056\ufefa\057\ufefa\065" +
    "\ufefa\066\ufefa\067\ufefa\070\ufefa\071\ufefa\072\ufefa\073\ufefa" +
    "\111\ufefa\112\ufefa\124\ufefa\133\ufefa\137\ufefa\140\ufefa\141" +
    "\ufefa\001\002\000\014\007\uff14\121\uff14\122\uff14\123\uff14" +
    "\126\uff14\001\002\000\004\124\u021c\001\002\000\014\007" +
    "\uff0c\121\uff0c\122\uff0c\123\uff0c\126\uff0c\001\002\000\014" +
    "\007\uff0e\121\uff0e\122\uff0e\123\uff0e\126\uff0e\001\002\000" +
    "\042\011\uff17\056\uff17\060\uff17\061\uff17\062\uff17\063\uff17" +
    "\064\uff17\074\uff17\075\uff17\076\uff17\105\uff17\107\uff17\110" +
    "\uff17\125\uff17\136\uff17\137\uff17\001\002\000\004\124\u0214" +
    "\001\002\000\014\007\uff12\121\uff12\122\uff12\123\uff12\126" +
    "\uff12\001\002\000\014\007\uff10\121\uff10\122\uff10\123\uff10" +
    "\126\uff10\001\002\000\004\124\u020c\001\002\000\004\124" +
    "\u0207\001\002\000\004\124\u0202\001\002\000\004\124\u01fd" +
    "\001\002\000\014\007\uff16\121\uff16\122\uff16\123\uff16\126" +
    "\uff16\001\002\000\004\124\u01e9\001\002\000\012\056\u0153" +
    "\057\u0167\137\u0155\141\u0168\001\002\000\004\125\u01eb\001" +
    "\002\000\014\007\uff00\121\uff00\122\uff00\123\uff00\126\uff00" +
    "\001\002\000\014\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126" +
    "\u01ed\001\002\000\042\011\ufeec\056\ufeec\060\ufeec\061\ufeec" +
    "\062\ufeec\063\ufeec\064\ufeec\074\ufeec\075\ufeec\076\ufeec\105" +
    "\ufeec\107\ufeec\110\ufeec\125\ufeec\136\ufeec\137\ufeec\001\002" +
    "\000\042\056\ufef2\057\ufef2\065\ufef2\066\ufef2\067\ufef2\070" +
    "\ufef2\071\ufef2\072\ufef2\073\ufef2\111\ufef2\112\ufef2\124\ufef2" +
    "\133\ufef2\137\ufef2\140\ufef2\141\ufef2\001\002\000\042\056" +
    "\ufef0\057\ufef0\065\ufef0\066\ufef0\067\ufef0\070\ufef0\071\ufef0" +
    "\072\ufef0\073\ufef0\111\ufef0\112\ufef0\124\ufef0\133\ufef0\137" +
    "\ufef0\140\ufef0\141\ufef0\001\002\000\042\011\ufeff\056\ufeff" +
    "\060\ufeff\061\ufeff\062\ufeff\063\ufeff\064\ufeff\074\ufeff\075" +
    "\ufeff\076\ufeff\105\ufeff\107\ufeff\110\ufeff\125\ufeff\136\ufeff" +
    "\137\ufeff\001\002\000\042\056\ufeee\057\ufeee\065\ufeee\066" +
    "\ufeee\067\ufeee\070\ufeee\071\ufeee\072\ufeee\073\ufeee\111\ufeee" +
    "\112\ufeee\124\ufeee\133\ufeee\137\ufeee\140\ufeee\141\ufeee\001" +
    "\002\000\042\056\ufef4\057\ufef4\065\ufef4\066\ufef4\067\ufef4" +
    "\070\ufef4\071\ufef4\072\ufef4\073\ufef4\111\ufef4\112\ufef4\124" +
    "\ufef4\133\ufef4\137\ufef4\140\ufef4\141\ufef4\001\002\000\042" +
    "\056\u0153\057\u01e7\065\u01e4\066\u01d9\067\u01e6\070\u01e5\071" +
    "\u01e8\072\u01e3\073\u01e0\111\u01db\112\u01e1\124\u01da\133\u01dc" +
    "\137\u0155\140\u01de\141\u01dd\001\002\000\042\011\ufef3\056" +
    "\ufef3\060\ufef3\061\ufef3\062\ufef3\063\ufef3\064\ufef3\074\ufef3" +
    "\075\ufef3\076\ufef3\105\ufef3\107\ufef3\110\ufef3\125\ufef3\136" +
    "\ufef3\137\ufef3\001\002\000\042\056\u0153\057\u01e7\065\u01e4" +
    "\066\u01d9\067\u01e6\070\u01e5\071\u01e8\072\u01e3\073\u01e0\111" +
    "\u01db\112\u01e1\124\u01da\133\u01dc\137\u0155\140\u01de\141\u01dd" +
    "\001\002\000\042\011\ufeed\056\ufeed\060\ufeed\061\ufeed\062" +
    "\ufeed\063\ufeed\064\ufeed\074\ufeed\075\ufeed\076\ufeed\105\ufeed" +
    "\107\ufeed\110\ufeed\125\ufeed\136\ufeed\137\ufeed\001\002\000" +
    "\042\056\u0153\057\u01e7\065\u01e4\066\u01d9\067\u01e6\070\u01e5" +
    "\071\u01e8\072\u01e3\073\u01e0\111\u01db\112\u01e1\124\u01da\133" +
    "\u01dc\137\u0155\140\u01de\141\u01dd\001\002\000\042\011\ufeef" +
    "\056\ufeef\060\ufeef\061\ufeef\062\ufeef\063\ufeef\064\ufeef\074" +
    "\ufeef\075\ufeef\076\ufeef\105\ufeef\107\ufeef\110\ufeef\125\ufeef" +
    "\136\ufeef\137\ufeef\001\002\000\042\056\u0153\057\u01e7\065" +
    "\u01e4\066\u01d9\067\u01e6\070\u01e5\071\u01e8\072\u01e3\073\u01e0" +
    "\111\u01db\112\u01e1\124\u01da\133\u01dc\137\u0155\140\u01de\141" +
    "\u01dd\001\002\000\042\011\ufef1\056\ufef1\060\ufef1\061\ufef1" +
    "\062\ufef1\063\ufef1\064\ufef1\074\ufef1\075\ufef1\076\ufef1\105" +
    "\ufef1\107\ufef1\110\ufef1\125\ufef1\136\ufef1\137\ufef1\001\002" +
    "\000\014\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001" +
    "\002\000\042\011\uff15\056\uff15\060\uff15\061\uff15\062\uff15" +
    "\063\uff15\064\uff15\074\uff15\075\uff15\076\uff15\105\uff15\107" +
    "\uff15\110\uff15\125\uff15\136\uff15\137\uff15\001\002\000\012" +
    "\056\u0153\057\u0167\137\u0155\141\u0168\001\002\000\004\125" +
    "\u01ff\001\002\000\014\007\uff04\121\uff04\122\uff04\123\uff04" +
    "\126\uff04\001\002\000\014\007\u01f1\121\u01f2\122\u01ee\123" +
    "\u01ef\126\u01ed\001\002\000\042\011\uff03\056\uff03\060\uff03" +
    "\061\uff03\062\uff03\063\uff03\064\uff03\074\uff03\075\uff03\076" +
    "\uff03\105\uff03\107\uff03\110\uff03\125\uff03\136\uff03\137\uff03" +
    "\001\002\000\012\056\u0153\057\u0167\137\u0155\141\u0168\001" +
    "\002\000\004\125\u0204\001\002\000\052\007\uff02\011\uff02" +
    "\056\uff02\060\uff02\061\uff02\062\uff02\063\uff02\064\uff02\074" +
    "\uff02\075\uff02\076\uff02\105\uff02\107\uff02\110\uff02\121\uff02" +
    "\122\uff02\123\uff02\125\uff02\136\uff02\137\uff02\001\002\000" +
    "\052\007\u016e\011\ufebf\056\ufebf\060\ufebf\061\ufebf\062\ufebf" +
    "\063\ufebf\064\ufebf\074\ufebf\075\ufebf\076\ufebf\105\ufebf\107" +
    "\ufebf\110\ufebf\121\u016f\122\u016b\123\u016c\125\ufebf\136\ufebf" +
    "\137\ufebf\001\002\000\042\011\uff01\056\uff01\060\uff01\061" +
    "\uff01\062\uff01\063\uff01\064\uff01\074\uff01\075\uff01\076\uff01" +
    "\105\uff01\107\uff01\110\uff01\125\uff01\136\uff01\137\uff01\001" +
    "\002\000\012\056\u0153\057\u0167\137\u0155\141\u0168\001\002" +
    "\000\004\125\u0209\001\002\000\014\007\uff08\121\uff08\122" +
    "\uff08\123\uff08\126\uff08\001\002\000\014\007\u01f1\121\u01f2" +
    "\122\u01ee\123\u01ef\126\u01ed\001\002\000\042\011\uff07\056" +
    "\uff07\060\uff07\061\uff07\062\uff07\063\uff07\064\uff07\074\uff07" +
    "\075\uff07\076\uff07\105\uff07\107\uff07\110\uff07\125\uff07\136" +
    "\uff07\137\uff07\001\002\000\004\125\u020d\001\002\000\014" +
    "\007\ufefe\121\ufefe\122\ufefe\123\ufefe\126\ufefe\001\002\000" +
    "\014\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002" +
    "\000\042\011\ufefd\056\ufefd\060\ufefd\061\ufefd\062\ufefd\063" +
    "\ufefd\064\ufefd\074\ufefd\075\ufefd\076\ufefd\105\ufefd\107\ufefd" +
    "\110\ufefd\125\ufefd\136\ufefd\137\ufefd\001\002\000\014\007" +
    "\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002\000\042" +
    "\011\uff0f\056\uff0f\060\uff0f\061\uff0f\062\uff0f\063\uff0f\064" +
    "\uff0f\074\uff0f\075\uff0f\076\uff0f\105\uff0f\107\uff0f\110\uff0f" +
    "\125\uff0f\136\uff0f\137\uff0f\001\002\000\014\007\u01f1\121" +
    "\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002\000\042\011\uff11" +
    "\056\uff11\060\uff11\061\uff11\062\uff11\063\uff11\064\uff11\074" +
    "\uff11\075\uff11\076\uff11\105\uff11\107\uff11\110\uff11\125\uff11" +
    "\136\uff11\137\uff11\001\002\000\004\125\u0215\001\002\000" +
    "\014\007\ufefc\121\ufefc\122\ufefc\123\ufefc\126\ufefc\001\002" +
    "\000\014\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001" +
    "\002\000\042\011\ufefb\056\ufefb\060\ufefb\061\ufefb\062\ufefb" +
    "\063\ufefb\064\ufefb\074\ufefb\075\ufefb\076\ufefb\105\ufefb\107" +
    "\ufefb\110\ufefb\125\ufefb\136\ufefb\137\ufefb\001\002\000\014" +
    "\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002\000" +
    "\042\011\uff0d\056\uff0d\060\uff0d\061\uff0d\062\uff0d\063\uff0d" +
    "\064\uff0d\074\uff0d\075\uff0d\076\uff0d\105\uff0d\107\uff0d\110" +
    "\uff0d\125\uff0d\136\uff0d\137\uff0d\001\002\000\014\007\u01f1" +
    "\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002\000\042\011" +
    "\uff0b\056\uff0b\060\uff0b\061\uff0b\062\uff0b\063\uff0b\064\uff0b" +
    "\074\uff0b\075\uff0b\076\uff0b\105\uff0b\107\uff0b\110\uff0b\125" +
    "\uff0b\136\uff0b\137\uff0b\001\002\000\004\141\u021d\001\002" +
    "\000\004\125\u021e\001\002\000\014\007\uff0a\121\uff0a\122" +
    "\uff0a\123\uff0a\126\uff0a\001\002\000\014\007\u01f1\121\u01f2" +
    "\122\u01ee\123\u01ef\126\u01ed\001\002\000\042\011\uff09\056" +
    "\uff09\060\uff09\061\uff09\062\uff09\063\uff09\064\uff09\074\uff09" +
    "\075\uff09\076\uff09\105\uff09\107\uff09\110\uff09\125\uff09\136" +
    "\uff09\137\uff09\001\002\000\014\007\u01f1\121\u01f2\122\u01ee" +
    "\123\u01ef\126\u01ed\001\002\000\042\011\uff13\056\uff13\060" +
    "\uff13\061\uff13\062\uff13\063\uff13\064\uff13\074\uff13\075\uff13" +
    "\076\uff13\105\uff13\107\uff13\110\uff13\125\uff13\136\uff13\137" +
    "\uff13\001\002\000\042\056\u0153\057\u01e7\065\u01e4\066\u01d9" +
    "\067\u01e6\070\u01e5\071\u01e8\072\u01e3\073\u01e0\111\u01db\112" +
    "\u01e1\124\u01da\133\u01dc\137\u0155\140\u01de\141\u01dd\001\002" +
    "\000\004\125\u0225\001\002\000\014\007\ufef9\121\ufef9\122" +
    "\ufef9\123\ufef9\126\ufef9\001\002\000\014\007\u01f1\121\u01f2" +
    "\122\u01ee\123\u01ef\126\u01ed\001\002\000\042\011\ufef8\056" +
    "\ufef8\060\ufef8\061\ufef8\062\ufef8\063\ufef8\064\ufef8\074\ufef8" +
    "\075\ufef8\076\ufef8\105\ufef8\107\ufef8\110\ufef8\125\ufef8\136" +
    "\ufef8\137\ufef8\001\002\000\012\056\u0153\057\u0167\137\u0155" +
    "\141\u0168\001\002\000\004\125\u022a\001\002\000\014\007" +
    "\uff06\121\uff06\122\uff06\123\uff06\126\uff06\001\002\000\014" +
    "\007\u01f1\121\u01f2\122\u01ee\123\u01ef\126\u01ed\001\002\000" +
    "\042\011\uff05\056\uff05\060\uff05\061\uff05\062\uff05\063\uff05" +
    "\064\uff05\074\uff05\075\uff05\076\uff05\105\uff05\107\uff05\110" +
    "\uff05\125\uff05\136\uff05\137\uff05\001\002\000\004\106\u022e" +
    "\001\002\000\004\124\u022f\001\002\000\012\056\uff35\124" +
    "\uff35\137\uff35\140\uff35\001\002\000\012\056\u0153\124\u0234" +
    "\137\u0155\140\u0231\001\002\000\014\007\ufea7\121\ufea7\122" +
    "\ufea7\123\ufea7\125\ufea7\001\002\000\014\007\ufea9\121\ufea9" +
    "\122\ufea9\123\ufea9\125\ufea9\001\002\000\004\125\u0246\001" +
    "\002\000\012\056\ufea5\124\ufea5\137\ufea5\140\ufea5\001\002" +
    "\000\012\056\u0153\124\u0234\137\u0155\140\u0231\001\002\000" +
    "\004\125\u0237\001\002\000\014\007\ufea4\121\ufea4\122\ufea4" +
    "\123\ufea4\125\ufea4\001\002\000\014\007\u023b\121\u023c\122" +
    "\u0239\123\u023a\125\ufe9a\001\002\000\012\056\ufea0\124\ufea0" +
    "\137\ufea0\140\ufea0\001\002\000\012\056\ufe9e\124\ufe9e\137" +
    "\ufe9e\140\ufe9e\001\002\000\012\056\ufe9c\124\ufe9c\137\ufe9c" +
    "\140\ufe9c\001\002\000\012\056\ufea2\124\ufea2\137\ufea2\140" +
    "\ufea2\001\002\000\004\125\ufea3\001\002\000\012\056\u0153" +
    "\124\u0234\137\u0155\140\u0231\001\002\000\004\125\ufea1\001" +
    "\002\000\012\056\u0153\124\u0234\137\u0155\140\u0231\001\002" +
    "\000\004\125\ufe9b\001\002\000\012\056\u0153\124\u0234\137" +
    "\u0155\140\u0231\001\002\000\004\125\ufe9d\001\002\000\012" +
    "\056\u0153\124\u0234\137\u0155\140\u0231\001\002\000\004\125" +
    "\ufe9f\001\002\000\004\101\u013d\001\002\000\040\011\uff34" +
    "\056\uff34\060\uff34\061\uff34\062\uff34\063\uff34\064\uff34\074" +
    "\uff34\075\uff34\076\uff34\105\uff34\107\uff34\110\uff34\136\uff34" +
    "\137\uff34\001\002\000\040\011\uff28\056\uff3c\060\uff3e\061" +
    "\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075\u012d\076\uff3a" +
    "\105\uff36\107\uff2e\110\uff32\136\uff28\137\uff3c\001\002\000" +
    "\006\011\uff33\136\uff33\001\002\000\014\007\u023b\121\u023c" +
    "\122\u0239\123\u023a\125\ufe9a\001\002\000\004\125\ufea8\001" +
    "\002\000\014\007\u023b\121\u023c\122\u0239\123\u023a\125\ufe9a" +
    "\001\002\000\004\125\ufea6\001\002\000\010\056\uff25\113" +
    "\uff25\137\uff25\001\002\000\010\056\uff24\113\uff24\137\uff24" +
    "\001\002\000\010\056\uff1d\113\u0255\137\uff1d\001\002\000" +
    "\004\125\ufeac\001\002\000\010\056\uff22\113\uff22\137\uff22" +
    "\001\002\000\010\056\uff21\113\uff21\137\uff21\001\002\000" +
    "\010\056\uff23\113\uff23\137\uff23\001\002\000\006\056\uff1e" +
    "\137\uff1e\001\002\000\006\056\u0153\137\u0155\001\002\000" +
    "\010\012\uff27\126\uff27\134\uff27\001\002\000\010\012\u025b" +
    "\126\u025a\134\u0259\001\002\000\006\056\u0153\137\u0155\001" +
    "\002\000\042\011\uff1c\056\uff1c\060\uff1c\061\uff1c\062\uff1c" +
    "\063\uff1c\064\uff1c\074\uff1c\075\uff1c\076\uff1c\105\uff1c\107" +
    "\uff1c\110\uff1c\125\uff1c\136\uff1c\137\uff1c\001\002\000\042" +
    "\056\u0153\057\u01e7\065\u01e4\066\u01d9\067\u01e6\070\u01e5\071" +
    "\u01e8\072\u01e3\073\u01e0\111\u01db\112\u01e1\124\u01da\133\u01dc" +
    "\137\u0155\140\u01de\141\u01dd\001\002\000\042\011\uff26\056" +
    "\uff26\060\uff26\061\uff26\062\uff26\063\uff26\064\uff26\074\uff26" +
    "\075\uff26\076\uff26\105\uff26\107\uff26\110\uff26\125\uff26\136" +
    "\uff26\137\uff26\001\002\000\042\011\uff19\056\uff19\060\uff19" +
    "\061\uff19\062\uff19\063\uff19\064\uff19\074\uff19\075\uff19\076" +
    "\uff19\105\uff19\107\uff19\110\uff19\125\uff19\136\uff19\137\uff19" +
    "\001\002\000\010\012\uff1b\126\uff1b\134\uff1b\001\002\000" +
    "\010\012\u025b\126\u025a\134\u0259\001\002\000\042\011\uff1a" +
    "\056\uff1a\060\uff1a\061\uff1a\062\uff1a\063\uff1a\064\uff1a\074" +
    "\uff1a\075\uff1a\076\uff1a\105\uff1a\107\uff1a\110\uff1a\125\uff1a" +
    "\136\uff1a\137\uff1a\001\002\000\010\005\uff98\131\u0126\132" +
    "\u0127\001\002\000\004\005\uff9b\001\002\000\004\124\u0264" +
    "\001\002\000\044\006\u0138\056\ufee7\057\ufee7\065\ufee7\066" +
    "\ufee7\067\ufee7\070\ufee7\071\ufee7\072\ufee7\073\ufee7\111\ufee7" +
    "\112\ufee7\124\ufee7\133\ufee7\137\ufee7\140\ufee7\141\ufee7\001" +
    "\002\000\004\125\uff31\001\002\000\004\125\u0267\001\002" +
    "\000\004\077\u0268\001\002\000\004\101\u013d\001\002\000" +
    "\040\011\uff30\056\uff30\060\uff30\061\uff30\062\uff30\063\uff30" +
    "\064\uff30\074\uff30\075\uff30\076\uff30\105\uff30\107\uff30\110" +
    "\uff30\136\uff30\137\uff30\001\002\000\040\011\uff28\056\uff3c" +
    "\060\uff3e\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075" +
    "\u012d\076\uff3a\105\uff36\107\uff2e\110\uff32\136\uff28\137\uff3c" +
    "\001\002\000\006\011\uff2f\136\uff2f\001\002\000\040\011" +
    "\uff28\056\uff3c\060\uff3e\061\uff3e\062\uff3e\063\uff3e\064\uff3e" +
    "\074\uff2c\075\u012d\076\uff3a\105\uff36\107\uff2e\110\uff32\136" +
    "\uff28\137\uff3c\001\002\000\006\011\uff3d\136\uff3d\001\002" +
    "\000\004\125\u026f\001\002\000\004\126\u0270\001\002\000" +
    "\006\011\uff29\136\uff29\001\002\000\040\011\uff28\056\uff3c" +
    "\060\uff3e\061\uff3e\062\uff3e\063\uff3e\064\uff3e\074\uff2c\075" +
    "\u012d\076\uff3a\105\uff36\107\uff2e\110\uff32\136\uff28\137\uff3c" +
    "\001\002\000\006\011\uff3b\136\uff3b\001\002\000\004\124" +
    "\u0274\001\002\000\004\125\u0275\001\002\000\004\010\u0276" +
    "\001\002\000\036\011\uff28\056\uff3c\060\uff3e\061\uff3e\062" +
    "\uff3e\063\uff3e\064\uff3e\074\uff2c\075\u012d\076\uff3a\105\uff36" +
    "\107\uff2e\110\uff32\137\uff3c\001\002\000\004\011\u0278\001" +
    "\002\000\010\005\uff98\131\u0126\132\u0127\001\002\000\004" +
    "\005\uff99\001\002\000\004\007\u027b\001\002\000\004\033" +
    "\u027c\001\002\000\004\004\u027d\001\002\000\006\003\326" +
    "\005\327\001\002\000\006\003\uff9f\005\uff9f\001\002\000" +
    "\004\012\053\001\002\000\004\011\uff43\001\002\000\004" +
    "\011\u0282\001\002\000\006\004\uff40\010\u0120\001\002\000" +
    "\004\004\uff42\001\002\000\006\004\uff6d\010\u0286\001\002" +
    "\000\004\004\u028e\001\002\000\014\037\106\040\112\041" +
    "\113\042\u0289\043\107\001\002\000\006\004\uff6d\010\u0286" +
    "\001\002\000\004\004\uff6e\001\002\000\004\012\053\001" +
    "\002\000\004\011\uff70\001\002\000\004\011\u028c\001\002" +
    "\000\006\004\uff6d\010\u0286\001\002\000\004\004\uff6f\001" +
    "\002\000\004\005\u028f\001\002\000\004\007\u0290\001\002" +
    "\000\004\021\u0291\001\002\000\004\004\u0292\001\002\000" +
    "\006\003\326\005\327\001\002\000\006\003\uffb7\005\uffb7" +
    "\001\002\000\004\004\u0295\001\002\000\006\003\326\005" +
    "\327\001\002\000\006\003\uffaa\005\uffaa\001\002\000\006" +
    "\004\uff40\010\u0120\001\002\000\004\004\u0299\001\002\000" +
    "\010\005\uff87\055\141\056\143\001\002\000\004\005\uffa2" +
    "\001\002\000\004\005\u029c\001\002\000\004\007\u029d\001" +
    "\002\000\004\032\u029e\001\002\000\004\004\u029f\001\002" +
    "\000\006\003\326\005\327\001\002\000\006\003\uffa1\005" +
    "\uffa1\001\002\000\006\004\uff48\010\u02a2\001\002\000\020" +
    "\035\u02af\036\u02ae\037\106\040\112\041\113\043\107\054" +
    "\u02b0\001\002\000\004\004\u02a6\001\002\000\006\004\uff48" +
    "\010\u02a2\001\002\000\004\004\uff49\001\002\000\010\005" +
    "\uff87\055\141\056\143\001\002\000\004\005\uffa8\001\002" +
    "\000\004\005\u02a9\001\002\000\004\007\u02aa\001\002\000" +
    "\004\030\u02ab\001\002\000\004\004\u02ac\001\002\000\006" +
    "\003\326\005\327\001\002\000\006\003\uffa7\005\uffa7\001" +
    "\002\000\004\012\053\001\002\000\004\012\053\001\002" +
    "\000\004\012\053\001\002\000\004\011\uff4f\001\002\000" +
    "\004\011\u02b3\001\002\000\006\004\uff48\010\u02a2\001\002" +
    "\000\004\004\uff4e\001\002\000\004\011\uff4b\001\002\000" +
    "\004\011\u02b7\001\002\000\006\004\uff48\010\u02a2\001\002" +
    "\000\004\004\uff4a\001\002\000\004\011\uff4d\001\002\000" +
    "\004\011\u02bb\001\002\000\006\004\uff48\010\u02a2\001\002" +
    "\000\004\004\uff4c\001\002\000\004\004\uff5c\001\002\000" +
    "\004\012\053\001\002\000\004\012\053\001\002\000\004" +
    "\012\053\001\002\000\004\011\uff5e\001\002\000\004\011" +
    "\u02c3\001\002\000\006\004\uff5b\010\322\001\002\000\004" +
    "\004\uff5d\001\002\000\004\011\uff62\001\002\000\004\011" +
    "\u02c7\001\002\000\006\004\uff5b\010\322\001\002\000\004" +
    "\004\uff61\001\002\000\004\011\uff60\001\002\000\004\011" +
    "\u02cb\001\002\000\006\004\uff5b\010\322\001\002\000\004" +
    "\004\uff5f\001\002\000\006\004\uff40\010\u0120\001\002\000" +
    "\004\004\u02cf\001\002\000\010\005\uff98\131\u0126\132\u0127" +
    "\001\002\000\004\005\u02d1\001\002\000\004\007\u02d2\001" +
    "\002\000\004\033\u02d3\001\002\000\004\004\u02d4\001\002" +
    "\000\006\003\u02d5\005\u02d7\001\002\000\010\002\uffbc\003" +
    "\uffbc\005\uffbc\001\002\000\006\002\uffdd\005\uffdd\001\002" +
    "\000\032\007\u02df\020\u02e0\021\u02da\022\u02e2\023\u02de\025" +
    "\u02dd\026\u02e3\027\u02db\030\u02d8\031\u02e1\032\u02d9\033\u02dc" +
    "\001\002\000\006\004\uffc8\010\uffc8\001\002\000\006\004" +
    "\uffc2\010\uffc2\001\002\000\006\004\uffd7\010\uffd7\001\002" +
    "\000\004\004\uffca\001\002\000\006\004\uffbf\010\uffbf\001" +
    "\002\000\006\004\uffcf\010\uffcf\001\002\000\006\004\uffd2" +
    "\010\uffd2\001\002\000\004\017\u030a\001\002\000\006\004" +
    "\uffda\010\uffda\001\002\000\006\004\uffc5\010\uffc5\001\002" +
    "\000\006\004\uffd5\010\uffd5\001\002\000\006\004\uffcc\010" +
    "\uffcc\001\002\000\006\004\uff50\010\036\001\002\000\004" +
    "\004\u02e6\001\002\000\004\005\u02e7\001\002\000\004\007" +
    "\u02e8\001\002\000\004\026\u02e9\001\002\000\004\004\u02ea" +
    "\001\002\000\006\003\u02d5\005\u02d7\001\002\000\010\002" +
    "\uffcb\003\uffcb\005\uffcb\001\002\000\006\004\uff67\010\103" +
    "\001\002\000\004\004\u02ee\001\002\000\010\005\uff87\055" +
    "\141\056\143\001\002\000\004\005\uffd4\001\002\000\004" +
    "\005\u02f1\001\002\000\004\007\u02f2\001\002\000\004\022" +
    "\u02f3\001\002\000\004\004\u02f4\001\002\000\006\003\u02d5" +
    "\005\u02d7\001\002\000\010\002\uffd3\003\uffd3\005\uffd3\001" +
    "\002\000\006\004\uff44\010\153\001\002\000\004\004\u02f8" +
    "\001\002\000\010\005\uff87\055\141\056\143\001\002\000" +
    "\004\005\uffc4\001\002\000\004\005\u02fb\001\002\000\004" +
    "\007\u02fc\001\002\000\004\031\u02fd\001\002\000\004\004" +
    "\u02fe\001\002\000\006\003\u02d5\005\u02d7\001\002\000\010" +
    "\002\uffc3\003\uffc3\005\uffc3\001\002\000\006\004\uff71\010" +
    "\176\001\002\000\004\004\u0302\001\002\000\010\005\uff87" +
    "\055\141\056\143\001\002\000\004\005\uffd9\001\002\000" +
    "\004\005\u0305\001\002\000\004\007\u0306\001\002\000\004" +
    "\020\u0307\001\002\000\004\004\u0308\001\002\000\006\003" +
    "\u02d5\005\u02d7\001\002\000\010\002\uffd8\003\uffd8\005\uffd8" +
    "\001\002\000\004\004\u030b\001\002\000\010\002\uffbd\003" +
    "\uffbd\005\uffbd\001\002\000\006\004\uff63\010\221\001\002" +
    "\000\004\004\u030e\001\002\000\006\003\225\005\227\001" +
    "\002\000\006\003\uffd1\005\uffd1\001\002\000\006\003\u02d5" +
    "\005\u02d7\001\002\000\010\002\uffd0\003\uffd0\005\uffd0\001" +
    "\002\000\006\004\uff5b\010\322\001\002\000\004\004\u0314" +
    "\001\002\000\006\003\014\005\015\001\002\000\004\005" +
    "\uffce\001\002\000\004\005\u0317\001\002\000\004\007\u0318" +
    "\001\002\000\004\025\u0319\001\002\000\004\004\u031a\001" +
    "\002\000\006\003\u02d5\005\u02d7\001\002\000\010\002\uffcd" +
    "\003\uffcd\005\uffcd\001\002\000\006\004\uff40\010\u0120\001" +
    "\002\000\004\004\u031e\001\002\000\010\005\uff98\131\u0126" +
    "\132\u0127\001\002\000\004\005\u0320\001\002\000\004\007" +
    "\u0321\001\002\000\004\033\u0322\001\002\000\004\004\u0323" +
    "\001\002\000\006\003\u02d5\005\u02d7\001\002\000\010\002" +
    "\uffbe\003\uffbe\005\uffbe\001\002\000\004\004\u0326\001\002" +
    "\000\006\003\u02d5\005\u02d7\001\002\000\010\002\uffc9\003" +
    "\uffc9\005\uffc9\001\002\000\006\004\uff6d\010\u0286\001\002" +
    "\000\004\004\u032a\001\002\000\004\005\u032b\001\002\000" +
    "\004\007\u032c\001\002\000\004\021\u032d\001\002\000\004" +
    "\004\u032e\001\002\000\006\003\u02d5\005\u02d7\001\002\000" +
    "\010\002\uffd6\003\uffd6\005\uffd6\001\002\000\006\004\uff40" +
    "\010\u0120\001\002\000\004\004\u0332\001\002\000\010\005" +
    "\uff87\055\141\056\143\001\002\000\004\005\uffc1\001\002" +
    "\000\004\005\u0335\001\002\000\004\007\u0336\001\002\000" +
    "\004\032\u0337\001\002\000\004\004\u0338\001\002\000\006" +
    "\003\u02d5\005\u02d7\001\002\000\010\002\uffc0\003\uffc0\005" +
    "\uffc0\001\002\000\006\004\uff48\010\u02a2\001\002\000\004" +
    "\004\u033c\001\002\000\010\005\uff87\055\141\056\143\001" +
    "\002\000\004\005\uffc7\001\002\000\004\005\u033f\001\002" +
    "\000\004\007\u0340\001\002\000\004\030\u0341\001\002\000" +
    "\004\004\u0342\001\002\000\006\003\u02d5\005\u02d7\001\002" +
    "\000\010\002\uffc6\003\uffc6\005\uffc6\001\002\000\004\004" +
    "\u0345\001\002\000\006\003\014\005\015\001\002\000\006" +
    "\002\uffe8\005\uffe8\001\002\000\006\004\uff6d\010\u0286\001" +
    "\002\000\004\004\u0349\001\002\000\004\005\u034a\001\002" +
    "\000\004\007\u034b\001\002\000\004\021\u034c\001\002\000" +
    "\004\004\u034d\001\002\000\006\003\014\005\015\001\002" +
    "\000\006\002\ufff5\005\ufff5\001\002\000\006\004\uff75\010" +
    "\u0351\001\002\000\004\004\u0356\001\002\000\004\035\u0352" +
    "\001\002\000\004\012\053\001\002\000\004\011\uff77\001" +
    "\002\000\004\011\u0355\001\002\000\004\004\uff76\001\002" +
    "\000\006\003\u02d5\005\u02d7\001\002\000\006\003\ufffb\005" +
    "\ufffb\001\002\000\006\003\014\005\015\001\002\000\006" +
    "\002\ufffa\005\ufffa\001\002\000\006\004\uff40\010\u0120\001" +
    "\002\000\004\004\u035c\001\002\000\010\005\uff87\055\141" +
    "\056\143\001\002\000\004\005\uffe0\001\002\000\004\005" +
    "\u035f\001\002\000\004\007\u0360\001\002\000\004\032\u0361" +
    "\001\002\000\004\004\u0362\001\002\000\006\003\014\005" +
    "\015\001\002\000\006\002\uffdf\005\uffdf\001\002\000\006" +
    "\004\uff48\010\u02a2\001\002\000\004\004\u0366\001\002\000" +
    "\010\005\uff87\055\141\056\143\001\002\000\004\005\uffe6" +
    "\001\002\000\004\005\u0369\001\002\000\004\007\u036a\001" +
    "\002\000\004\030\u036b\001\002\000\004\004\u036c\001\002" +
    "\000\006\003\014\005\015\001\002\000\006\002\uffe5\005" +
    "\uffe5\001\002\000\004\012\053\001\002\000\004\012\053" +
    "\001\002\000\004\011\uff7c\001\002\000\004\011\u0372\001" +
    "\002\000\006\004\uff7a\010\011\001\002\000\004\004\uff7b" +
    "\001\002\000\004\011\uff7e\001\002\000\004\011\u0376\001" +
    "\002\000\006\004\uff7a\010\011\001\002\000\004\004\uff7d" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0375\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\057\007\001\001" +
    "\000\004\010\011\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\076\u0363\001\001\000" +
    "\004\102\u0359\001\001\000\004\061\u034e\001\001\000\004" +
    "\065\u0346\001\001\000\004\075\u0343\001\001\000\004\104" +
    "\u02cc\001\001\000\004\072\320\001\001\000\002\001\001" +
    "\000\004\070\217\001\001\000\002\001\001\000\004\063" +
    "\173\001\001\000\004\100\151\001\001\000\004\066\100" +
    "\001\001\000\004\074\034\001\001\000\004\020\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\003\044\001\001\000\002\001\001\000\004\006\074" +
    "\001\001\000\004\006\070\001\001\000\004\006\064\001" +
    "\001\000\004\006\060\001\001\000\004\006\053\001\001" +
    "\000\002\001\001\000\004\204\054\001\001\000\002\001" +
    "\001\000\004\020\056\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\202\061\001\001\000\002\001\001\000" +
    "\004\020\063\001\001\000\002\001\001\000\004\203\065" +
    "\001\001\000\002\001\001\000\004\020\067\001\001\000" +
    "\002\001\001\000\004\205\071\001\001\000\002\001\001" +
    "\000\004\020\073\001\001\000\002\001\001\000\004\206" +
    "\075\001\001\000\002\001\001\000\004\020\077\001\001" +
    "\000\002\001\001\000\006\015\101\024\103\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\015\104\024\103" +
    "\001\001\000\002\001\001\000\004\006\134\001\001\000" +
    "\004\006\131\001\001\000\004\006\125\001\001\000\004" +
    "\006\121\001\001\000\004\006\116\001\001\000\004\006" +
    "\113\001\001\000\004\164\114\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\163\117\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\174\122\001\001\000\002" +
    "\001\001\000\006\015\124\024\103\001\001\000\002\001" +
    "\001\000\004\175\126\001\001\000\002\001\001\000\006" +
    "\015\130\024\103\001\001\000\002\001\001\000\004\165" +
    "\132\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\162\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\141\001\001\000\002\001\001\000\004\067\143" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\150" +
    "\001\001\000\002\001\001\000\006\022\153\024\154\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\022\155" +
    "\024\154\001\001\000\002\001\001\000\004\005\157\001" +
    "\001\000\004\101\160\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\165\001\001\000\002\001\001\000\004\006\167\001\001" +
    "\000\004\212\170\001\001\000\002\001\001\000\006\022" +
    "\172\024\154\001\001\000\002\001\001\000\006\013\174" +
    "\024\176\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\013\177\024\176\001\001\000\002\001\001\000\004" +
    "\006\201\001\001\000\004\172\202\001\001\000\002\001" +
    "\001\000\006\013\204\024\176\001\001\000\002\001\001" +
    "\000\004\005\206\001\001\000\004\064\207\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\214\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\016\222\024\221" +
    "\001\001\000\002\001\001\000\006\016\246\024\221\001" +
    "\001\000\002\001\001\000\004\007\225\001\001\000\002" +
    "\001\001\000\004\071\244\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\160\231\001\001\000\002\001\001" +
    "\000\004\005\233\001\001\000\004\161\234\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\241\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\245\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\250\001" +
    "\001\000\004\176\251\001\001\000\002\001\001\000\006" +
    "\016\253\024\221\001\001\000\002\001\001\000\004\060" +
    "\255\001\001\000\004\004\260\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\155\301\001" +
    "\001\000\002\001\001\000\004\153\264\001\001\000\002" +
    "\001\001\000\004\005\266\001\001\000\004\154\267\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\274\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\157\277\001\001\000\004" +
    "\003\300\001\001\000\002\001\001\000\004\011\302\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\305" +
    "\001\001\000\004\170\306\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\311\001\001\000\004\156\312" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\317\001\001\000\002" +
    "\001\001\000\006\017\323\024\322\001\001\000\002\001" +
    "\001\000\006\017\u02bc\024\322\001\001\000\002\001\001" +
    "\000\004\056\327\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\073\330\001\001\000\004\003\331\001\001" +
    "\000\002\001\001\000\004\142\u02a0\001\001\000\004\146" +
    "\u0296\001\001\000\004\141\u0293\001\001\000\004\131\u0283" +
    "\001\001\000\004\150\u011e\001\001\000\004\136\u0114\001" +
    "\001\000\004\134\u010e\001\001\000\004\127\u0104\001\001" +
    "\000\002\001\001\000\004\144\370\001\001\000\004\132" +
    "\356\001\001\000\004\140\346\001\001\000\004\020\347" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\056\355" +
    "\001\001\000\002\001\001\000\006\015\357\024\103\001" +
    "\001\000\002\001\001\000\004\005\361\001\001\000\004" +
    "\133\362\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\056\367\001\001" +
    "\000\002\001\001\000\006\022\371\024\154\001\001\000" +
    "\002\001\001\000\004\005\373\001\001\000\004\145\374" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\u0101\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\013" +
    "\u0105\024\176\001\001\000\002\001\001\000\004\005\u0107" +
    "\001\001\000\004\130\u0108\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\056\u010d\001\001\000\002\001\001\000\006\016\u010f\024" +
    "\221\001\001\000\002\001\001\000\004\007\u0111\001\001" +
    "\000\004\135\u0112\001\001\000\004\056\u0113\001\001\000" +
    "\002\001\001\000\006\017\u0115\024\322\001\001\000\002" +
    "\001\001\000\004\056\u0117\001\001\000\004\137\u0118\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u011d\001\001\000\002\001" +
    "\001\000\006\023\u0120\024\u0121\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\023\u0122\024\u0121\001\001\000" +
    "\002\001\001\000\004\055\u0124\001\001\000\002\001\001" +
    "\000\004\152\u0272\001\001\000\004\151\u0127\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\026\u012f\214\u012d\215\u012b\216\u0133\221\u0130\224\u012e\227" +
    "\u0132\230\u0131\001\001\000\006\041\u01d4\044\u0270\001\001" +
    "\000\002\001\001\000\006\040\u024f\043\u026b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\036\u0138\037\u0136\001\001\000\006\041\u015c" +
    "\046\u0151\001\001\000\002\001\001\000\004\217\u0139\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u013d" +
    "\001\001\000\002\001\001\000\004\030\u013e\001\001\000" +
    "\004\220\u0149\001\001\000\004\310\u0147\001\001\000\004" +
    "\311\u0141\001\001\000\002\001\001\000\006\036\u0143\037" +
    "\u0136\001\001\000\002\001\001\000\004\027\u0145\001\001" +
    "\000\004\030\u0146\001\001\000\002\001\001\000\004\027" +
    "\u0148\001\001\000\002\001\001\000\022\026\u014a\214\u012d" +
    "\215\u012b\216\u0133\221\u0130\224\u012e\227\u0132\230\u0131\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\026\u014d" +
    "\214\u012d\215\u012b\216\u0133\221\u0130\224\u012e\227\u0132\230" +
    "\u0131\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\053\u01ae\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\300\u019f\001\001\000\004\263\u019d\001\001\000\002\001" +
    "\001\000\004\267\u0196\001\001\000\004\266\u0194\001\001" +
    "\000\002\001\001\000\004\264\u018e\001\001\000\004\265" +
    "\u018c\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\262\u0177\001\001\000" +
    "\002\001\001\000\006\041\u0165\052\u0164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\275\u0169\001\001\000\004\051\u016c\001\001" +
    "\000\004\303\u0175\001\001\000\004\304\u0173\001\001\000" +
    "\002\001\001\000\004\305\u0171\001\001\000\004\302\u016f" +
    "\001\001\000\006\041\u015c\046\u0170\001\001\000\002\001" +
    "\001\000\006\041\u015c\046\u0172\001\001\000\002\001\001" +
    "\000\006\041\u015c\046\u0174\001\001\000\002\001\001\000" +
    "\006\041\u015c\046\u0176\001\001\000\002\001\001\000\004" +
    "\051\u0178\001\001\000\002\001\001\000\006\041\u0165\052" +
    "\u017a\001\001\000\002\001\001\000\004\273\u017c\001\001" +
    "\000\004\051\u017d\001\001\000\002\001\001\000\006\041" +
    "\u0165\052\u017f\001\001\000\002\001\001\000\004\274\u0181" +
    "\001\001\000\004\051\u0182\001\001\000\002\001\001\000" +
    "\006\041\u0165\052\u0184\001\001\000\002\001\001\000\004" +
    "\271\u0186\001\001\000\004\051\u0187\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\276\u018a\001\001\000\004" +
    "\051\u018b\001\001\000\002\001\001\000\004\051\u018d\001" +
    "\001\000\002\001\001\000\004\051\u018f\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\277\u0192\001\001\000" +
    "\004\051\u0193\001\001\000\002\001\001\000\004\051\u0195" +
    "\001\001\000\002\001\001\000\004\051\u0197\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\270\u019b\001\001\000\004\051\u019c\001\001\000\002\001" +
    "\001\000\004\051\u019e\001\001\000\002\001\001\000\006" +
    "\041\u015c\046\u01a0\001\001\000\002\001\001\000\004\301" +
    "\u01a2\001\001\000\004\051\u01a3\001\001\000\002\001\001" +
    "\000\006\041\u0165\052\u01a5\001\001\000\002\001\001\000" +
    "\004\272\u01a7\001\001\000\004\051\u01a8\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\261\u01b0" +
    "\001\001\000\002\001\001\000\004\037\u01b1\001\001\000" +
    "\006\041\u015c\046\u01b2\001\001\000\004\054\u01b3\001\001" +
    "\000\002\001\001\000\004\307\u01b8\001\001\000\004\306" +
    "\u01b6\001\001\000\006\036\u01b7\037\u0136\001\001\000\002" +
    "\001\001\000\006\036\u01b9\037\u0136\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\034\u01bd\041\u01bc\001\001" +
    "\000\004\324\u01c6\001\001\000\002\001\001\000\004\325" +
    "\u01bf\001\001\000\004\035\u01c0\001\001\000\002\001\001" +
    "\000\006\034\u01c2\041\u01bc\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\026\u01c5\214\u012d\215\u012b\216\u0133" +
    "\221\u0130\224\u012e\227\u0132\230\u0131\001\001\000\002\001" +
    "\001\000\004\035\u01c7\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\041\u0165\052\u01ca\001\001\000\004\231" +
    "\u01cb\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\026\u01ce\214\u012d\215\u012b\216\u0133\221\u0130\224\u012e\227" +
    "\u0132\230\u0131\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\031\u01d2\312\u01d1\313\u01d3\001\001\000\006\040" +
    "\u024f\043\u0250\001\001\000\002\001\001\000\006\041\u01d4" +
    "\044\u01d5\001\001\000\004\234\u01d6\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\041\u01e1\045\u01de\001\001" +
    "\000\002\001\001\000\004\253\u0222\001\001\000\004\236" +
    "\u0220\001\001\000\002\001\001\000\004\242\u0219\001\001" +
    "\000\004\241\u0217\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\237\u0211\001\001\000\004\240\u020f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\235\u01fa\001\001\000\002\001\001" +
    "\000\006\041\u0165\052\u01e9\001\001\000\002\001\001\000" +
    "\004\250\u01eb\001\001\000\004\050\u01ef\001\001\000\002" +
    "\001\001\000\004\256\u01f8\001\001\000\004\257\u01f6\001" +
    "\001\000\002\001\001\000\004\260\u01f4\001\001\000\004" +
    "\255\u01f2\001\001\000\006\041\u01e1\045\u01f3\001\001\000" +
    "\002\001\001\000\006\041\u01e1\045\u01f5\001\001\000\002" +
    "\001\001\000\006\041\u01e1\045\u01f7\001\001\000\002\001" +
    "\001\000\006\041\u01e1\045\u01f9\001\001\000\002\001\001" +
    "\000\004\050\u01fb\001\001\000\002\001\001\000\006\041" +
    "\u0165\052\u01fd\001\001\000\002\001\001\000\004\246\u01ff" +
    "\001\001\000\004\050\u0200\001\001\000\002\001\001\000" +
    "\006\041\u0165\052\u0202\001\001\000\002\001\001\000\004" +
    "\247\u0204\001\001\000\004\051\u0205\001\001\000\002\001" +
    "\001\000\006\041\u0165\052\u0207\001\001\000\002\001\001" +
    "\000\004\244\u0209\001\001\000\004\050\u020a\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\251\u020d\001\001" +
    "\000\004\050\u020e\001\001\000\002\001\001\000\004\050" +
    "\u0210\001\001\000\002\001\001\000\004\050\u0212\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\252\u0215\001" +
    "\001\000\004\050\u0216\001\001\000\002\001\001\000\004" +
    "\050\u0218\001\001\000\002\001\001\000\004\050\u021a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\243\u021e\001\001\000\004\050\u021f\001\001\000" +
    "\002\001\001\000\004\050\u0221\001\001\000\002\001\001" +
    "\000\006\041\u01e1\045\u0223\001\001\000\002\001\001\000" +
    "\004\254\u0225\001\001\000\004\050\u0226\001\001\000\002" +
    "\001\001\000\006\041\u0165\052\u0228\001\001\000\002\001" +
    "\001\000\004\245\u022a\001\001\000\004\050\u022b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\222\u022f\001\001\000\006\032\u0232\041\u0231\001\001" +
    "\000\004\315\u024b\001\001\000\004\314\u0249\001\001\000" +
    "\002\001\001\000\004\316\u0234\001\001\000\006\032\u0235" +
    "\041\u0231\001\001\000\002\001\001\000\004\317\u0237\001" +
    "\001\000\004\033\u023c\001\001\000\004\321\u0243\001\001" +
    "\000\004\322\u0241\001\001\000\004\323\u023f\001\001\000" +
    "\004\320\u023d\001\001\000\002\001\001\000\006\032\u023e" +
    "\041\u0231\001\001\000\002\001\001\000\006\032\u0240\041" +
    "\u0231\001\001\000\002\001\001\000\006\032\u0242\041\u0231" +
    "\001\001\000\002\001\001\000\006\032\u0244\041\u0231\001" +
    "\001\000\002\001\001\000\004\027\u0246\001\001\000\004" +
    "\223\u0247\001\001\000\022\026\u0248\214\u012d\215\u012b\216" +
    "\u0133\221\u0130\224\u012e\227\u0132\230\u0131\001\001\000\002" +
    "\001\001\000\004\033\u024a\001\001\000\002\001\001\000" +
    "\004\033\u024c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\042\u0255\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\u0256\001\001\000\004\232" +
    "\u0257\001\001\000\004\047\u025b\001\001\000\004\041\u025d" +
    "\001\001\000\002\001\001\000\006\041\u01e1\045\u025c\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\233\u025e" +
    "\001\001\000\004\047\u025f\001\001\000\002\001\001\000" +
    "\004\055\u0261\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\036\u0264\037\u0136\001\001\000\004\225\u0265\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\027\u0268" +
    "\001\001\000\004\226\u0269\001\001\000\022\026\u026a\214" +
    "\u012d\215\u012b\216\u0133\221\u0130\224\u012e\227\u0132\230\u0131" +
    "\001\001\000\002\001\001\000\022\026\u026c\214\u012d\215" +
    "\u012b\216\u0133\221\u0130\224\u012e\227\u0132\230\u0131\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\026\u0271\214\u012d\215\u012b\216\u0133" +
    "\221\u0130\224\u012e\227\u0132\230\u0131\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\026\u0276\214\u012d\215\u012b\216\u0133\221\u0130\224" +
    "\u012e\227\u0132\230\u0131\001\001\000\002\001\001\000\004" +
    "\055\u0278\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\056\u027d\001\001" +
    "\000\002\001\001\000\004\006\u027f\001\001\000\004\213" +
    "\u0280\001\001\000\002\001\001\000\006\023\u0282\024\u0121" +
    "\001\001\000\002\001\001\000\006\014\u0284\024\u0286\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\014\u0287" +
    "\024\u0286\001\001\000\002\001\001\000\004\006\u0289\001" +
    "\001\000\004\173\u028a\001\001\000\002\001\001\000\006" +
    "\014\u028c\024\u0286\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\056\u0292\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\056\u0295\001\001\000\002\001\001\000\006" +
    "\023\u0297\024\u0121\001\001\000\002\001\001\000\004\005" +
    "\u0299\001\001\000\004\147\u029a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\056\u029f\001\001\000\002\001\001\000\006\021\u02a2" +
    "\024\u02a3\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\021\u02a4\024\u02a3\001\001\000\002\001\001\000\004" +
    "\005\u02a6\001\001\000\004\143\u02a7\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\056\u02ac\001\001\000\002\001\001\000\004\006" +
    "\u02b8\001\001\000\004\006\u02b4\001\001\000\004\006\u02b0" +
    "\001\001\000\004\207\u02b1\001\001\000\002\001\001\000" +
    "\006\021\u02b3\024\u02a3\001\001\000\002\001\001\000\004" +
    "\211\u02b5\001\001\000\002\001\001\000\006\021\u02b7\024" +
    "\u02a3\001\001\000\002\001\001\000\004\210\u02b9\001\001" +
    "\000\002\001\001\000\006\021\u02bb\024\u02a3\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\u02c8\001\001" +
    "\000\004\006\u02c4\001\001\000\004\006\u02c0\001\001\000" +
    "\004\201\u02c1\001\001\000\002\001\001\000\006\017\u02c3" +
    "\024\322\001\001\000\002\001\001\000\004\177\u02c5\001" +
    "\001\000\002\001\001\000\006\017\u02c7\024\322\001\001" +
    "\000\002\001\001\000\004\200\u02c9\001\001\000\002\001" +
    "\001\000\006\017\u02cb\024\322\001\001\000\002\001\001" +
    "\000\006\023\u02cd\024\u0121\001\001\000\002\001\001\000" +
    "\004\055\u02cf\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\u02d5\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\120\u0339\001\001\000\004\124\u032f\001\001\000" +
    "\004\107\u0327\001\001\000\004\117\u0324\001\001\000\004" +
    "\126\u031b\001\001\000\004\114\u0311\001\001\000\004\112" +
    "\u030b\001\001\000\002\001\001\000\004\105\u02ff\001\001" +
    "\000\004\122\u02f5\001\001\000\004\110\u02eb\001\001\000" +
    "\004\116\u02e3\001\001\000\004\020\u02e4\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\u02ea\001\001\000\002" +
    "\001\001\000\006\015\u02ec\024\103\001\001\000\002\001" +
    "\001\000\004\005\u02ee\001\001\000\004\111\u02ef\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u02f4\001\001\000\002\001\001" +
    "\000\006\022\u02f6\024\154\001\001\000\002\001\001\000" +
    "\004\005\u02f8\001\001\000\004\123\u02f9\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\u02fe\001\001\000\002\001\001\000\006" +
    "\013\u0300\024\176\001\001\000\002\001\001\000\004\005" +
    "\u0302\001\001\000\004\106\u0303\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\u0308\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\016\u030c\024\221\001\001\000" +
    "\002\001\001\000\004\007\u030e\001\001\000\004\113\u030f" +
    "\001\001\000\004\025\u0310\001\001\000\002\001\001\000" +
    "\006\017\u0312\024\322\001\001\000\002\001\001\000\004" +
    "\003\u0314\001\001\000\004\115\u0315\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u031a\001\001\000\002\001\001\000\006\023" +
    "\u031c\024\u0121\001\001\000\002\001\001\000\004\055\u031e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\u0323\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\u0326\001\001\000" +
    "\002\001\001\000\006\014\u0328\024\u0286\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\u032e\001\001\000\002" +
    "\001\001\000\006\023\u0330\024\u0121\001\001\000\002\001" +
    "\001\000\004\005\u0332\001\001\000\004\125\u0333\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u0338\001\001\000\002\001\001" +
    "\000\006\021\u033a\024\u02a3\001\001\000\002\001\001\000" +
    "\004\005\u033c\001\001\000\004\121\u033d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\u0342\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u0345\001\001\000\002\001\001\000" +
    "\006\014\u0347\024\u0286\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u034d\001\001\000\002\001\001\000\004" +
    "\012\u034f\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\006\u0352\001\001\000\004\171\u0353\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\025\u0356\001\001\000" +
    "\004\062\u0357\001\001\000\004\003\u0358\001\001\000\002" +
    "\001\001\000\006\023\u035a\024\u0121\001\001\000\002\001" +
    "\001\000\004\005\u035c\001\001\000\004\103\u035d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u0362\001\001\000\002\001\001" +
    "\000\006\021\u0364\024\u02a3\001\001\000\002\001\001\000" +
    "\004\005\u0366\001\001\000\004\077\u0367\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u036c\001\001\000\002\001\001\000\004" +
    "\006\u0373\001\001\000\004\006\u036f\001\001\000\004\167" +
    "\u0370\001\001\000\002\001\001\000\004\010\u0372\001\001" +
    "\000\002\001\001\000\004\166\u0374\001\001\000\002\001" +
    "\001\000\004\010\u0376\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserGCIC$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserGCIC$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserGCIC$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private List<ErrorCom> erroresCom;
    private List<Etiqueta> etiquetas;
    private List<ParametroEtiqueta> parametrosEtActl;
    //private List<Etiqueta> etiquetasBody;
    //private List<ParametroEtiqueta> parametrosBody;
    //private Etiqueta bodyAct;
    private Etiqueta etiquetaAct;
    private Etiqueta etiquetaPadre;
    private Etiqueta etiquetaScript;
    private DeclAsign delcAsignAct;
    private Instruccion instruccionAct;
    private Instruccion insIf;
    private Instruccion insPadre;
    private List<String> valoresCondicion;
    private AlertInfo alertInfoAct;
    private InsInsert insInsertAct;  
    private List<String> expresionNum;  
    

	public ParserGCIC(LexerGCIC lex) {
		super(lex);
        this.erroresCom = lex.getErroresCom();
        this.etiquetas = new ArrayList<>();        
        this.etiquetaAct = new Etiqueta();
        this.etiquetaPadre = null;
        this.insPadre = null;
        this.valoresCondicion = new ArrayList<>();
	}

    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        erroresCom.add(new ErrorCom("Sintactico","No se esperaba Componente",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    }

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        erroresCom.add(new ErrorCom("Sintactico","Error sintactico Irrecuperable",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    } 

    private void insertarEtiqueta(String tipo){
        this.etiquetaAct = new Etiqueta();
        this.etiquetaAct.setTipo(tipo);        
        if(this.etiquetaPadre == null){
            this.etiquetas.add(this.etiquetaAct);
        }else{
            //List<Etiqueta> etiquetasTemp = this.etiquetaPadre.getEtiquetas();
            this.etiquetaAct.setEtiquetaPadre(this.etiquetaPadre);
            etiquetaPadre.insertarEtiqueta(this.etiquetaAct);            
        }   
    }

    private void insertarScript(){
        this.etiquetaScript = this.etiquetaAct;           
    }

    private void insertarPadre(){
        this.etiquetaPadre = this.etiquetaAct;
    }

    private void cerrarPadre(){
        Etiqueta etiquetaTemp = this.etiquetaPadre.getEtiquetaPadre();
        this.etiquetaPadre = etiquetaTemp;
    }

    private void insertarParametro(String tipo,String val){
        ParametroEtiqueta parIns = new ParametroEtiqueta(tipo,val);
        this.etiquetaAct.insertarParametro(parIns);
    }   

    private void insertarContenido(String contenido){
        this.etiquetaAct.setContenido(contenido);
    }

    private void insertarDeclaracion(String desc){
        this.delcAsignAct = new DeclAsign(desc);
        InsIf instruccion1 = null;
        Ciclo instruccion2 = null;
        if(this.insPadre == null){
            this.etiquetaScript.insertarInstruccion(this.delcAsignAct);
        }else{
            String tipo = insPadre.getTipo();
            switch(tipo)
            {
                case "INSIF":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "INSELSE":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "INSELSEIF":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "REPEAT":
                    instruccion2 = (Ciclo)this.insPadre;
                    instruccion2.insertarInstruccion(this.delcAsignAct);
                    break;
                case "WHILE":
                    instruccion2 = (Ciclo)this.insPadre;
                    instruccion2.insertarInstruccion(this.delcAsignAct);
                    break;
                default:
                    System.out.println("no match");
            }
        }         
    }

    private void insertarAsign(){
        delcAsignAct = new DeclAsign("asignacion");
        this.etiquetaScript.insertarInstruccion(this.delcAsignAct);
    }

    private void insertarEnDeclaracion(String tipo, String modo, String variable){
        this.delcAsignAct.setTipoVar(tipo);
        this.delcAsignAct.setModo(modo);
        this.delcAsignAct.insertarVariable(variable);
    }

    private void insertarVal(String val){
        this.delcAsignAct.insertarValor(val);
    }

    private void insertarInsIf() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new InsIf("INSIF");
        this.insIf = this.instruccionAct;
        if (this.insPadre != null) {
            InsIf temp = (InsIf) this.instruccionAct;
            temp.setInsPadre(insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }

    private void insertarInstruccionEnPadre(Instruccion instr) {
        String tipo = this.insPadre.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf) this.insPadre;
            temp.insertarInstruccion(instruccionAct);
        } else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo) this.insPadre;
            temp.insertarInstruccion(instruccionAct);
        }
    }

    private void insertarElse() {
        this.instruccionAct = new InsIf("INSELSE");
        InsIf temp = (InsIf) this.insIf;
        temp.insertarElse(this.instruccionAct);
    }

    private void insertarElseIF() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new InsIf("INSELSEIF");
        InsIf temp = (InsIf) this.insIf;
        temp.insertarElse(this.instruccionAct);
    }

    private void insertarRepeat() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new Ciclo("REPEAT");
        if (this.insPadre != null) {
            Ciclo temp = (Ciclo) this.instruccionAct;
            temp.setInsPadre(this.insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }

    private void insertarWhile() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new Ciclo("WHILE");
        if (this.insPadre != null) {
            Ciclo temp = (Ciclo) this.instruccionAct;
            temp.setInsPadre(this.insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }
    
    private void cerrarPadreIns(){
        String tipo = this.insPadre.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf)this.insPadre;
            this.insPadre = temp.getInsPadre();
            this.instruccionAct = this.insPadre;
        }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo)this.insPadre;
            this.insPadre = temp.getInsPadre();
            this.instruccionAct = this.insPadre;
        }        
    }

    private void insertarEnCondi(String condicion){        
        this.valoresCondicion.add(condicion);
    }

    private void insertarCondicion(){
        String tipo = this.instruccionAct.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf)this.instruccionAct;
            temp.setCondicionValores(this.valoresCondicion);
        }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo)this.instruccionAct;
            temp.setCondicionValores(this.valoresCondicion);
        } 
    }

    private void insertarAlertInf(){
        this.alertInfoAct = new AlertInfo("ALERTINFO");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(this.alertInfoAct);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(this.alertInfoAct);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.alertInfoAct);
        }
    }

    private void insertarInsInsert(){
        this.insInsertAct = new InsInsert("INSERT");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(this.insInsertAct);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(this.insInsertAct);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.insInsertAct);
        }
    }

    private void insertarDeclaracionCiclo(String tipo){
        this.delcAsignAct = new DeclAsign(tipo);
        Ciclo temp = (Ciclo)this.instruccionAct;
        temp.setAsigDecl(this.delcAsignAct);
    }

    private void insertarToken(String token){
        this.insInsertAct.insertarToken(token);
    }

    private void crearExpresion(){
        this.expresionNum = new ArrayList<>();
        Ciclo temp = (Ciclo)this.instruccionAct;
        temp.setExpresionNum(this.expresionNum);
    }

    private void crearProceso(String nombre){
        Proceso proc = new Proceso();
        proc.setTipo(nombre);
        this.etiquetaScript.insertarProceso(proc);
    }

    private void insertarExp(String val){
        this.expresionNum.add(val);
    }

    public List<Etiqueta> getEtiquetasTotal(){
        return this.etiquetas;        
    } 

    protected int error_sync_size() {
		return 2;
	}

    public List<ErrorCom> getErroresCom(){
        return erroresCom;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserGCIC$actions {
  private final ParserGCIC parser;

  /** Constructor */
  CUP$ParserGCIC$actions(ParserGCIC parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action_part00000000(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserGCIC$result;

      /* select the action based on the action number */
      switch (CUP$ParserGCIC$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		RESULT = start_val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserGCIC$parser.done_parsing();
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("GCIC");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$0",45, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= MEN GCIC NT$0 par0 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NT$1 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("HEAD");insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$1",46, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // sig ::= MEN HEAD MAY NT$1 hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$2 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BODY");insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$2",47, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$3 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$3",48, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sig ::= MEN BODY NT$2 par2 MAY bod NT$3 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // NT$4 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$4",49, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$5 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$5",50, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sig ::= MEN SPAM NT$4 par3 MAY pals NT$5 MEN BARRA SPAM MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NT$6 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$6",51, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // sig ::= MEN INPUT NT$6 par4 MAY MEN BARRA INPUT MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$7 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$7",52, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$8",53, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sig ::= MEN TEXTAREA NT$7 par5 MAY pals NT$8 MEN BARRA TEXTAREA MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$9 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$9",54, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$10 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$10",55, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sig ::= MEN SELECT NT$9 par6 MAY opt NT$10 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$11 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$11",56, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NT$12 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$12",57, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sig ::= MEN DIV NT$11 par7 MAY div NT$12 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // NT$13 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$13",58, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // sig ::= MEN IMG NT$13 par8 MAY MEN BARRA IMG MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$14 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$14",59, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // sig ::= MEN BR NT$14 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$15 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$15",60, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$16 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$16",61, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // sig ::= MEN BUTTON NT$15 par9 MAY pals NT$16 MEN BARRA BUTTON MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$17 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$17",62, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$18 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$18",63, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // sig ::= MEN H1 NT$17 par10 MAY pals NT$18 MEN BARRA H1 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$19 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$19",64, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$20 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$20",65, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // sig ::= MEN PAR NT$19 par11 MAY pals NT$20 MEN BARRA PAR MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NT$21 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$21",66, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // sig ::= MEN SCRIPTING NT$21 par11 MAY scrip MEN BARRA SCRIPTING MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$21
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // sig ::= MEN BARRA GCIC MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // sig ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$22 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$22",67, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$23 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$23",68, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // bod ::= MEN SPAM NT$22 par3 MAY pals NT$23 MEN BARRA SPAM MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // NT$24 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$24",69, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // bod ::= MEN INPUT NT$24 par4 MAY MEN BARRA INPUT MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$24
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$25 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$25",70, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$26 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$26",71, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // bod ::= MEN TEXTAREA NT$25 par5 MAY pals NT$26 MEN BARRA TEXTAREA MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$26
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$27 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$27",72, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // NT$28 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$28",73, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // bod ::= MEN SELECT NT$27 par6 MAY opt NT$28 bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$28
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NT$29 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$29",74, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$30 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$30",75, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // bod ::= MEN DIV NT$29 par7 MAY sig NT$30 MEN BARRA DIV MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$30
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$31 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$31",76, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // bod ::= MEN IMG NT$31 par8 MAY MEN BARRA IMG MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$31
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$32 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$32",77, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // bod ::= MEN BR NT$32 MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$32
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // NT$33 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$33",78, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // NT$34 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$34",79, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // bod ::= MEN BUTTON NT$33 par9 MAY pals NT$34 MEN BARRA BUTTON MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$34
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$35 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$35",80, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$36 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$36",81, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // bod ::= MEN H1 NT$35 par10 MAY pals NT$36 MEN BARRA H1 MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$36
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // NT$37 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$37",82, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$38 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$38",83, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // bod ::= MEN PAR NT$37 par11 MAY pals NT$38 MEN BARRA PAR MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$38
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$39 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$39",84, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // bod ::= MEN SCRIPTING NT$39 par11 MAY scrip MEN BARRA SCRIPTING MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$39
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // bod ::= MEN BARRA BODY MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // bod ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // NT$40 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$40",85, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // NT$41 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$41",86, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // div ::= MEN SPAM NT$40 par3 MAY pals NT$41 MEN BARRA SPAM MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$41
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // NT$42 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$42",87, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // div ::= MEN INPUT NT$42 par4 MAY MEN BARRA INPUT MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$42
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // NT$43 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$43",88, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // NT$44 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$44",89, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // div ::= MEN TEXTAREA NT$43 par5 MAY pals NT$44 MEN BARRA TEXTAREA MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$44
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // NT$45 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$45",90, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // NT$46 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$46",91, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // div ::= MEN SELECT NT$45 par6 MAY opt NT$46 div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$46
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // NT$47 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$47",92, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // NT$48 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$48",93, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // div ::= MEN DIV NT$47 par7 MAY div NT$48 MEN BARRA DIV MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$48
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // NT$49 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$49",94, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // div ::= MEN IMG NT$49 par8 MAY MEN BARRA IMG MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$49
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$50 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$50",95, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // div ::= MEN BR NT$50 MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$50
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$51 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$51",96, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // NT$52 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$52",97, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // div ::= MEN BUTTON NT$51 par9 MAY pals NT$52 MEN BARRA BUTTON MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$52
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // NT$53 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$53",98, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // NT$54 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$54",99, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // div ::= MEN H1 NT$53 par10 MAY pals NT$54 MEN BARRA H1 MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$54
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NT$55 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$55",100, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // NT$56 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$56",101, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // div ::= MEN PAR NT$55 par11 MAY pals NT$56 MEN BARRA PAR MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$56
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // NT$57 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$57",102, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // div ::= MEN SCRIPTING NT$57 par11 MAY scrip MEN BARRA SCRIPTING MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$57
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // div ::= MEN BARRA DIV MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // div ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // NT$58 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
crearProceso(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$58",103, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // scrip ::= PROCESO NT$58 PARI PARD CORCHCUADI instrucciones CORCHCUADD scrip 
            {
              Object RESULT =null;
              // propagate RESULT from NT$58
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // NT$59 ::= 
            {
              Object RESULT =null;
crearProceso(String.valueOf("ONLOAD"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$59",104, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // scrip ::= ONLOAD NT$59 PARI PARD CORCHCUADI instrucciones CORCHCUADD scrip 
            {
              Object RESULT =null;
              // propagate RESULT from NT$59
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // scrip ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // NT$60 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TITLE");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$60",105, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // NT$61 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$61",106, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // hed ::= MEN TITLE NT$60 MAY pals NT$61 MEN BARRA TITLE MAY hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$61
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NT$62 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("LINK");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$62",107, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // NT$63 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$63",108, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // hed ::= MEN LINK NT$62 par1 MAY pals NT$63 MEN BARRA LINK MAY hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$63
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // NT$64 ::= 
            {
              Object RESULT =null;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$64",109, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // hed ::= MEN BARRA HEAD MAY NT$64 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$64
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // hed ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // NT$65 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("OPTION");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$65",110, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // NT$66 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$66",111, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // opt ::= MEN OPTION NT$65 MAY pals NT$66 MEN BARRA OPTION MAY opt 
            {
              Object RESULT =null;
              // propagate RESULT from NT$66
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // opt ::= MEN BARRA SELECT MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // opt ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // pals ::= PALABRA 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // pals ::= PALABRAS 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // pals ::= 
            {
              Object RESULT =null;
		RESULT = "";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // NT$67 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("FSIZE",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$67",112, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // parGlob ::= CORCHCUADI FSIZE valp NT$67 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$67
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // NT$68 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("FFAMILY",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$68",113, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // parGlob ::= CORCHCUADI FFAMILY valp NT$68 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$68
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // NT$69 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("TEXTALIGN",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$69",114, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // parGlob ::= CORCHCUADI TEXTALIGN valp NT$69 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$69
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // NT$70 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$70",115, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // parGlob ::= CORCHCUADI IDETIQUETA valp NT$70 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$70
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // NT$71 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$71",116, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // par0 ::= CORCHCUADI IDETIQUETA valp NT$71 CORCHCUADD par0 
            {
              Object RESULT =null;
              // propagate RESULT from NT$71
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // NT$72 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("NAME",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$72",117, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // par0 ::= CORCHCUADI NAME valp NT$72 CORCHCUADD par0 
            {
              Object RESULT =null;
              // propagate RESULT from NT$72
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // par0 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // NT$73 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("HREF",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$73",118, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // par1 ::= CORCHCUADI HREF valp NT$73 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$73
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par1",7, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // NT$74 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$74",119, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // par2 ::= CORCHCUADI BACK valp NT$74 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$74
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par2",8, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // par2 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par2",8, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // NT$75 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$75",120, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // par3 ::= CORCHCUADI COLOR valp NT$75 CORCHCUADD par3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$75
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // par3 ::= parGlob par3 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // par3 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // NT$76 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("TYPE",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$76",121, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // par4 ::= CORCHCUADI TYPE valp NT$76 CORCHCUADD par4 
            {
              Object RESULT =null;
              // propagate RESULT from NT$76
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // par4 ::= parGlob par4 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // par4 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // NT$77 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$77",122, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // par5 ::= CORCHCUADI COLS valp NT$77 CORCHCUADD par5 
            {
              Object RESULT =null;
              // propagate RESULT from NT$77
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // NT$78 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ROWS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$78",123, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // par5 ::= CORCHCUADI ROWS valp NT$78 CORCHCUADD par5 
            {
              Object RESULT =null;
              // propagate RESULT from NT$78
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // par5 ::= parGlob par5 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // par5 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // NT$79 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$79",124, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // par6 ::= CORCHCUADI COLOR valp NT$79 CORCHCUADD par6 
            {
              Object RESULT =null;
              // propagate RESULT from NT$79
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // par6 ::= parGlob par6 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // par6 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // NT$80 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("CLASS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$80",125, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // par7 ::= CORCHCUADI CLASS valp NT$80 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$80
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // NT$81 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$81",126, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // par7 ::= CORCHCUADI COLOR valp NT$81 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$81
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // NT$82 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$82",127, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // par7 ::= CORCHCUADI BACK valp NT$82 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$82
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // par7 ::= parGlob par7 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // par7 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // NT$83 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("SRC",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$83",128, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // par8 ::= CORCHCUADI SRC valp NT$83 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$83
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // NT$84 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("WIDTH",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$84",129, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // par8 ::= CORCHCUADI WIDTH valp NT$84 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$84
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // NT$85 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("HEIGHT",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$85",130, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // par8 ::= CORCHCUADI HEIGHT valp NT$85 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$85
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // NT$86 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ALT",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$86",131, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // par8 ::= CORCHCUADI ALT valp NT$86 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$86
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // NT$87 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$87",132, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // par8 ::= CORCHCUADI IDETIQUETA valp NT$87 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$87
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // par8 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // NT$88 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ONCLICK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$88",133, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // par9 ::= CORCHCUADI ONCLICK valp NT$88 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$88
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // NT$89 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$89",134, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // par9 ::= CORCHCUADI COLOR valp NT$89 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$89
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // NT$90 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$90",135, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // par9 ::= CORCHCUADI BACK valp NT$90 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$90
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // par9 ::= parGlob par9 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // par9 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // NT$91 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$91",136, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // par10 ::= CORCHCUADI COLOR valp NT$91 CORCHCUADD par10 
            {
              Object RESULT =null;
              // propagate RESULT from NT$91
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // par10 ::= parGlob par10 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // par10 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // NT$92 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$92",137, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // par11 ::= CORCHCUADI COLOR valp NT$92 CORCHCUADD par11 
            {
              Object RESULT =null;
              // propagate RESULT from NT$92
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // par11 ::= parGlob par11 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // par11 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // valp ::= IGUAL VALP 
            {
              Object RESULT =null;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String contenido = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = contenido;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("valp",4, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // NT$93 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("declaracion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$93",138, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // instrucciones ::= NT$93 declaracion instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$93
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // NT$94 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("asignacion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$94",139, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // instrucciones ::= NT$94 asignacion instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$94
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // NT$95 ::= 
            {
              Object RESULT =null;
insertarInsIf();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$95",140, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // NT$96 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$96",141, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // NT$97 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$97",142, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // instrucciones ::= NT$95 IF PARI condicion NT$96 PARD THEN inite ifp NT$97 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$97
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // NT$98 ::= 
            {
              Object RESULT =null;
insertarRepeat();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$98",143, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // NT$99 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;
crearExpresion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$99",144, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // NT$100 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$100",145, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // instrucciones ::= NT$98 REPEAT PARI rep PARD HUNTIL PARI NT$99 hun PARD inite NT$100 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$100
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-12)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // NT$101 ::= 
            {
              Object RESULT =null;
insertarWhile();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$101",146, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // NT$102 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$102",147, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // NT$103 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$103",148, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // instrucciones ::= NT$101 WHILE PARI condicion NT$102 PARD THENWHILE inite NT$103 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$103
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // NT$104 ::= 
            {
              Object RESULT =null;
insertarInsInsert();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$104",149, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // instrucciones ::= NT$104 INSERT PARI token PARD PUNTCOMA instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$104
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // NT$105 ::= 
            {
              Object RESULT =null;
insertarAlertInf();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$105",150, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // NT$106 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
alertInfoAct.setMensaje(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$106",151, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // instrucciones ::= NT$105 ALERTINFO PARI parS NT$106 PARD PUNTCOMA instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$106
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // instrucciones ::= EXIT PARI PARD PUNTCOMA 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // instrucciones ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // NT$107 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnDeclaracion(String.valueOf(t),String.valueOf(m),String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$107",152, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // declaracion ::= tipo modo variable NT$107 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$107
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("declaracion",33, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // tipo ::= INTEGER 
            {
              Object RESULT =null;
		RESULT = "INTEGER";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // tipo ::= STRING 
            {
              Object RESULT =null;
		RESULT = "STRING";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // tipo ::= DECIMAL 
            {
              Object RESULT =null;
		RESULT = "DECIMAL";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // tipo ::= BOOLEAN 
            {
              Object RESULT =null;
		RESULT = "BOOLEAN";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // tipo ::= CHAR 
            {
              Object RESULT =null;
		RESULT = "CHAR";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // variable ::= PALABRAS 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("variable",31, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // variable ::= IDET 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("variable",31, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // modo ::= GLOBAL 
            {
              Object RESULT =null;
		RESULT = "GLOBAL";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("modo",32, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // modo ::= 
            {
              Object RESULT =null;
		RESULT = "";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("modo",32, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // fin1 ::= PUNTCOMA 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // NT$108 ::= 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
delcAsignAct.insertarVariable(String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$108",153, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // fin1 ::= COMA variable NT$108 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$108
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // fin1 ::= IGUAL asg 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // NT$109 ::= 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
delcAsignAct.insertarVariable(String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$109",154, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // asignacion ::= variable NT$109 IGUAL asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$109
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asignacion",34, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // NT$110 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$110",155, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // asg ::= VALP NT$110 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$110
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // NT$111 ::= 
            {
              Object RESULT =null;
insertarVal("true");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$111",156, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // asg ::= TRUE NT$111 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$111
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // NT$112 ::= 
            {
              Object RESULT =null;
insertarVal("false");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$112",157, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // asg ::= FALSE NT$112 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$112
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // NT$113 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$113",158, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // asg ::= variable NT$113 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$113
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // NT$114 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$114",159, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // asg ::= DECIM NT$114 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$114
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // NT$115 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$115",160, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // asg ::= CARACTER NT$115 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$115
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // NT$116 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcGetElement:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$116",161, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // asg ::= GETELEMENT PARI CARACTER PARD NT$116 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$116
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // NT$117 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcAsc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$117",162, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // asg ::= ASC PARI parS PARD NT$117 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$117
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // NT$118 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcDesc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$118",163, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // asg ::= DESC PARI parS PARD NT$118 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$118
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // NT$119 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcLetPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$119",164, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // asg ::= LETPAR PARI parS PARD NT$119 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$119
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // NT$120 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcLetImPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$120",165, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // asg ::= LETIMPAR PARI parS PARD NT$120 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$120
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // NT$121 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcReverse:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$121",166, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // asg ::= REVERSE PARI parS PARD NT$121 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$121
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // NT$122 ::= 
            {
              Object RESULT =null;
insertarVal("funcCarAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$122",167, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // asg ::= CARALEATORIO PARI PARD NT$122 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$122
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // NT$123 ::= 
            {
              Object RESULT =null;
insertarVal("funcNumAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$123",168, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // asg ::= NUMALEA PARI PARD NT$123 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$123
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // NT$124 ::= 
            {
              Object RESULT =null;
insertarVal("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$124",169, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // NT$125 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarVal(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$125",170, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // asg ::= PARI NT$124 asg PARD NT$125 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$125
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // parS ::= VALP 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // parS ::= CARACTER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // parS ::= variable 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // NT$126 ::= 
            {
              Object RESULT =null;
insertarVal("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$126",171, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // fin2 ::= SUMA NT$126 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$126
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // NT$127 ::= 
            {
              Object RESULT =null;
insertarVal("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$127",172, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // fin2 ::= RESTA NT$127 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$127
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // NT$128 ::= 
            {
              Object RESULT =null;
insertarVal("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$128",173, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // fin2 ::= MULT NT$128 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$128
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // NT$129 ::= 
            {
              Object RESULT =null;
insertarVal("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$129",174, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // fin2 ::= BARRA NT$129 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$129
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // fin2 ::= PUNTCOMA 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // NT$130 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$130",175, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // condicion ::= opNot asg2 opRel NT$130 opNot asg2 opLog 
            {
              Object RESULT =null;
              // propagate RESULT from NT$130
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("condicion",28, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // condicion ::= opNot asg2 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("condicion",28, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // opNot ::= EXCL 
            {
              Object RESULT =null;
		insertarEnCondi("!");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opNot",29, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // opNot ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opNot",29, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // NT$131 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$131",176, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // asg2 ::= VALP NT$131 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$131
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // NT$132 ::= 
            {
              Object RESULT =null;
insertarEnCondi("true");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$132",177, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // asg2 ::= TRUE NT$132 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$132
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // NT$133 ::= 
            {
              Object RESULT =null;
insertarEnCondi("false");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$133",178, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // asg2 ::= FALSE NT$133 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$133
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // NT$134 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$134",179, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // asg2 ::= variable NT$134 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$134
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // NT$135 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$135",180, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // asg2 ::= DECIM NT$135 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$135
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // NT$136 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$136",181, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // asg2 ::= CARACTER NT$136 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$136
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // NT$137 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcGetElement:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$137",182, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // asg2 ::= GETELEMENT PARI CARACTER PARD NT$137 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$137
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // NT$138 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcAsc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$138",183, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // asg2 ::= ASC PARI parS PARD NT$138 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$138
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // NT$139 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcDesc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$139",184, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserGCIC$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action_part00000001(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserGCIC$result;

      /* select the action based on the action number */
      switch (CUP$ParserGCIC$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // asg2 ::= DESC PARI parS PARD NT$139 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$139
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // NT$140 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcLetPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$140",185, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // asg2 ::= LETPAR PARI parS PARD NT$140 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$140
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // NT$141 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcLetImPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$141",186, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // asg2 ::= LETIMPAR PARI parS PARD NT$141 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$141
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // NT$142 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcReverse:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$142",187, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // asg2 ::= REVERSE PARI parS PARD NT$142 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$142
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // NT$143 ::= 
            {
              Object RESULT =null;
insertarEnCondi("funcCarAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$143",188, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // asg2 ::= CARALEATORIO PARI PARD NT$143 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$143
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // NT$144 ::= 
            {
              Object RESULT =null;
insertarEnCondi("funcNumAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$144",189, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // asg2 ::= NUMALEA PARI PARD NT$144 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$144
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // NT$145 ::= 
            {
              Object RESULT =null;
insertarEnCondi("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$145",190, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // NT$146 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarEnCondi(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$146",191, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // asg2 ::= PARI NT$145 asg2 PARD NT$146 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$146
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // NT$147 ::= 
            {
              Object RESULT =null;
insertarEnCondi("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$147",192, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // fin3 ::= SUMA NT$147 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$147
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // NT$148 ::= 
            {
              Object RESULT =null;
insertarEnCondi("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$148",193, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // fin3 ::= RESTA NT$148 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$148
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // NT$149 ::= 
            {
              Object RESULT =null;
insertarEnCondi("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$149",194, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // fin3 ::= MULT NT$149 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$149
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // NT$150 ::= 
            {
              Object RESULT =null;
insertarEnCondi("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$150",195, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // fin3 ::= BARRA NT$150 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$150
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // fin3 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // opRel ::= MAYIG 
            {
              Object RESULT =null;
		RESULT = ">=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // opRel ::= MENIG 
            {
              Object RESULT =null;
		RESULT = "<=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // opRel ::= MEN 
            {
              Object RESULT =null;
		RESULT = "<";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // opRel ::= MAY 
            {
              Object RESULT =null;
		RESULT = ">";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // opRel ::= DOBIGUAL 
            {
              Object RESULT =null;
		RESULT = "==";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // opRel ::= DIFER 
            {
              Object RESULT =null;
		RESULT = "!=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // NT$151 ::= 
            {
              Object RESULT =null;
insertarEnCondi(String.valueOf("||"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$151",196, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // opLog ::= OR NT$151 condicion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$151
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // NT$152 ::= 
            {
              Object RESULT =null;
insertarEnCondi(String.valueOf("&&"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$152",197, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // opLog ::= AND NT$152 condicion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$152
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // opLog ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // inite ::= INITC CORCHI DOSPUNT instrucciones DOSPUNT CORCHD END 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // NT$153 ::= 
            {
              Object RESULT =null;
insertarElse();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$153",198, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ifp ::= ELSE NT$153 inite 
            {
              Object RESULT =null;
              // propagate RESULT from NT$153
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // NT$154 ::= 
            {
              Object RESULT =null;
insertarElseIF();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$154",199, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ifp ::= ELSEIF NT$154 PARI condicion PARD inite ifp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$154
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ifp ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // NT$155 ::= 
            {
              Object RESULT =null;
insertarDeclaracionCiclo("declaracion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$155",200, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // rep ::= NT$155 declaracion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$155
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("rep",23, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // NT$156 ::= 
            {
              Object RESULT =null;
insertarDeclaracionCiclo("asignacion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$156",201, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // rep ::= NT$156 asignacion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$156
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("rep",23, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // NT$157 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarExp(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$157",202, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // hun ::= variable NT$157 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$157
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // NT$158 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarExp(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$158",203, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // hun ::= DECIM NT$158 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$158
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // NT$159 ::= 
            {
              Object RESULT =null;
insertarExp("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$159",204, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // NT$160 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarExp(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$160",205, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // hun ::= PARI NT$159 hun PARD NT$160 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$160
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // NT$161 ::= 
            {
              Object RESULT =null;
insertarExp("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$161",206, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // hun2 ::= SUMA NT$161 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$161
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // NT$162 ::= 
            {
              Object RESULT =null;
insertarExp("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$162",207, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // hun2 ::= RESTA NT$162 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$162
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // NT$163 ::= 
            {
              Object RESULT =null;
insertarExp("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$163",208, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // hun2 ::= MULT NT$163 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$163
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // NT$164 ::= 
            {
              Object RESULT =null;
insertarExp("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$164",209, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // hun2 ::= BARRA NT$164 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$164
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // hun2 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // NT$165 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarToken(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$165",210, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // token ::= variable NT$165 tokenp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$165
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("token",26, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // NT$166 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarToken(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$166",211, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // token ::= CARACTER NT$166 tokenp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$166
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("token",26, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // tokenp ::= COMA token 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tokenp",27, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // tokenp ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tokenp",27, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserGCIC$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$ParserGCIC$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$ParserGCIC$do_action_part00000000(
                               CUP$ParserGCIC$act_num,
                               CUP$ParserGCIC$parser,
                               CUP$ParserGCIC$stack,
                               CUP$ParserGCIC$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$ParserGCIC$do_action_part00000001(
                               CUP$ParserGCIC$act_num,
                               CUP$ParserGCIC$parser,
                               CUP$ParserGCIC$stack,
                               CUP$ParserGCIC$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
