
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import objetos.ErrorCom;
import objetos.Etiqueta;
import objetos.ParametroEtiqueta;
import objetos.Instrucciones.DeclAsign;
import objetos.Instrucciones.InsIf;
import objetos.Instruccion;
import objetos.Instrucciones.Ciclo;
import objetos.Instrucciones.InsInsert;
import objetos.Instrucciones.AlertInfo;
import objetos.Proceso;
import objetos.Instrucciones.Redireccionar;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserGCIC extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symG.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserGCIC() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserGCIC(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserGCIC(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u018b\000\002\002\004\000\002\061\002\000\002\002" +
    "\010\000\002\062\002\000\002\003\007\000\002\063\002" +
    "\000\002\064\002\000\002\003\012\000\002\065\002\000" +
    "\002\066\002\000\002\003\016\000\002\067\002\000\002" +
    "\003\014\000\002\070\002\000\002\071\002\000\002\003" +
    "\016\000\002\072\002\000\002\073\002\000\002\003\012" +
    "\000\002\074\002\000\002\075\002\000\002\003\012\000" +
    "\002\076\002\000\002\003\014\000\002\077\002\000\002" +
    "\003\007\000\002\100\002\000\002\101\002\000\002\003" +
    "\016\000\002\102\002\000\002\103\002\000\002\003\016" +
    "\000\002\104\002\000\002\105\002\000\002\003\016\000" +
    "\002\106\002\000\002\003\015\000\002\003\006\000\002" +
    "\003\003\000\002\107\002\000\002\110\002\000\002\025" +
    "\016\000\002\111\002\000\002\025\014\000\002\112\002" +
    "\000\002\113\002\000\002\025\016\000\002\114\002\000" +
    "\002\115\002\000\002\025\012\000\002\116\002\000\002" +
    "\117\002\000\002\025\012\000\002\120\002\000\002\025" +
    "\014\000\002\121\002\000\002\025\007\000\002\122\002" +
    "\000\002\123\002\000\002\025\016\000\002\124\002\000" +
    "\002\125\002\000\002\025\016\000\002\126\002\000\002" +
    "\127\002\000\002\025\016\000\002\130\002\000\002\025" +
    "\015\000\002\025\006\000\002\025\003\000\002\131\002" +
    "\000\002\132\002\000\002\056\016\000\002\133\002\000" +
    "\002\056\014\000\002\134\002\000\002\135\002\000\002" +
    "\056\016\000\002\136\002\000\002\137\002\000\002\056" +
    "\012\000\002\140\002\000\002\141\002\000\002\056\012" +
    "\000\002\142\002\000\002\056\014\000\002\143\002\000" +
    "\002\056\007\000\002\144\002\000\002\145\002\000\002" +
    "\056\016\000\002\146\002\000\002\147\002\000\002\056" +
    "\016\000\002\150\002\000\002\151\002\000\002\056\016" +
    "\000\002\152\002\000\002\056\015\000\002\056\006\000" +
    "\002\056\003\000\002\153\002\000\002\055\012\000\002" +
    "\154\002\000\002\055\012\000\002\055\002\000\002\155" +
    "\002\000\002\156\002\000\002\004\015\000\002\157\002" +
    "\000\002\160\002\000\002\004\016\000\002\161\002\000" +
    "\002\004\010\000\002\004\003\000\002\162\002\000\002" +
    "\163\002\000\002\007\015\000\002\007\006\000\002\007" +
    "\003\000\002\005\004\000\002\005\004\000\002\005\004" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\002\000\002\164\002\000\002\024\007\000\002" +
    "\165\002\000\002\024\007\000\002\166\002\000\002\024" +
    "\007\000\002\167\002\000\002\024\007\000\002\170\002" +
    "\000\002\010\010\000\002\171\002\000\002\010\010\000" +
    "\002\010\002\000\002\172\002\000\002\011\007\000\002" +
    "\173\002\000\002\012\007\000\002\012\002\000\002\174" +
    "\002\000\002\013\010\000\002\013\004\000\002\013\002" +
    "\000\002\175\002\000\002\014\010\000\002\014\004\000" +
    "\002\014\002\000\002\176\002\000\002\015\010\000\002" +
    "\177\002\000\002\015\010\000\002\015\004\000\002\015" +
    "\002\000\002\200\002\000\002\016\010\000\002\016\004" +
    "\000\002\016\002\000\002\201\002\000\002\017\010\000" +
    "\002\202\002\000\002\017\010\000\002\203\002\000\002" +
    "\017\010\000\002\017\004\000\002\017\002\000\002\204" +
    "\002\000\002\020\010\000\002\205\002\000\002\020\010" +
    "\000\002\206\002\000\002\020\010\000\002\207\002\000" +
    "\002\020\010\000\002\210\002\000\002\020\010\000\002" +
    "\020\002\000\002\211\002\000\002\021\010\000\002\212" +
    "\002\000\002\021\010\000\002\213\002\000\002\021\010" +
    "\000\002\021\004\000\002\021\002\000\002\214\002\000" +
    "\002\022\010\000\002\022\004\000\002\022\002\000\002" +
    "\215\002\000\002\023\010\000\002\023\004\000\002\023" +
    "\002\000\002\006\004\000\002\216\002\000\002\026\005" +
    "\000\002\217\002\000\002\026\005\000\002\220\002\000" +
    "\002\221\002\000\002\222\002\000\002\026\015\000\002" +
    "\223\002\000\002\224\002\000\002\225\002\000\002\226" +
    "\002\000\002\026\020\000\002\227\002\000\002\230\002" +
    "\000\002\231\002\000\002\026\014\000\002\232\002\000" +
    "\002\026\011\000\002\233\002\000\002\234\002\000\002" +
    "\026\012\000\002\235\002\000\002\026\010\000\002\236" +
    "\002\000\002\026\007\000\002\026\002\000\002\027\011" +
    "\000\002\237\002\000\002\027\004\000\002\240\002\000" +
    "\002\027\004\000\002\241\002\000\002\027\010\000\002" +
    "\242\002\000\002\243\002\000\002\027\011\000\002\244" +
    "\002\000\002\027\007\000\002\245\002\000\002\027\007" +
    "\000\002\246\002\000\002\043\007\000\002\040\003\000" +
    "\002\040\003\000\002\040\003\000\002\040\003\000\002" +
    "\040\003\000\002\041\003\000\002\041\003\000\002\042" +
    "\003\000\002\042\002\000\002\047\003\000\002\247\002" +
    "\000\002\047\006\000\002\047\004\000\002\250\002\000" +
    "\002\044\006\000\002\251\002\000\002\045\005\000\002" +
    "\252\002\000\002\045\005\000\002\253\002\000\002\045" +
    "\005\000\002\254\002\000\002\045\005\000\002\255\002" +
    "\000\002\045\005\000\002\256\002\000\002\045\005\000" +
    "\002\257\002\000\002\045\010\000\002\260\002\000\002" +
    "\045\010\000\002\261\002\000\002\045\010\000\002\262" +
    "\002\000\002\045\010\000\002\263\002\000\002\045\010" +
    "\000\002\264\002\000\002\045\010\000\002\265\002\000" +
    "\002\045\007\000\002\266\002\000\002\045\007\000\002" +
    "\267\002\000\002\045\005\000\002\052\003\000\002\052" +
    "\003\000\002\052\003\000\002\270\002\000\002\050\005" +
    "\000\002\271\002\000\002\050\005\000\002\272\002\000" +
    "\002\050\005\000\002\273\002\000\002\050\005\000\002" +
    "\274\002\000\002\050\005\000\002\275\002\000\002\050" +
    "\005\000\002\050\003\000\002\036\004\000\002\276\002" +
    "\000\002\046\005\000\002\277\002\000\002\046\005\000" +
    "\002\300\002\000\002\046\005\000\002\301\002\000\002" +
    "\046\005\000\002\302\002\000\002\046\005\000\002\303" +
    "\002\000\002\046\005\000\002\304\002\000\002\046\010" +
    "\000\002\305\002\000\002\046\010\000\002\306\002\000" +
    "\002\046\010\000\002\307\002\000\002\046\010\000\002" +
    "\310\002\000\002\046\010\000\002\311\002\000\002\046" +
    "\010\000\002\312\002\000\002\046\007\000\002\313\002" +
    "\000\002\046\007\000\002\314\002\000\002\315\002\000" +
    "\002\046\010\000\002\316\002\000\002\046\005\000\002" +
    "\317\002\000\002\051\005\000\002\320\002\000\002\051" +
    "\005\000\002\321\002\000\002\051\005\000\002\322\002" +
    "\000\002\051\005\000\002\323\002\000\002\051\005\000" +
    "\002\051\002\000\002\053\003\000\002\053\003\000\002" +
    "\053\003\000\002\053\003\000\002\053\003\000\002\053" +
    "\003\000\002\324\002\000\002\054\005\000\002\325\002" +
    "\000\002\054\005\000\002\054\002\000\002\326\002\000" +
    "\002\030\005\000\002\327\002\000\002\330\002\000\002" +
    "\030\013\000\002\030\002\000\002\331\002\000\002\031" +
    "\004\000\002\332\002\000\002\031\004\000\002\333\002" +
    "\000\002\032\005\000\002\334\002\000\002\032\005\000" +
    "\002\335\002\000\002\336\002\000\002\032\010\000\002" +
    "\337\002\000\002\033\005\000\002\340\002\000\002\033" +
    "\005\000\002\341\002\000\002\033\005\000\002\342\002" +
    "\000\002\033\005\000\002\033\002\000\002\343\002\000" +
    "\002\034\005\000\002\344\002\000\002\034\005\000\002" +
    "\035\004\000\002\035\002\000\002\345\002\000\002\057" +
    "\010\000\002\346\002\000\002\060\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u03a9\000\004\005\004\001\002\000\004\013\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\006\004\000\010\000\001\002\000\006\004\uff76\010" +
    "\011\001\002\000\006\043\u03a2\044\u03a3\001\002\000\004" +
    "\004\013\001\002\000\006\003\014\005\015\001\002\000" +
    "\004\002\uffdb\001\002\000\036\007\030\014\026\017\021" +
    "\020\031\021\022\022\033\023\027\025\025\026\034\027" +
    "\023\030\017\031\032\032\020\033\024\001\002\000\004" +
    "\002\uffff\001\002\000\006\004\uffe7\010\uffe7\001\002\000" +
    "\006\004\uffe1\010\uffe1\001\002\000\006\004\ufffc\010\ufffc" +
    "\001\002\000\006\004\ufff6\010\ufff6\001\002\000\004\004" +
    "\uffe9\001\002\000\006\004\uffde\010\uffde\001\002\000\006" +
    "\004\uffee\010\uffee\001\002\000\004\004\267\001\002\000" +
    "\006\004\ufff1\010\ufff1\001\002\000\004\013\230\001\002" +
    "\000\006\004\ufff9\010\ufff9\001\002\000\006\004\uffe4\010" +
    "\uffe4\001\002\000\006\004\ufff4\010\ufff4\001\002\000\006" +
    "\004\uffeb\010\uffeb\001\002\000\006\004\uff4c\010\036\001" +
    "\002\000\014\043\046\050\051\051\047\052\052\053\050" +
    "\001\002\000\004\004\040\001\002\000\004\005\041\001" +
    "\002\000\004\007\042\001\002\000\004\026\043\001\002" +
    "\000\004\004\044\001\002\000\006\003\014\005\015\001" +
    "\002\000\004\002\uffea\001\002\000\004\012\053\001\002" +
    "\000\004\012\053\001\002\000\004\012\053\001\002\000" +
    "\004\012\053\001\002\000\004\012\053\001\002\000\004" +
    "\057\060\001\002\000\004\011\uff52\001\002\000\004\011" +
    "\056\001\002\000\006\004\uff4c\010\036\001\002\000\004" +
    "\004\uff51\001\002\000\004\011\uff3b\001\002\000\004\011" +
    "\uff56\001\002\000\004\011\063\001\002\000\006\004\uff4c" +
    "\010\036\001\002\000\004\004\uff55\001\002\000\004\011" +
    "\uff50\001\002\000\004\011\067\001\002\000\006\004\uff4c" +
    "\010\036\001\002\000\004\004\uff4f\001\002\000\004\011" +
    "\uff54\001\002\000\004\011\073\001\002\000\006\004\uff4c" +
    "\010\036\001\002\000\004\004\uff53\001\002\000\004\011" +
    "\uff4e\001\002\000\004\011\077\001\002\000\006\004\uff4c" +
    "\010\036\001\002\000\004\004\uff4d\001\002\000\006\004" +
    "\uff63\010\103\001\002\000\004\004\140\001\002\000\016" +
    "\037\106\040\112\041\113\043\107\045\111\046\110\001" +
    "\002\000\006\004\uff63\010\103\001\002\000\004\004\uff64" +
    "\001\002\000\004\012\053\001\002\000\004\012\053\001" +
    "\002\000\004\012\053\001\002\000\004\012\053\001\002" +
    "\000\004\012\053\001\002\000\004\012\053\001\002\000" +
    "\004\011\uff7e\001\002\000\004\011\116\001\002\000\006" +
    "\004\uff7d\010\uff7d\001\002\000\004\011\uff80\001\002\000" +
    "\004\011\121\001\002\000\006\004\uff7f\010\uff7f\001\002" +
    "\000\004\011\uff68\001\002\000\004\011\124\001\002\000" +
    "\006\004\uff63\010\103\001\002\000\004\004\uff67\001\002" +
    "\000\004\011\uff66\001\002\000\004\011\130\001\002\000" +
    "\006\004\uff63\010\103\001\002\000\004\004\uff65\001\002" +
    "\000\004\011\uff7c\001\002\000\004\011\134\001\002\000" +
    "\006\004\uff7b\010\uff7b\001\002\000\004\011\uff82\001\002" +
    "\000\004\011\137\001\002\000\006\004\uff81\010\uff81\001" +
    "\002\000\020\005\uff83\007\145\055\143\056\147\121\146" +
    "\122\141\123\142\001\002\000\020\005\uff83\007\145\055" +
    "\143\056\147\121\146\122\141\123\142\001\002\000\020" +
    "\005\uff83\007\145\055\143\056\147\121\146\122\141\123" +
    "\142\001\002\000\020\005\uff83\007\145\055\143\056\147" +
    "\121\146\122\141\123\142\001\002\000\004\005\ufff3\001" +
    "\002\000\020\005\uff83\007\145\055\143\056\147\121\146" +
    "\122\141\123\142\001\002\000\020\005\uff83\007\145\055" +
    "\143\056\147\121\146\122\141\123\142\001\002\000\020" +
    "\005\uff83\007\145\055\143\056\147\121\146\122\141\123" +
    "\142\001\002\000\004\005\uff88\001\002\000\004\005\uff87" +
    "\001\002\000\004\005\uff84\001\002\000\004\005\154\001" +
    "\002\000\004\007\155\001\002\000\004\022\156\001\002" +
    "\000\004\004\157\001\002\000\006\003\014\005\015\001" +
    "\002\000\004\002\ufff2\001\002\000\004\005\uff89\001\002" +
    "\000\004\005\uff85\001\002\000\004\005\uff86\001\002\000" +
    "\006\004\uff40\010\165\001\002\000\014\036\201\037\106" +
    "\040\112\041\113\043\107\001\002\000\004\004\171\001" +
    "\002\000\006\004\uff40\010\165\001\002\000\004\004\uff41" +
    "\001\002\000\020\005\uff83\007\145\055\143\056\147\121" +
    "\146\122\141\123\142\001\002\000\004\005\uffe3\001\002" +
    "\000\004\005\174\001\002\000\004\007\175\001\002\000" +
    "\004\031\176\001\002\000\004\004\177\001\002\000\006" +
    "\003\014\005\015\001\002\000\004\002\uffe2\001\002\000" +
    "\004\012\053\001\002\000\004\011\uff43\001\002\000\004" +
    "\011\204\001\002\000\006\004\uff40\010\165\001\002\000" +
    "\004\004\uff42\001\002\000\006\004\uff6d\010\210\001\002" +
    "\000\004\004\220\001\002\000\014\036\213\037\106\040" +
    "\112\041\113\043\107\001\002\000\006\004\uff6d\010\210" +
    "\001\002\000\004\004\uff6e\001\002\000\004\012\053\001" +
    "\002\000\004\011\uff70\001\002\000\004\011\216\001\002" +
    "\000\006\004\uff6d\010\210\001\002\000\004\004\uff6f\001" +
    "\002\000\020\005\uff83\007\145\055\143\056\147\121\146" +
    "\122\141\123\142\001\002\000\004\005\ufff8\001\002\000" +
    "\004\005\223\001\002\000\004\007\224\001\002\000\004" +
    "\020\225\001\002\000\004\004\226\001\002\000\006\003" +
    "\014\005\015\001\002\000\004\002\ufff7\001\002\000\004" +
    "\004\231\001\002\000\004\002\uffdc\001\002\000\006\004" +
    "\uff5f\010\233\001\002\000\014\036\262\037\106\040\112" +
    "\041\113\043\107\001\002\000\006\004\uff5f\010\233\001" +
    "\002\000\004\004\236\001\002\000\006\003\237\005\241" +
    "\001\002\000\006\003\uff8a\005\uff8a\001\002\000\006\003" +
    "\ufff0\005\ufff0\001\002\000\006\007\242\024\243\001\002" +
    "\000\004\023\255\001\002\000\004\004\uff8e\001\002\000" +
    "\004\004\245\001\002\000\020\005\uff83\007\145\055\143" +
    "\056\147\121\146\122\141\123\142\001\002\000\004\005" +
    "\uff8d\001\002\000\004\005\250\001\002\000\004\007\251" +
    "\001\002\000\004\024\252\001\002\000\004\004\253\001" +
    "\002\000\006\003\237\005\241\001\002\000\006\003\uff8c" +
    "\005\uff8c\001\002\000\004\004\256\001\002\000\006\003" +
    "\uff8b\005\uff8b\001\002\000\006\003\014\005\015\001\002" +
    "\000\004\002\uffef\001\002\000\004\004\uff60\001\002\000" +
    "\004\012\053\001\002\000\004\011\uff62\001\002\000\004" +
    "\011\265\001\002\000\006\004\uff5f\010\233\001\002\000" +
    "\004\004\uff61\001\002\000\006\003\ufffe\005\ufffe\001\002" +
    "\000\006\003\271\005\272\001\002\000\004\002\uff8f\001" +
    "\002\000\010\007\275\015\276\016\274\001\002\000\004" +
    "\002\ufffd\001\002\000\004\010\uff94\001\002\000\004\014" +
    "\310\001\002\000\004\004\uff97\001\002\000\004\004\300" +
    "\001\002\000\020\005\uff83\007\145\055\143\056\147\121" +
    "\146\122\141\123\142\001\002\000\004\005\uff96\001\002" +
    "\000\004\005\303\001\002\000\004\007\304\001\002\000" +
    "\004\015\305\001\002\000\004\004\306\001\002\000\006" +
    "\003\271\005\272\001\002\000\004\002\uff95\001\002\000" +
    "\004\004\311\001\002\000\006\003\uff91\005\uff91\001\002" +
    "\000\006\003\014\005\015\001\002\000\004\002\uff90\001" +
    "\002\000\004\010\315\001\002\000\004\034\327\001\002" +
    "\000\004\004\317\001\002\000\020\005\uff83\007\145\055" +
    "\143\056\147\121\146\122\141\123\142\001\002\000\004" +
    "\005\uff93\001\002\000\004\005\322\001\002\000\004\007" +
    "\323\001\002\000\004\016\324\001\002\000\004\004\325" +
    "\001\002\000\006\003\271\005\272\001\002\000\004\002" +
    "\uff92\001\002\000\004\012\053\001\002\000\004\011\uff75" +
    "\001\002\000\004\011\332\001\002\000\004\004\uff74\001" +
    "\002\000\006\004\uff57\010\334\001\002\000\020\035\u02f7" +
    "\036\u02f6\037\106\040\112\041\113\043\107\047\u02f8\001" +
    "\002\000\004\004\340\001\002\000\006\004\uff57\010\334" +
    "\001\002\000\004\004\uff58\001\002\000\006\003\341\005" +
    "\342\001\002\000\006\003\uff9d\005\uff9d\001\002\000\032" +
    "\007\356\020\355\021\351\022\360\023\354\025\353\026" +
    "\361\027\350\030\346\031\357\032\347\033\352\001\002" +
    "\000\006\003\uffed\005\uffed\001\002\000\006\003\014\005" +
    "\015\001\002\000\004\002\uffec\001\002\000\006\004\uffa9" +
    "\010\uffa9\001\002\000\006\004\uffa3\010\uffa3\001\002\000" +
    "\004\004\uffab\001\002\000\006\004\uffb8\010\uffb8\001\002" +
    "\000\006\004\uffa0\010\uffa0\001\002\000\006\004\uffb0\010" +
    "\uffb0\001\002\000\006\004\uffb3\010\uffb3\001\002\000\006" +
    "\004\uffbb\010\uffbb\001\002\000\004\025\u010e\001\002\000" +
    "\006\004\uffa6\010\uffa6\001\002\000\006\004\uffb6\010\uffb6" +
    "\001\002\000\006\004\uffad\010\uffad\001\002\000\006\004" +
    "\uff4c\010\036\001\002\000\004\004\364\001\002\000\004" +
    "\005\365\001\002\000\004\007\366\001\002\000\004\026" +
    "\367\001\002\000\004\004\370\001\002\000\006\003\341" +
    "\005\342\001\002\000\006\003\uffac\005\uffac\001\002\000" +
    "\006\004\uff63\010\103\001\002\000\004\004\374\001\002" +
    "\000\020\005\uff83\007\145\055\143\056\147\121\146\122" +
    "\141\123\142\001\002\000\004\005\uffb5\001\002\000\004" +
    "\005\377\001\002\000\004\007\u0100\001\002\000\004\022" +
    "\u0101\001\002\000\004\004\u0102\001\002\000\006\003\341" +
    "\005\342\001\002\000\006\003\uffb4\005\uffb4\001\002\000" +
    "\006\004\uff40\010\165\001\002\000\004\004\u0106\001\002" +
    "\000\020\005\uff83\007\145\055\143\056\147\121\146\122" +
    "\141\123\142\001\002\000\004\005\uffa5\001\002\000\004" +
    "\005\u0109\001\002\000\004\007\u010a\001\002\000\004\031" +
    "\u010b\001\002\000\004\004\u010c\001\002\000\006\003\341" +
    "\005\342\001\002\000\006\003\uffa4\005\uffa4\001\002\000" +
    "\004\004\u010f\001\002\000\006\003\uff9e\005\uff9e\001\002" +
    "\000\006\004\uff6d\010\210\001\002\000\004\004\u0112\001" +
    "\002\000\020\005\uff83\007\145\055\143\056\147\121\146" +
    "\122\141\123\142\001\002\000\004\005\uffba\001\002\000" +
    "\004\005\u0115\001\002\000\004\007\u0116\001\002\000\004" +
    "\020\u0117\001\002\000\004\004\u0118\001\002\000\006\003" +
    "\341\005\342\001\002\000\006\003\uffb9\005\uffb9\001\002" +
    "\000\006\004\uff5f\010\233\001\002\000\004\004\u011c\001" +
    "\002\000\006\003\237\005\241\001\002\000\006\003\uffb2" +
    "\005\uffb2\001\002\000\006\003\341\005\342\001\002\000" +
    "\006\003\uffb1\005\uffb1\001\002\000\006\004\uff57\010\334" +
    "\001\002\000\004\004\u0122\001\002\000\006\003\341\005" +
    "\342\001\002\000\006\003\uffaf\005\uffaf\001\002\000\006" +
    "\003\341\005\342\001\002\000\006\003\uffae\005\uffae\001" +
    "\002\000\006\004\uff3c\010\u0127\001\002\000\014\036\u02b8" +
    "\037\106\040\112\041\113\043\107\001\002\000\004\004" +
    "\u012b\001\002\000\006\004\uff3c\010\u0127\001\002\000\004" +
    "\004\uff3d\001\002\000\010\005\uff98\131\u012d\132\u012e\001" +
    "\002\000\004\005\u02b3\001\002\000\004\124\uff9a\001\002" +
    "\000\004\124\uff9c\001\002\000\004\124\u0130\001\002\000" +
    "\004\125\u0131\001\002\000\004\010\u0132\001\002\000\040" +
    "\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064" +
    "\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d" +
    "\137\uff38\142\uff24\001\002\000\006\056\u0140\137\u0143\001" +
    "\002\000\004\110\u02a1\001\002\000\014\060\u01b7\061\u01bd" +
    "\062\u01bb\063\u01bc\064\u01b8\001\002\000\004\011\u029d\001" +
    "\002\000\004\075\u0299\001\002\000\004\142\u0294\001\002" +
    "\000\004\105\u0261\001\002\000\004\074\u025a\001\002\000" +
    "\004\107\u0254\001\002\000\004\076\u013d\001\002\000\004" +
    "\124\u013e\001\002\000\044\006\u0142\056\u0140\057\u0151\065" +
    "\u014e\066\u0141\067\u0150\070\u014f\071\u0152\072\u014d\073\u014a" +
    "\111\u0146\112\u014b\124\u0145\133\u0147\137\u0143\140\u0149\141" +
    "\u0148\001\002\000\010\120\u024f\125\ufe9b\135\u024e\001\002" +
    "\000\042\004\uff0a\005\uff0a\007\uff0a\012\uff0a\114\uff0a\115" +
    "\uff0a\116\uff0a\117\uff0a\120\uff0a\121\uff0a\122\uff0a\123\uff0a" +
    "\125\uff0a\126\uff0a\134\uff0a\135\uff0a\001\002\000\004\124" +
    "\u0248\001\002\000\044\006\ufeb2\056\ufeb2\057\ufeb2\065\ufeb2" +
    "\066\ufeb2\067\ufeb2\070\ufeb2\071\ufeb2\072\ufeb2\073\ufeb2\111" +
    "\ufeb2\112\ufeb2\124\ufeb2\133\ufeb2\137\ufeb2\140\ufeb2\141\ufeb2" +
    "\001\002\000\042\004\uff09\005\uff09\007\uff09\012\uff09\114" +
    "\uff09\115\uff09\116\uff09\117\uff09\120\uff09\121\uff09\122\uff09" +
    "\123\uff09\125\uff09\126\uff09\134\uff09\135\uff09\001\002\000" +
    "\004\125\uff35\001\002\000\044\006\ufeb5\056\ufeb5\057\ufeb5" +
    "\065\ufeb5\066\ufeb5\067\ufeb5\070\ufeb5\071\ufeb5\072\ufeb5\073" +
    "\ufeb5\111\ufeb5\112\ufeb5\124\ufeb5\133\ufeb5\137\ufeb5\140\ufeb5" +
    "\141\ufeb5\001\002\000\034\004\ufecf\005\ufecf\007\ufecf\114" +
    "\ufecf\115\ufecf\116\ufecf\117\ufecf\120\ufecf\121\ufecf\122\ufecf" +
    "\123\ufecf\125\ufecf\135\ufecf\001\002\000\004\124\u0191\001" +
    "\002\000\034\004\ufec7\005\ufec7\007\ufec7\114\ufec7\115\ufec7" +
    "\116\ufec7\117\ufec7\120\ufec7\121\ufec7\122\ufec7\123\ufec7\125" +
    "\ufec7\135\ufec7\001\002\000\034\004\ufec9\005\ufec9\007\ufec9" +
    "\114\ufec9\115\ufec9\116\ufec9\117\ufec9\120\ufec9\121\ufec9\122" +
    "\ufec9\123\ufec9\125\ufec9\135\ufec9\001\002\000\004\124\u0189" +
    "\001\002\000\034\004\ufecd\005\ufecd\007\ufecd\114\ufecd\115" +
    "\ufecd\116\ufecd\117\ufecd\120\ufecd\121\ufecd\122\ufecd\123\ufecd" +
    "\125\ufecd\135\ufecd\001\002\000\034\004\ufecb\005\ufecb\007" +
    "\ufecb\114\ufecb\115\ufecb\116\ufecb\117\ufecb\120\ufecb\121\ufecb" +
    "\122\ufecb\123\ufecb\125\ufecb\135\ufecb\001\002\000\004\124" +
    "\u0181\001\002\000\004\124\u017c\001\002\000\004\124\u0177" +
    "\001\002\000\004\124\u0172\001\002\000\034\004\ufed1\005" +
    "\ufed1\007\ufed1\114\ufed1\115\ufed1\116\ufed1\117\ufed1\120\ufed1" +
    "\121\ufed1\122\ufed1\123\ufed1\125\ufed1\135\ufed1\001\002\000" +
    "\004\124\u0153\001\002\000\012\056\u0140\057\u0156\137\u0143" +
    "\141\u0157\001\002\000\004\125\u0158\001\002\000\004\125" +
    "\ufee0\001\002\000\004\125\ufee2\001\002\000\004\125\ufee1" +
    "\001\002\000\034\004\ufebb\005\ufebb\007\ufebb\114\ufebb\115" +
    "\ufebb\116\ufebb\117\ufebb\120\ufebb\121\ufebb\122\ufebb\123\ufebb" +
    "\125\ufebb\135\ufebb\001\002\000\034\004\u015d\005\u015f\007" +
    "\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c" +
    "\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\044\006" +
    "\ufea8\056\ufea8\057\ufea8\065\ufea8\066\ufea8\067\ufea8\070\ufea8" +
    "\071\ufea8\072\ufea8\073\ufea8\111\ufea8\112\ufea8\124\ufea8\133" +
    "\ufea8\137\ufea8\140\ufea8\141\ufea8\001\002\000\044\006\ufea5" +
    "\056\ufea5\057\ufea5\065\ufea5\066\ufea5\067\ufea5\070\ufea5\071" +
    "\ufea5\072\ufea5\073\ufea5\111\ufea5\112\ufea5\124\ufea5\133\ufea5" +
    "\137\ufea5\140\ufea5\141\ufea5\001\002\000\044\006\ufeb0\056" +
    "\ufeb0\057\ufeb0\065\ufeb0\066\ufeb0\067\ufeb0\070\ufeb0\071\ufeb0" +
    "\072\ufeb0\073\ufeb0\111\ufeb0\112\ufeb0\124\ufeb0\133\ufeb0\137" +
    "\ufeb0\140\ufeb0\141\ufeb0\001\002\000\044\006\ufea2\056\ufea2" +
    "\057\ufea2\065\ufea2\066\ufea2\067\ufea2\070\ufea2\071\ufea2\072" +
    "\ufea2\073\ufea2\111\ufea2\112\ufea2\124\ufea2\133\ufea2\137\ufea2" +
    "\140\ufea2\141\ufea2\001\002\000\044\006\ufeac\056\ufeac\057" +
    "\ufeac\065\ufeac\066\ufeac\067\ufeac\070\ufeac\071\ufeac\072\ufeac" +
    "\073\ufeac\111\ufeac\112\ufeac\124\ufeac\133\ufeac\137\ufeac\140" +
    "\ufeac\141\ufeac\001\002\000\044\006\ufea3\056\ufea3\057\ufea3" +
    "\065\ufea3\066\ufea3\067\ufea3\070\ufea3\071\ufea3\072\ufea3\073" +
    "\ufea3\111\ufea3\112\ufea3\124\ufea3\133\ufea3\137\ufea3\140\ufea3" +
    "\141\ufea3\001\002\000\044\006\ufea1\056\ufea1\057\ufea1\065" +
    "\ufea1\066\ufea1\067\ufea1\070\ufea1\071\ufea1\072\ufea1\073\ufea1" +
    "\111\ufea1\112\ufea1\124\ufea1\133\ufea1\137\ufea1\140\ufea1\141" +
    "\ufea1\001\002\000\044\006\ufea0\056\ufea0\057\ufea0\065\ufea0" +
    "\066\ufea0\067\ufea0\070\ufea0\071\ufea0\072\ufea0\073\ufea0\111" +
    "\ufea0\112\ufea0\124\ufea0\133\ufea0\137\ufea0\140\ufea0\141\ufea0" +
    "\001\002\000\010\120\ufeba\125\ufeba\135\ufeba\001\002\000" +
    "\044\006\ufea4\056\ufea4\057\ufea4\065\ufea4\066\ufea4\067\ufea4" +
    "\070\ufea4\071\ufea4\072\ufea4\073\ufea4\111\ufea4\112\ufea4\124" +
    "\ufea4\133\ufea4\137\ufea4\140\ufea4\141\ufea4\001\002\000\044" +
    "\006\ufeaa\056\ufeaa\057\ufeaa\065\ufeaa\066\ufeaa\067\ufeaa\070" +
    "\ufeaa\071\ufeaa\072\ufeaa\073\ufeaa\111\ufeaa\112\ufeaa\124\ufeaa" +
    "\133\ufeaa\137\ufeaa\140\ufeaa\141\ufeaa\001\002\000\044\006" +
    "\ufeae\056\ufeae\057\ufeae\065\ufeae\066\ufeae\067\ufeae\070\ufeae" +
    "\071\ufeae\072\ufeae\073\ufeae\111\ufeae\112\ufeae\124\ufeae\133" +
    "\ufeae\137\ufeae\140\ufeae\141\ufeae\001\002\000\044\006\u0142" +
    "\056\u0140\057\u0151\065\u014e\066\u0141\067\u0150\070\u014f\071" +
    "\u0152\072\u014d\073\u014a\111\u0146\112\u014b\124\u0145\133\u0147" +
    "\137\u0143\140\u0149\141\u0148\001\002\000\010\120\ufead\125" +
    "\ufead\135\ufead\001\002\000\044\006\u0142\056\u0140\057\u0151" +
    "\065\u014e\066\u0141\067\u0150\070\u014f\071\u0152\072\u014d\073" +
    "\u014a\111\u0146\112\u014b\124\u0145\133\u0147\137\u0143\140\u0149" +
    "\141\u0148\001\002\000\010\120\ufea9\125\ufea9\135\ufea9\001" +
    "\002\000\044\006\u0142\056\u0140\057\u0151\065\u014e\066\u0141" +
    "\067\u0150\070\u014f\071\u0152\072\u014d\073\u014a\111\u0146\112" +
    "\u014b\124\u0145\133\u0147\137\u0143\140\u0149\141\u0148\001\002" +
    "\000\010\120\ufeab\125\ufeab\135\ufeab\001\002\000\044\006" +
    "\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067\u0150\070\u014f" +
    "\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b\124\u0145\133" +
    "\u0147\137\u0143\140\u0149\141\u0148\001\002\000\010\120\ufeaf" +
    "\125\ufeaf\135\ufeaf\001\002\000\044\006\u0142\056\u0140\057" +
    "\u0151\065\u014e\066\u0141\067\u0150\070\u014f\071\u0152\072\u014d" +
    "\073\u014a\111\u0146\112\u014b\124\u0145\133\u0147\137\u0143\140" +
    "\u0149\141\u0148\001\002\000\010\120\ufea7\125\ufea7\135\ufea7" +
    "\001\002\000\034\004\u015d\005\u015f\007\u0164\114\u0163\115" +
    "\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122\u0165\123\u015e" +
    "\125\ufea6\135\ufea6\001\002\000\010\120\ufed0\125\ufed0\135" +
    "\ufed0\001\002\000\012\056\u0140\057\u0156\137\u0143\141\u0157" +
    "\001\002\000\004\125\u0174\001\002\000\034\004\ufebf\005" +
    "\ufebf\007\ufebf\114\ufebf\115\ufebf\116\ufebf\117\ufebf\120\ufebf" +
    "\121\ufebf\122\ufebf\123\ufebf\125\ufebf\135\ufebf\001\002\000" +
    "\034\004\u015d\005\u015f\007\u0164\114\u0163\115\u015b\116\u0160" +
    "\117\u0161\120\ufea6\121\u015c\122\u0165\123\u015e\125\ufea6\135" +
    "\ufea6\001\002\000\010\120\ufebe\125\ufebe\135\ufebe\001\002" +
    "\000\012\056\u0140\057\u0156\137\u0143\141\u0157\001\002\000" +
    "\004\125\u0179\001\002\000\034\004\ufebd\005\ufebd\007\ufebd" +
    "\114\ufebd\115\ufebd\116\ufebd\117\ufebd\120\ufebd\121\ufebd\122" +
    "\ufebd\123\ufebd\125\ufebd\135\ufebd\001\002\000\034\004\u015d" +
    "\005\u015f\007\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120" +
    "\ufea6\121\u015c\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002" +
    "\000\010\120\ufebc\125\ufebc\135\ufebc\001\002\000\012\056" +
    "\u0140\057\u0156\137\u0143\141\u0157\001\002\000\004\125\u017e" +
    "\001\002\000\034\004\ufec3\005\ufec3\007\ufec3\114\ufec3\115" +
    "\ufec3\116\ufec3\117\ufec3\120\ufec3\121\ufec3\122\ufec3\123\ufec3" +
    "\125\ufec3\135\ufec3\001\002\000\034\004\u015d\005\u015f\007" +
    "\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c" +
    "\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120" +
    "\ufec2\125\ufec2\135\ufec2\001\002\000\004\125\u0182\001\002" +
    "\000\034\004\ufeb9\005\ufeb9\007\ufeb9\114\ufeb9\115\ufeb9\116" +
    "\ufeb9\117\ufeb9\120\ufeb9\121\ufeb9\122\ufeb9\123\ufeb9\125\ufeb9" +
    "\135\ufeb9\001\002\000\034\004\u015d\005\u015f\007\u0164\114" +
    "\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122\u0165" +
    "\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120\ufeb8\125" +
    "\ufeb8\135\ufeb8\001\002\000\034\004\u015d\005\u015f\007\u0164" +
    "\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122" +
    "\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120\ufeca" +
    "\125\ufeca\135\ufeca\001\002\000\034\004\u015d\005\u015f\007" +
    "\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c" +
    "\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120" +
    "\ufecc\125\ufecc\135\ufecc\001\002\000\004\125\u018a\001\002" +
    "\000\034\004\ufeb7\005\ufeb7\007\ufeb7\114\ufeb7\115\ufeb7\116" +
    "\ufeb7\117\ufeb7\120\ufeb7\121\ufeb7\122\ufeb7\123\ufeb7\125\ufeb7" +
    "\135\ufeb7\001\002\000\034\004\u015d\005\u015f\007\u0164\114" +
    "\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122\u0165" +
    "\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120\ufeb6\125" +
    "\ufeb6\135\ufeb6\001\002\000\034\004\u015d\005\u015f\007\u0164" +
    "\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122" +
    "\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120\ufec8" +
    "\125\ufec8\135\ufec8\001\002\000\034\004\u015d\005\u015f\007" +
    "\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c" +
    "\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120" +
    "\ufec6\125\ufec6\135\ufec6\001\002\000\004\141\u0192\001\002" +
    "\000\004\125\u0193\001\002\000\034\004\ufec5\005\ufec5\007" +
    "\ufec5\114\ufec5\115\ufec5\116\ufec5\117\ufec5\120\ufec5\121\ufec5" +
    "\122\ufec5\123\ufec5\125\ufec5\135\ufec5\001\002\000\034\004" +
    "\u015d\005\u015f\007\u0164\114\u0163\115\u015b\116\u0160\117\u0161" +
    "\120\ufea6\121\u015c\122\u0165\123\u015e\125\ufea6\135\ufea6\001" +
    "\002\000\010\120\ufec4\125\ufec4\135\ufec4\001\002\000\034" +
    "\004\u015d\005\u015f\007\u0164\114\u0163\115\u015b\116\u0160\117" +
    "\u0161\120\ufea6\121\u015c\122\u0165\123\u015e\125\ufea6\135\ufea6" +
    "\001\002\000\010\120\ufece\125\ufece\135\ufece\001\002\000" +
    "\044\006\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067\u0150" +
    "\070\u014f\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b\124" +
    "\u0145\133\u0147\137\u0143\140\u0149\141\u0148\001\002\000\004" +
    "\125\u019a\001\002\000\034\004\ufeb4\005\ufeb4\007\ufeb4\114" +
    "\ufeb4\115\ufeb4\116\ufeb4\117\ufeb4\120\ufeb4\121\ufeb4\122\ufeb4" +
    "\123\ufeb4\125\ufeb4\135\ufeb4\001\002\000\034\004\u015d\005" +
    "\u015f\007\u0164\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6" +
    "\121\u015c\122\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000" +
    "\010\120\ufeb3\125\ufeb3\135\ufeb3\001\002\000\004\125\u019e" +
    "\001\002\000\004\100\u019f\001\002\000\032\056\uff1c\060" +
    "\uff1e\061\uff1e\062\uff1e\063\uff1e\064\uff1e\074\uff18\075\uff13" +
    "\101\u01a0\107\uff1a\137\uff1c\142\uff15\001\002\000\004\127" +
    "\u0240\001\002\000\004\075\u023c\001\002\000\004\142\u0238" +
    "\001\002\000\004\074\u0232\001\002\000\004\107\u0225\001" +
    "\002\000\006\056\u0140\137\u0143\001\002\000\014\060\u01b7" +
    "\061\u01bd\062\u01bb\063\u01bc\064\u01b8\001\002\000\046\011" +
    "\ufe95\056\ufe95\060\ufe95\061\ufe95\062\ufe95\063\ufe95\064\ufe95" +
    "\074\ufe95\075\ufe95\076\ufe95\103\u01a9\104\u01aa\105\ufe95\107" +
    "\ufe95\110\ufe95\136\ufe95\137\ufe95\142\ufe95\001\002\000\042" +
    "\011\uff34\056\uff34\060\uff34\061\uff34\062\uff34\063\uff34\064" +
    "\uff34\074\uff34\075\uff34\076\uff34\105\uff34\107\uff34\110\uff34" +
    "\136\uff34\137\uff34\142\uff34\001\002\000\004\124\ufe98\001" +
    "\002\000\032\056\ufe9a\060\ufe9a\061\ufe9a\062\ufe9a\063\ufe9a" +
    "\064\ufe9a\074\ufe9a\075\ufe9a\101\ufe9a\107\ufe9a\137\ufe9a\142" +
    "\ufe9a\001\002\000\032\056\uff1c\060\uff1e\061\uff1e\062\uff1e" +
    "\063\uff1e\064\uff1e\074\uff18\075\uff13\101\u01a0\107\uff1a\137" +
    "\uff1c\142\uff15\001\002\000\042\011\ufe99\056\ufe99\060\ufe99" +
    "\061\ufe99\062\ufe99\063\ufe99\064\ufe99\074\ufe99\075\ufe99\076" +
    "\ufe99\105\ufe99\107\ufe99\110\ufe99\136\ufe99\137\ufe99\142\ufe99" +
    "\001\002\000\004\124\u01ae\001\002\000\044\006\u0142\056" +
    "\u0140\057\u0151\065\u014e\066\u0141\067\u0150\070\u014f\071\u0152" +
    "\072\u014d\073\u014a\111\u0146\112\u014b\124\u0145\133\u0147\137" +
    "\u0143\140\u0149\141\u0148\001\002\000\004\125\ufe97\001\002" +
    "\000\004\125\u01b1\001\002\000\004\100\u01b2\001\002\000" +
    "\032\056\uff1c\060\uff1e\061\uff1e\062\uff1e\063\uff1e\064\uff1e" +
    "\074\uff18\075\uff13\101\u01a0\107\uff1a\137\uff1c\142\uff15\001" +
    "\002\000\046\011\ufe95\056\ufe95\060\ufe95\061\ufe95\062\ufe95" +
    "\063\ufe95\064\ufe95\074\ufe95\075\ufe95\076\ufe95\103\u01a9\104" +
    "\u01aa\105\ufe95\107\ufe95\110\ufe95\136\ufe95\137\ufe95\142\ufe95" +
    "\001\002\000\042\011\ufe96\056\ufe96\060\ufe96\061\ufe96\062" +
    "\ufe96\063\ufe96\064\ufe96\074\ufe96\075\ufe96\076\ufe96\105\ufe96" +
    "\107\ufe96\110\ufe96\136\ufe96\137\ufe96\142\ufe96\001\002\000" +
    "\042\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a" +
    "\064\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110" +
    "\uff2d\136\uff20\137\uff38\142\uff24\001\002\000\006\011\uff33" +
    "\136\uff33\001\002\000\010\056\uff0f\113\uff0f\137\uff0f\001" +
    "\002\000\010\056\uff0e\113\uff0e\137\uff0e\001\002\000\010" +
    "\056\uff07\113\u01be\137\uff07\001\002\000\046\011\uff1d\056" +
    "\uff1d\060\uff1d\061\uff1d\062\uff1d\063\uff1d\064\uff1d\074\uff1d" +
    "\075\uff1d\076\uff1d\103\uff1d\104\uff1d\105\uff1d\107\uff1d\110" +
    "\uff1d\136\uff1d\137\uff1d\142\uff1d\001\002\000\010\056\uff0c" +
    "\113\uff0c\137\uff0c\001\002\000\010\056\uff0b\113\uff0b\137" +
    "\uff0b\001\002\000\010\056\uff0d\113\uff0d\137\uff0d\001\002" +
    "\000\006\056\uff08\137\uff08\001\002\000\006\056\u0140\137" +
    "\u0143\001\002\000\010\012\uff11\126\uff11\134\uff11\001\002" +
    "\000\010\012\u01c4\126\u01c3\134\u01c2\001\002\000\006\056" +
    "\u0140\137\u0143\001\002\000\046\011\uff06\056\uff06\060\uff06" +
    "\061\uff06\062\uff06\063\uff06\064\uff06\074\uff06\075\uff06\076" +
    "\uff06\103\uff06\104\uff06\105\uff06\107\uff06\110\uff06\136\uff06" +
    "\137\uff06\142\uff06\001\002\000\042\056\u0140\057\u01d4\065" +
    "\u01d1\066\u01c6\067\u01d3\070\u01d2\071\u01d5\072\u01d0\073\u01cd" +
    "\111\u01c8\112\u01ce\124\u01c7\133\u01c9\137\u0143\140\u01cb\141" +
    "\u01ca\001\002\000\046\011\uff10\056\uff10\060\uff10\061\uff10" +
    "\062\uff10\063\uff10\064\uff10\074\uff10\075\uff10\076\uff10\103" +
    "\uff10\104\uff10\105\uff10\107\uff10\110\uff10\136\uff10\137\uff10" +
    "\142\uff10\001\002\000\004\124\u0218\001\002\000\042\056" +
    "\ufee4\057\ufee4\065\ufee4\066\ufee4\067\ufee4\070\ufee4\071\ufee4" +
    "\072\ufee4\073\ufee4\111\ufee4\112\ufee4\124\ufee4\133\ufee4\137" +
    "\ufee4\140\ufee4\141\ufee4\001\002\000\032\004\ufefe\005\ufefe" +
    "\007\ufefe\114\ufefe\115\ufefe\116\ufefe\117\ufefe\121\ufefe\122" +
    "\ufefe\123\ufefe\125\ufefe\126\ufefe\001\002\000\004\124\u020f" +
    "\001\002\000\032\004\ufef6\005\ufef6\007\ufef6\114\ufef6\115" +
    "\ufef6\116\ufef6\117\ufef6\121\ufef6\122\ufef6\123\ufef6\125\ufef6" +
    "\126\ufef6\001\002\000\032\004\ufef8\005\ufef8\007\ufef8\114" +
    "\ufef8\115\ufef8\116\ufef8\117\ufef8\121\ufef8\122\ufef8\123\ufef8" +
    "\125\ufef8\126\ufef8\001\002\000\046\011\uff03\056\uff03\060" +
    "\uff03\061\uff03\062\uff03\063\uff03\064\uff03\074\uff03\075\uff03" +
    "\076\uff03\103\uff03\104\uff03\105\uff03\107\uff03\110\uff03\136" +
    "\uff03\137\uff03\142\uff03\001\002\000\004\124\u0207\001\002" +
    "\000\032\004\ufefc\005\ufefc\007\ufefc\114\ufefc\115\ufefc\116" +
    "\ufefc\117\ufefc\121\ufefc\122\ufefc\123\ufefc\125\ufefc\126\ufefc" +
    "\001\002\000\032\004\ufefa\005\ufefa\007\ufefa\114\ufefa\115" +
    "\ufefa\116\ufefa\117\ufefa\121\ufefa\122\ufefa\123\ufefa\125\ufefa" +
    "\126\ufefa\001\002\000\004\124\u01ff\001\002\000\004\124" +
    "\u01fa\001\002\000\004\124\u01f5\001\002\000\004\124\u01f0" +
    "\001\002\000\032\004\uff00\005\uff00\007\uff00\114\uff00\115" +
    "\uff00\116\uff00\117\uff00\121\uff00\122\uff00\123\uff00\125\uff00" +
    "\126\uff00\001\002\000\004\124\u01d6\001\002\000\012\056" +
    "\u0140\057\u0156\137\u0143\141\u0157\001\002\000\004\125\u01d8" +
    "\001\002\000\032\004\ufeea\005\ufeea\007\ufeea\114\ufeea\115" +
    "\ufeea\116\ufeea\117\ufeea\121\ufeea\122\ufeea\123\ufeea\125\ufeea" +
    "\126\ufeea\001\002\000\032\004\u015d\005\u015f\007\u01df\114" +
    "\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc" +
    "\125\u01de\126\u01dd\001\002\000\042\056\ufed5\057\ufed5\065" +
    "\ufed5\066\ufed5\067\ufed5\070\ufed5\071\ufed5\072\ufed5\073\ufed5" +
    "\111\ufed5\112\ufed5\124\ufed5\133\ufed5\137\ufed5\140\ufed5\141" +
    "\ufed5\001\002\000\042\056\ufedf\057\ufedf\065\ufedf\066\ufedf" +
    "\067\ufedf\070\ufedf\071\ufedf\072\ufedf\073\ufedf\111\ufedf\112" +
    "\ufedf\124\ufedf\133\ufedf\137\ufedf\140\ufedf\141\ufedf\001\002" +
    "\000\042\056\ufedb\057\ufedb\065\ufedb\066\ufedb\067\ufedb\070" +
    "\ufedb\071\ufedb\072\ufedb\073\ufedb\111\ufedb\112\ufedb\124\ufedb" +
    "\133\ufedb\137\ufedb\140\ufedb\141\ufedb\001\002\000\046\011" +
    "\ufed3\056\ufed3\060\ufed3\061\ufed3\062\ufed3\063\ufed3\064\ufed3" +
    "\074\ufed3\075\ufed3\076\ufed3\103\ufed3\104\ufed3\105\ufed3\107" +
    "\ufed3\110\ufed3\136\ufed3\137\ufed3\142\ufed3\001\002\000\032" +
    "\004\ufed7\005\ufed7\007\ufed7\114\ufed7\115\ufed7\116\ufed7\117" +
    "\ufed7\121\ufed7\122\ufed7\123\ufed7\125\ufed7\126\ufed7\001\002" +
    "\000\042\056\ufed9\057\ufed9\065\ufed9\066\ufed9\067\ufed9\070" +
    "\ufed9\071\ufed9\072\ufed9\073\ufed9\111\ufed9\112\ufed9\124\ufed9" +
    "\133\ufed9\137\ufed9\140\ufed9\141\ufed9\001\002\000\046\011" +
    "\ufee9\056\ufee9\060\ufee9\061\ufee9\062\ufee9\063\ufee9\064\ufee9" +
    "\074\ufee9\075\ufee9\076\ufee9\103\ufee9\104\ufee9\105\ufee9\107" +
    "\ufee9\110\ufee9\136\ufee9\137\ufee9\142\ufee9\001\002\000\042" +
    "\056\ufedd\057\ufedd\065\ufedd\066\ufedd\067\ufedd\070\ufedd\071" +
    "\ufedd\072\ufedd\073\ufedd\111\ufedd\112\ufedd\124\ufedd\133\ufedd" +
    "\137\ufedd\140\ufedd\141\ufedd\001\002\000\042\056\u0140\057" +
    "\u01d4\065\u01d1\066\u01c6\067\u01d3\070\u01d2\071\u01d5\072\u01d0" +
    "\073\u01cd\111\u01c8\112\u01ce\124\u01c7\133\u01c9\137\u0143\140" +
    "\u01cb\141\u01ca\001\002\000\046\011\ufedc\056\ufedc\060\ufedc" +
    "\061\ufedc\062\ufedc\063\ufedc\064\ufedc\074\ufedc\075\ufedc\076" +
    "\ufedc\103\ufedc\104\ufedc\105\ufedc\107\ufedc\110\ufedc\136\ufedc" +
    "\137\ufedc\142\ufedc\001\002\000\042\056\u0140\057\u01d4\065" +
    "\u01d1\066\u01c6\067\u01d3\070\u01d2\071\u01d5\072\u01d0\073\u01cd" +
    "\111\u01c8\112\u01ce\124\u01c7\133\u01c9\137\u0143\140\u01cb\141" +
    "\u01ca\001\002\000\046\011\ufed8\056\ufed8\060\ufed8\061\ufed8" +
    "\062\ufed8\063\ufed8\064\ufed8\074\ufed8\075\ufed8\076\ufed8\103" +
    "\ufed8\104\ufed8\105\ufed8\107\ufed8\110\ufed8\136\ufed8\137\ufed8" +
    "\142\ufed8\001\002\000\032\004\u015d\005\u015f\007\u01df\114" +
    "\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc" +
    "\125\u01de\126\u01dd\001\002\000\046\011\ufed6\056\ufed6\060" +
    "\ufed6\061\ufed6\062\ufed6\063\ufed6\064\ufed6\074\ufed6\075\ufed6" +
    "\076\ufed6\103\ufed6\104\ufed6\105\ufed6\107\ufed6\110\ufed6\136" +
    "\ufed6\137\ufed6\142\ufed6\001\002\000\042\056\u0140\057\u01d4" +
    "\065\u01d1\066\u01c6\067\u01d3\070\u01d2\071\u01d5\072\u01d0\073" +
    "\u01cd\111\u01c8\112\u01ce\124\u01c7\133\u01c9\137\u0143\140\u01cb" +
    "\141\u01ca\001\002\000\046\011\ufeda\056\ufeda\060\ufeda\061" +
    "\ufeda\062\ufeda\063\ufeda\064\ufeda\074\ufeda\075\ufeda\076\ufeda" +
    "\103\ufeda\104\ufeda\105\ufeda\107\ufeda\110\ufeda\136\ufeda\137" +
    "\ufeda\142\ufeda\001\002\000\042\056\u0140\057\u01d4\065\u01d1" +
    "\066\u01c6\067\u01d3\070\u01d2\071\u01d5\072\u01d0\073\u01cd\111" +
    "\u01c8\112\u01ce\124\u01c7\133\u01c9\137\u0143\140\u01cb\141\u01ca" +
    "\001\002\000\046\011\ufede\056\ufede\060\ufede\061\ufede\062" +
    "\ufede\063\ufede\064\ufede\074\ufede\075\ufede\076\ufede\103\ufede" +
    "\104\ufede\105\ufede\107\ufede\110\ufede\136\ufede\137\ufede\142" +
    "\ufede\001\002\000\042\056\u0140\057\u01d4\065\u01d1\066\u01c6" +
    "\067\u01d3\070\u01d2\071\u01d5\072\u01d0\073\u01cd\111\u01c8\112" +
    "\u01ce\124\u01c7\133\u01c9\137\u0143\140\u01cb\141\u01ca\001\002" +
    "\000\046\011\ufed4\056\ufed4\060\ufed4\061\ufed4\062\ufed4\063" +
    "\ufed4\064\ufed4\074\ufed4\075\ufed4\076\ufed4\103\ufed4\104\ufed4" +
    "\105\ufed4\107\ufed4\110\ufed4\136\ufed4\137\ufed4\142\ufed4\001" +
    "\002\000\032\004\u015d\005\u015f\007\u01df\114\u0163\115\u015b" +
    "\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc\125\u01de\126" +
    "\u01dd\001\002\000\046\011\ufeff\056\ufeff\060\ufeff\061\ufeff" +
    "\062\ufeff\063\ufeff\064\ufeff\074\ufeff\075\ufeff\076\ufeff\103" +
    "\ufeff\104\ufeff\105\ufeff\107\ufeff\110\ufeff\136\ufeff\137\ufeff" +
    "\142\ufeff\001\002\000\012\056\u0140\057\u0156\137\u0143\141" +
    "\u0157\001\002\000\004\125\u01f2\001\002\000\032\004\ufeee" +
    "\005\ufeee\007\ufeee\114\ufeee\115\ufeee\116\ufeee\117\ufeee\121" +
    "\ufeee\122\ufeee\123\ufeee\125\ufeee\126\ufeee\001\002\000\032" +
    "\004\u015d\005\u015f\007\u01df\114\u0163\115\u015b\116\u0160\117" +
    "\u0161\121\u01db\122\u01e1\123\u01dc\125\u01de\126\u01dd\001\002" +
    "\000\046\011\ufeed\056\ufeed\060\ufeed\061\ufeed\062\ufeed\063" +
    "\ufeed\064\ufeed\074\ufeed\075\ufeed\076\ufeed\103\ufeed\104\ufeed" +
    "\105\ufeed\107\ufeed\110\ufeed\136\ufeed\137\ufeed\142\ufeed\001" +
    "\002\000\012\056\u0140\057\u0156\137\u0143\141\u0157\001\002" +
    "\000\004\125\u01f7\001\002\000\032\004\ufeec\005\ufeec\007" +
    "\ufeec\114\ufeec\115\ufeec\116\ufeec\117\ufeec\121\ufeec\122\ufeec" +
    "\123\ufeec\125\ufeec\126\ufeec\001\002\000\032\004\u015d\005" +
    "\u015f\007\u01df\114\u0163\115\u015b\116\u0160\117\u0161\121\u01db" +
    "\122\u01e1\123\u01dc\125\u01de\126\u01dd\001\002\000\046\011" +
    "\ufeeb\056\ufeeb\060\ufeeb\061\ufeeb\062\ufeeb\063\ufeeb\064\ufeeb" +
    "\074\ufeeb\075\ufeeb\076\ufeeb\103\ufeeb\104\ufeeb\105\ufeeb\107" +
    "\ufeeb\110\ufeeb\136\ufeeb\137\ufeeb\142\ufeeb\001\002\000\012" +
    "\056\u0140\057\u0156\137\u0143\141\u0157\001\002\000\004\125" +
    "\u01fc\001\002\000\032\004\ufef2\005\ufef2\007\ufef2\114\ufef2" +
    "\115\ufef2\116\ufef2\117\ufef2\121\ufef2\122\ufef2\123\ufef2\125" +
    "\ufef2\126\ufef2\001\002\000\032\004\u015d\005\u015f\007\u01df" +
    "\114\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123" +
    "\u01dc\125\u01de\126\u01dd\001\002\000\046\011\ufef1\056\ufef1" +
    "\060\ufef1\061\ufef1\062\ufef1\063\ufef1\064\ufef1\074\ufef1\075" +
    "\ufef1\076\ufef1\103\ufef1\104\ufef1\105\ufef1\107\ufef1\110\ufef1" +
    "\136\ufef1\137\ufef1\142\ufef1\001\002\000\004\125\u0200\001" +
    "\002\000\032\004\ufee8\005\ufee8\007\ufee8\114\ufee8\115\ufee8" +
    "\116\ufee8\117\ufee8\121\ufee8\122\ufee8\123\ufee8\125\ufee8\126" +
    "\ufee8\001\002\000\032\004\u015d\005\u015f\007\u01df\114\u0163" +
    "\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc\125" +
    "\u01de\126\u01dd\001\002\000\046\011\ufee7\056\ufee7\060\ufee7" +
    "\061\ufee7\062\ufee7\063\ufee7\064\ufee7\074\ufee7\075\ufee7\076" +
    "\ufee7\103\ufee7\104\ufee7\105\ufee7\107\ufee7\110\ufee7\136\ufee7" +
    "\137\ufee7\142\ufee7\001\002\000\032\004\u015d\005\u015f\007" +
    "\u01df\114\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1" +
    "\123\u01dc\125\u01de\126\u01dd\001\002\000\046\011\ufef9\056" +
    "\ufef9\060\ufef9\061\ufef9\062\ufef9\063\ufef9\064\ufef9\074\ufef9" +
    "\075\ufef9\076\ufef9\103\ufef9\104\ufef9\105\ufef9\107\ufef9\110" +
    "\ufef9\136\ufef9\137\ufef9\142\ufef9\001\002\000\032\004\u015d" +
    "\005\u015f\007\u01df\114\u0163\115\u015b\116\u0160\117\u0161\121" +
    "\u01db\122\u01e1\123\u01dc\125\u01de\126\u01dd\001\002\000\046" +
    "\011\ufefb\056\ufefb\060\ufefb\061\ufefb\062\ufefb\063\ufefb\064" +
    "\ufefb\074\ufefb\075\ufefb\076\ufefb\103\ufefb\104\ufefb\105\ufefb" +
    "\107\ufefb\110\ufefb\136\ufefb\137\ufefb\142\ufefb\001\002\000" +
    "\004\125\u0208\001\002\000\032\004\ufee6\005\ufee6\007\ufee6" +
    "\114\ufee6\115\ufee6\116\ufee6\117\ufee6\121\ufee6\122\ufee6\123" +
    "\ufee6\125\ufee6\126\ufee6\001\002\000\032\004\u015d\005\u015f" +
    "\007\u01df\114\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122" +
    "\u01e1\123\u01dc\125\u01de\126\u01dd\001\002\000\046\011\ufee5" +
    "\056\ufee5\060\ufee5\061\ufee5\062\ufee5\063\ufee5\064\ufee5\074" +
    "\ufee5\075\ufee5\076\ufee5\103\ufee5\104\ufee5\105\ufee5\107\ufee5" +
    "\110\ufee5\136\ufee5\137\ufee5\142\ufee5\001\002\000\032\004" +
    "\u015d\005\u015f\007\u01df\114\u0163\115\u015b\116\u0160\117\u0161" +
    "\121\u01db\122\u01e1\123\u01dc\125\u01de\126\u01dd\001\002\000" +
    "\046\011\ufef7\056\ufef7\060\ufef7\061\ufef7\062\ufef7\063\ufef7" +
    "\064\ufef7\074\ufef7\075\ufef7\076\ufef7\103\ufef7\104\ufef7\105" +
    "\ufef7\107\ufef7\110\ufef7\136\ufef7\137\ufef7\142\ufef7\001\002" +
    "\000\032\004\u015d\005\u015f\007\u01df\114\u0163\115\u015b\116" +
    "\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc\125\u01de\126\u01dd" +
    "\001\002\000\046\011\ufef5\056\ufef5\060\ufef5\061\ufef5\062" +
    "\ufef5\063\ufef5\064\ufef5\074\ufef5\075\ufef5\076\ufef5\103\ufef5" +
    "\104\ufef5\105\ufef5\107\ufef5\110\ufef5\136\ufef5\137\ufef5\142" +
    "\ufef5\001\002\000\004\141\u0210\001\002\000\004\125\u0211" +
    "\001\002\000\032\004\ufef4\005\ufef4\007\ufef4\114\ufef4\115" +
    "\ufef4\116\ufef4\117\ufef4\121\ufef4\122\ufef4\123\ufef4\125\ufef4" +
    "\126\ufef4\001\002\000\032\004\u015d\005\u015f\007\u01df\114" +
    "\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc" +
    "\125\u01de\126\u01dd\001\002\000\046\011\ufef3\056\ufef3\060" +
    "\ufef3\061\ufef3\062\ufef3\063\ufef3\064\ufef3\074\ufef3\075\ufef3" +
    "\076\ufef3\103\ufef3\104\ufef3\105\ufef3\107\ufef3\110\ufef3\136" +
    "\ufef3\137\ufef3\142\ufef3\001\002\000\032\004\u015d\005\u015f" +
    "\007\u01df\114\u0163\115\u015b\116\u0160\117\u0161\121\u01db\122" +
    "\u01e1\123\u01dc\125\u01de\126\u01dd\001\002\000\046\011\ufefd" +
    "\056\ufefd\060\ufefd\061\ufefd\062\ufefd\063\ufefd\064\ufefd\074" +
    "\ufefd\075\ufefd\076\ufefd\103\ufefd\104\ufefd\105\ufefd\107\ufefd" +
    "\110\ufefd\136\ufefd\137\ufefd\142\ufefd\001\002\000\042\056" +
    "\u0140\057\u01d4\065\u01d1\066\u01c6\067\u01d3\070\u01d2\071\u01d5" +
    "\072\u01d0\073\u01cd\111\u01c8\112\u01ce\124\u01c7\133\u01c9\137" +
    "\u0143\140\u01cb\141\u01ca\001\002\000\046\011\ufee3\056\ufee3" +
    "\060\ufee3\061\ufee3\062\ufee3\063\ufee3\064\ufee3\074\ufee3\075" +
    "\ufee3\076\ufee3\103\ufee3\104\ufee3\105\ufee3\107\ufee3\110\ufee3" +
    "\136\ufee3\137\ufee3\142\ufee3\001\002\000\012\056\u0140\057" +
    "\u0156\137\u0143\141\u0157\001\002\000\004\125\u021a\001\002" +
    "\000\032\004\ufef0\005\ufef0\007\ufef0\114\ufef0\115\ufef0\116" +
    "\ufef0\117\ufef0\121\ufef0\122\ufef0\123\ufef0\125\ufef0\126\ufef0" +
    "\001\002\000\032\004\u015d\005\u015f\007\u01df\114\u0163\115" +
    "\u015b\116\u0160\117\u0161\121\u01db\122\u01e1\123\u01dc\125\u01de" +
    "\126\u01dd\001\002\000\046\011\ufeef\056\ufeef\060\ufeef\061" +
    "\ufeef\062\ufeef\063\ufeef\064\ufeef\074\ufeef\075\ufeef\076\ufeef" +
    "\103\ufeef\104\ufeef\105\ufeef\107\ufeef\110\ufeef\136\ufeef\137" +
    "\ufeef\142\ufeef\001\002\000\010\012\uff05\126\uff05\134\uff05" +
    "\001\002\000\010\012\u01c4\126\u01c3\134\u01c2\001\002\000" +
    "\046\011\uff04\056\uff04\060\uff04\061\uff04\062\uff04\063\uff04" +
    "\064\uff04\074\uff04\075\uff04\076\uff04\103\uff04\104\uff04\105" +
    "\uff04\107\uff04\110\uff04\136\uff04\137\uff04\142\uff04\001\002" +
    "\000\004\012\uff02\001\002\000\046\011\uff1b\056\uff1b\060" +
    "\uff1b\061\uff1b\062\uff1b\063\uff1b\064\uff1b\074\uff1b\075\uff1b" +
    "\076\uff1b\103\uff1b\104\uff1b\105\uff1b\107\uff1b\110\uff1b\136" +
    "\uff1b\137\uff1b\142\uff1b\001\002\000\004\012\u0223\001\002" +
    "\000\042\056\u0140\057\u01d4\065\u01d1\066\u01c6\067\u01d3\070" +
    "\u01d2\071\u01d5\072\u01d0\073\u01cd\111\u01c8\112\u01ce\124\u01c7" +
    "\133\u01c9\137\u0143\140\u01cb\141\u01ca\001\002\000\046\011" +
    "\uff01\056\uff01\060\uff01\061\uff01\062\uff01\063\uff01\064\uff01" +
    "\074\uff01\075\uff01\076\uff01\103\uff01\104\uff01\105\uff01\107" +
    "\uff01\110\uff01\136\uff01\137\uff01\142\uff01\001\002\000\004" +
    "\124\u0226\001\002\000\010\056\u0140\137\u0143\141\u0229\001" +
    "\002\000\006\125\ufe80\134\ufe80\001\002\000\004\125\u022e" +
    "\001\002\000\006\125\ufe7e\134\ufe7e\001\002\000\006\125" +
    "\ufe7b\134\u022c\001\002\000\004\125\ufe7d\001\002\000\010" +
    "\056\u0140\137\u0143\141\u0229\001\002\000\004\125\ufe7c\001" +
    "\002\000\004\126\u022f\001\002\000\046\011\uff19\056\uff19" +
    "\060\uff19\061\uff19\062\uff19\063\uff19\064\uff19\074\uff19\075" +
    "\uff19\076\uff19\103\uff19\104\uff19\105\uff19\107\uff19\110\uff19" +
    "\136\uff19\137\uff19\142\uff19\001\002\000\006\125\ufe7b\134" +
    "\u022c\001\002\000\004\125\ufe7f\001\002\000\004\124\u0233" +
    "\001\002\000\012\056\u0140\057\u0156\137\u0143\141\u0157\001" +
    "\002\000\004\125\uff17\001\002\000\004\125\u0236\001\002" +
    "\000\004\126\u0237\001\002\000\046\011\uff16\056\uff16\060" +
    "\uff16\061\uff16\062\uff16\063\uff16\064\uff16\074\uff16\075\uff16" +
    "\076\uff16\103\uff16\104\uff16\105\uff16\107\uff16\110\uff16\136" +
    "\uff16\137\uff16\142\uff16\001\002\000\004\124\u0239\001\002" +
    "\000\004\125\u023a\001\002\000\004\126\u023b\001\002\000" +
    "\046\011\uff14\056\uff14\060\uff14\061\uff14\062\uff14\063\uff14" +
    "\064\uff14\074\uff14\075\uff14\076\uff14\103\uff14\104\uff14\105" +
    "\uff14\107\uff14\110\uff14\136\uff14\137\uff14\142\uff14\001\002" +
    "\000\004\124\u023d\001\002\000\004\125\u023e\001\002\000" +
    "\004\126\u023f\001\002\000\046\011\uff12\056\uff12\060\uff12" +
    "\061\uff12\062\uff12\063\uff12\064\uff12\074\uff12\075\uff12\076" +
    "\uff12\103\uff12\104\uff12\105\uff12\107\uff12\110\uff12\136\uff12" +
    "\137\uff12\142\uff12\001\002\000\004\136\u0241\001\002\000" +
    "\040\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064\uff3a" +
    "\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d\136" +
    "\uff20\137\uff38\142\uff24\001\002\000\004\136\u0243\001\002" +
    "\000\004\130\u0244\001\002\000\004\102\u0245\001\002\000" +
    "\046\011\uff1f\056\uff1f\060\uff1f\061\uff1f\062\uff1f\063\uff1f" +
    "\064\uff1f\074\uff1f\075\uff1f\076\uff1f\103\uff1f\104\uff1f\105" +
    "\uff1f\107\uff1f\110\uff1f\136\uff1f\137\uff1f\142\uff1f\001\002" +
    "\000\044\006\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067" +
    "\u0150\070\u014f\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b" +
    "\124\u0145\133\u0147\137\u0143\140\u0149\141\u0148\001\002\000" +
    "\010\120\ufeb1\125\ufeb1\135\ufeb1\001\002\000\012\056\u0140" +
    "\057\u0156\137\u0143\141\u0157\001\002\000\004\125\u024a\001" +
    "\002\000\034\004\ufec1\005\ufec1\007\ufec1\114\ufec1\115\ufec1" +
    "\116\ufec1\117\ufec1\120\ufec1\121\ufec1\122\ufec1\123\ufec1\125" +
    "\ufec1\135\ufec1\001\002\000\034\004\u015d\005\u015f\007\u0164" +
    "\114\u0163\115\u015b\116\u0160\117\u0161\120\ufea6\121\u015c\122" +
    "\u0165\123\u015e\125\ufea6\135\ufea6\001\002\000\010\120\ufec0" +
    "\125\ufec0\135\ufec0\001\002\000\004\125\ufed2\001\002\000" +
    "\044\006\ufe9d\056\ufe9d\057\ufe9d\065\ufe9d\066\ufe9d\067\ufe9d" +
    "\070\ufe9d\071\ufe9d\072\ufe9d\073\ufe9d\111\ufe9d\112\ufe9d\124" +
    "\ufe9d\133\ufe9d\137\ufe9d\140\ufe9d\141\ufe9d\001\002\000\044" +
    "\006\ufe9f\056\ufe9f\057\ufe9f\065\ufe9f\066\ufe9f\067\ufe9f\070" +
    "\ufe9f\071\ufe9f\072\ufe9f\073\ufe9f\111\ufe9f\112\ufe9f\124\ufe9f" +
    "\133\ufe9f\137\ufe9f\140\ufe9f\141\ufe9f\001\002\000\044\006" +
    "\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067\u0150\070\u014f" +
    "\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b\124\u0145\133" +
    "\u0147\137\u0143\140\u0149\141\u0148\001\002\000\004\125\ufe9e" +
    "\001\002\000\044\006\u0142\056\u0140\057\u0151\065\u014e\066" +
    "\u0141\067\u0150\070\u014f\071\u0152\072\u014d\073\u014a\111\u0146" +
    "\112\u014b\124\u0145\133\u0147\137\u0143\140\u0149\141\u0148\001" +
    "\002\000\004\125\ufe9c\001\002\000\004\124\u0255\001\002" +
    "\000\010\056\u0140\137\u0143\141\u0229\001\002\000\004\125" +
    "\u0257\001\002\000\004\126\u0258\001\002\000\042\011\uff20" +
    "\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064\uff3a\074" +
    "\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d\136\uff20" +
    "\137\uff38\142\uff24\001\002\000\006\011\uff28\136\uff28\001" +
    "\002\000\004\124\u025b\001\002\000\012\056\u0140\057\u0156" +
    "\137\u0143\141\u0157\001\002\000\004\125\uff26\001\002\000" +
    "\004\125\u025e\001\002\000\004\126\u025f\001\002\000\042" +
    "\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064" +
    "\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d" +
    "\136\uff20\137\uff38\142\uff24\001\002\000\006\011\uff25\136" +
    "\uff25\001\002\000\004\124\u0262\001\002\000\020\056\ufe92" +
    "\060\ufe94\061\ufe94\062\ufe94\063\ufe94\064\ufe94\137\ufe92\001" +
    "\002\000\004\125\uff31\001\002\000\006\056\u0140\137\u0143" +
    "\001\002\000\014\060\u01b7\061\u01bd\062\u01bb\063\u01bc\064" +
    "\u01b8\001\002\000\004\125\ufe93\001\002\000\010\056\uff07" +
    "\113\u01be\137\uff07\001\002\000\006\056\u0140\137\u0143\001" +
    "\002\000\004\012\ufe7a\001\002\000\004\012\u026b\001\002" +
    "\000\044\006\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067" +
    "\u0150\070\u014f\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b" +
    "\124\u0145\133\u0147\137\u0143\140\u0149\141\u0148\001\002\000" +
    "\004\125\ufe79\001\002\000\004\012\ufe78\001\002\000\004" +
    "\125\ufe91\001\002\000\004\012\u0270\001\002\000\044\006" +
    "\u0142\056\u0140\057\u0151\065\u014e\066\u0141\067\u0150\070\u014f" +
    "\071\u0152\072\u014d\073\u014a\111\u0146\112\u014b\124\u0145\133" +
    "\u0147\137\u0143\140\u0149\141\u0148\001\002\000\004\125\ufe77" +
    "\001\002\000\004\125\u0273\001\002\000\004\106\u0274\001" +
    "\002\000\004\124\u0275\001\002\000\012\056\uff30\124\uff30" +
    "\137\uff30\140\uff30\001\002\000\012\056\u0140\124\u027a\137" +
    "\u0143\140\u0277\001\002\000\014\007\ufe8e\121\ufe8e\122\ufe8e" +
    "\123\ufe8e\125\ufe8e\001\002\000\014\007\ufe90\121\ufe90\122" +
    "\ufe90\123\ufe90\125\ufe90\001\002\000\004\125\u028c\001\002" +
    "\000\012\056\ufe8c\124\ufe8c\137\ufe8c\140\ufe8c\001\002\000" +
    "\012\056\u0140\124\u027a\137\u0143\140\u0277\001\002\000\004" +
    "\125\u027d\001\002\000\014\007\ufe8b\121\ufe8b\122\ufe8b\123" +
    "\ufe8b\125\ufe8b\001\002\000\014\007\u0281\121\u0282\122\u027f" +
    "\123\u0280\125\ufe81\001\002\000\012\056\ufe87\124\ufe87\137" +
    "\ufe87\140\ufe87\001\002\000\012\056\ufe85\124\ufe85\137\ufe85" +
    "\140\ufe85\001\002\000\012\056\ufe83\124\ufe83\137\ufe83\140" +
    "\ufe83\001\002\000\012\056\ufe89\124\ufe89\137\ufe89\140\ufe89" +
    "\001\002\000\004\125\ufe8a\001\002\000\012\056\u0140\124" +
    "\u027a\137\u0143\140\u0277\001\002\000\004\125\ufe88\001\002" +
    "\000\012\056\u0140\124\u027a\137\u0143\140\u0277\001\002\000" +
    "\004\125\ufe82\001\002\000\012\056\u0140\124\u027a\137\u0143" +
    "\140\u0277\001\002\000\004\125\ufe84\001\002\000\012\056" +
    "\u0140\124\u027a\137\u0143\140\u0277\001\002\000\004\125\ufe86" +
    "\001\002\000\032\056\uff1c\060\uff1e\061\uff1e\062\uff1e\063" +
    "\uff1e\064\uff1e\074\uff18\075\uff13\101\u01a0\107\uff1a\137\uff1c" +
    "\142\uff15\001\002\000\042\011\uff2f\056\uff2f\060\uff2f\061" +
    "\uff2f\062\uff2f\063\uff2f\064\uff2f\074\uff2f\075\uff2f\076\uff2f" +
    "\105\uff2f\107\uff2f\110\uff2f\136\uff2f\137\uff2f\142\uff2f\001" +
    "\002\000\042\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a" +
    "\063\uff3a\064\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107" +
    "\uff29\110\uff2d\136\uff20\137\uff38\142\uff24\001\002\000\006" +
    "\011\uff2e\136\uff2e\001\002\000\014\007\u0281\121\u0282\122" +
    "\u027f\123\u0280\125\ufe81\001\002\000\004\125\ufe8f\001\002" +
    "\000\014\007\u0281\121\u0282\122\u027f\123\u0280\125\ufe81\001" +
    "\002\000\004\125\ufe8d\001\002\000\004\124\u0295\001\002" +
    "\000\004\125\u0296\001\002\000\004\126\u0297\001\002\000" +
    "\042\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a" +
    "\064\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110" +
    "\uff2d\136\uff20\137\uff38\142\uff24\001\002\000\006\011\uff23" +
    "\136\uff23\001\002\000\004\124\u029a\001\002\000\004\125" +
    "\u029b\001\002\000\004\126\u029c\001\002\000\006\011\uff21" +
    "\136\uff21\001\002\000\010\005\uff98\131\u012d\132\u012e\001" +
    "\002\000\004\005\uff9b\001\002\000\042\011\uff20\056\uff38" +
    "\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064\uff3a\074\uff27\075" +
    "\uff22\076\uff36\105\uff32\107\uff29\110\uff2d\136\uff20\137\uff38" +
    "\142\uff24\001\002\000\006\011\uff39\136\uff39\001\002\000" +
    "\004\124\u02a2\001\002\000\044\006\u0142\056\u0140\057\u0151" +
    "\065\u014e\066\u0141\067\u0150\070\u014f\071\u0152\072\u014d\073" +
    "\u014a\111\u0146\112\u014b\124\u0145\133\u0147\137\u0143\140\u0149" +
    "\141\u0148\001\002\000\004\125\uff2c\001\002\000\004\125" +
    "\u02a5\001\002\000\004\077\u02a6\001\002\000\032\056\uff1c" +
    "\060\uff1e\061\uff1e\062\uff1e\063\uff1e\064\uff1e\074\uff18\075" +
    "\uff13\101\u01a0\107\uff1a\137\uff1c\142\uff15\001\002\000\042" +
    "\011\uff2b\056\uff2b\060\uff2b\061\uff2b\062\uff2b\063\uff2b\064" +
    "\uff2b\074\uff2b\075\uff2b\076\uff2b\105\uff2b\107\uff2b\110\uff2b" +
    "\136\uff2b\137\uff2b\142\uff2b\001\002\000\042\011\uff20\056" +
    "\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064\uff3a\074\uff27" +
    "\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d\136\uff20\137" +
    "\uff38\142\uff24\001\002\000\006\011\uff2a\136\uff2a\001\002" +
    "\000\042\011\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063" +
    "\uff3a\064\uff3a\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29" +
    "\110\uff2d\136\uff20\137\uff38\142\uff24\001\002\000\006\011" +
    "\uff37\136\uff37\001\002\000\004\124\u02ad\001\002\000\004" +
    "\125\u02ae\001\002\000\004\010\u02af\001\002\000\040\011" +
    "\uff20\056\uff38\060\uff3a\061\uff3a\062\uff3a\063\uff3a\064\uff3a" +
    "\074\uff27\075\uff22\076\uff36\105\uff32\107\uff29\110\uff2d\137" +
    "\uff38\142\uff24\001\002\000\004\011\u02b1\001\002\000\010" +
    "\005\uff98\131\u012d\132\u012e\001\002\000\004\005\uff99\001" +
    "\002\000\004\007\u02b4\001\002\000\004\033\u02b5\001\002" +
    "\000\004\004\u02b6\001\002\000\006\003\341\005\342\001" +
    "\002\000\006\003\uff9f\005\uff9f\001\002\000\004\012\053" +
    "\001\002\000\004\011\uff3f\001\002\000\004\011\u02bb\001" +
    "\002\000\006\004\uff3c\010\u0127\001\002\000\004\004\uff3e" +
    "\001\002\000\006\004\uff69\010\u02bf\001\002\000\004\004" +
    "\u02c7\001\002\000\014\037\106\040\112\041\113\042\u02c2" +
    "\043\107\001\002\000\006\004\uff69\010\u02bf\001\002\000" +
    "\004\004\uff6a\001\002\000\004\012\053\001\002\000\004" +
    "\011\uff6c\001\002\000\004\011\u02c5\001\002\000\006\004" +
    "\uff69\010\u02bf\001\002\000\004\004\uff6b\001\002\000\004" +
    "\005\u02c8\001\002\000\004\007\u02c9\001\002\000\004\021" +
    "\u02ca\001\002\000\004\004\u02cb\001\002\000\006\003\341" +
    "\005\342\001\002\000\006\003\uffb7\005\uffb7\001\002\000" +
    "\004\004\u02ce\001\002\000\006\003\341\005\342\001\002" +
    "\000\006\003\uffaa\005\uffaa\001\002\000\006\004\uff3c\010" +
    "\u0127\001\002\000\004\004\u02d2\001\002\000\020\005\uff83" +
    "\007\145\055\143\056\147\121\146\122\141\123\142\001" +
    "\002\000\004\005\uffa2\001\002\000\004\005\u02d5\001\002" +
    "\000\004\007\u02d6\001\002\000\004\032\u02d7\001\002\000" +
    "\004\004\u02d8\001\002\000\006\003\341\005\342\001\002" +
    "\000\006\003\uffa1\005\uffa1\001\002\000\006\004\uff44\010" +
    "\u02db\001\002\000\020\035\u02e8\036\u02e7\037\106\040\112" +
    "\041\113\043\107\054\u02e9\001\002\000\004\004\u02df\001" +
    "\002\000\006\004\uff44\010\u02db\001\002\000\004\004\uff45" +
    "\001\002\000\020\005\uff83\007\145\055\143\056\147\121" +
    "\146\122\141\123\142\001\002\000\004\005\uffa8\001\002" +
    "\000\004\005\u02e2\001\002\000\004\007\u02e3\001\002\000" +
    "\004\030\u02e4\001\002\000\004\004\u02e5\001\002\000\006" +
    "\003\341\005\342\001\002\000\006\003\uffa7\005\uffa7\001" +
    "\002\000\004\012\053\001\002\000\004\012\053\001\002" +
    "\000\004\012\053\001\002\000\004\011\uff4b\001\002\000" +
    "\004\011\u02ec\001\002\000\006\004\uff44\010\u02db\001\002" +
    "\000\004\004\uff4a\001\002\000\004\011\uff47\001\002\000" +
    "\004\011\u02f0\001\002\000\006\004\uff44\010\u02db\001\002" +
    "\000\004\004\uff46\001\002\000\004\011\uff49\001\002\000" +
    "\004\011\u02f4\001\002\000\006\004\uff44\010\u02db\001\002" +
    "\000\004\004\uff48\001\002\000\004\012\053\001\002\000" +
    "\004\012\053\001\002\000\004\012\053\001\002\000\004" +
    "\011\uff5e\001\002\000\004\011\u02fb\001\002\000\006\004" +
    "\uff57\010\334\001\002\000\004\004\uff5d\001\002\000\004" +
    "\011\uff5a\001\002\000\004\011\u02ff\001\002\000\006\004" +
    "\uff57\010\334\001\002\000\004\004\uff59\001\002\000\004" +
    "\011\uff5c\001\002\000\004\011\u0303\001\002\000\006\004" +
    "\uff57\010\334\001\002\000\004\004\uff5b\001\002\000\006" +
    "\004\uff3c\010\u0127\001\002\000\004\004\u0307\001\002\000" +
    "\010\005\uff98\131\u012d\132\u012e\001\002\000\004\005\u0309" +
    "\001\002\000\004\007\u030a\001\002\000\004\033\u030b\001" +
    "\002\000\004\004\u030c\001\002\000\006\003\u030d\005\u030f" +
    "\001\002\000\010\002\uffbc\003\uffbc\005\uffbc\001\002\000" +
    "\004\002\uffdd\001\002\000\032\007\u0317\020\u0318\021\u0312" +
    "\022\u031a\023\u0316\025\u0315\026\u031b\027\u0313\030\u0310\031" +
    "\u0319\032\u0311\033\u0314\001\002\000\006\004\uffc8\010\uffc8" +
    "\001\002\000\006\004\uffc2\010\uffc2\001\002\000\006\004" +
    "\uffd7\010\uffd7\001\002\000\004\004\uffca\001\002\000\006" +
    "\004\uffbf\010\uffbf\001\002\000\006\004\uffcf\010\uffcf\001" +
    "\002\000\006\004\uffd2\010\uffd2\001\002\000\004\017\u0342" +
    "\001\002\000\006\004\uffda\010\uffda\001\002\000\006\004" +
    "\uffc5\010\uffc5\001\002\000\006\004\uffd5\010\uffd5\001\002" +
    "\000\006\004\uffcc\010\uffcc\001\002\000\006\004\uff4c\010" +
    "\036\001\002\000\004\004\u031e\001\002\000\004\005\u031f" +
    "\001\002\000\004\007\u0320\001\002\000\004\026\u0321\001" +
    "\002\000\004\004\u0322\001\002\000\006\003\u030d\005\u030f" +
    "\001\002\000\010\002\uffcb\003\uffcb\005\uffcb\001\002\000" +
    "\006\004\uff63\010\103\001\002\000\004\004\u0326\001\002" +
    "\000\020\005\uff83\007\145\055\143\056\147\121\146\122" +
    "\141\123\142\001\002\000\004\005\uffd4\001\002\000\004" +
    "\005\u0329\001\002\000\004\007\u032a\001\002\000\004\022" +
    "\u032b\001\002\000\004\004\u032c\001\002\000\006\003\u030d" +
    "\005\u030f\001\002\000\010\002\uffd3\003\uffd3\005\uffd3\001" +
    "\002\000\006\004\uff40\010\165\001\002\000\004\004\u0330" +
    "\001\002\000\020\005\uff83\007\145\055\143\056\147\121" +
    "\146\122\141\123\142\001\002\000\004\005\uffc4\001\002" +
    "\000\004\005\u0333\001\002\000\004\007\u0334\001\002\000" +
    "\004\031\u0335\001\002\000\004\004\u0336\001\002\000\006" +
    "\003\u030d\005\u030f\001\002\000\010\002\uffc3\003\uffc3\005" +
    "\uffc3\001\002\000\006\004\uff6d\010\210\001\002\000\004" +
    "\004\u033a\001\002\000\020\005\uff83\007\145\055\143\056" +
    "\147\121\146\122\141\123\142\001\002\000\004\005\uffd9" +
    "\001\002\000\004\005\u033d\001\002\000\004\007\u033e\001" +
    "\002\000\004\020\u033f\001\002\000\004\004\u0340\001\002" +
    "\000\006\003\u030d\005\u030f\001\002\000\010\002\uffd8\003" +
    "\uffd8\005\uffd8\001\002\000\004\004\u0343\001\002\000\010" +
    "\002\uffbd\003\uffbd\005\uffbd\001\002\000\006\004\uff5f\010" +
    "\233\001\002\000\004\004\u0346\001\002\000\006\003\237" +
    "\005\241\001\002\000\006\003\uffd1\005\uffd1\001\002\000" +
    "\006\003\u030d\005\u030f\001\002\000\010\002\uffd0\003\uffd0" +
    "\005\uffd0\001\002\000\006\004\uff57\010\334\001\002\000" +
    "\004\004\u034c\001\002\000\006\003\341\005\342\001\002" +
    "\000\006\003\uffce\005\uffce\001\002\000\006\003\u030d\005" +
    "\u030f\001\002\000\010\002\uffcd\003\uffcd\005\uffcd\001\002" +
    "\000\006\004\uff3c\010\u0127\001\002\000\004\004\u0352\001" +
    "\002\000\010\005\uff98\131\u012d\132\u012e\001\002\000\004" +
    "\005\u0354\001\002\000\004\007\u0355\001\002\000\004\033" +
    "\u0356\001\002\000\004\004\u0357\001\002\000\006\003\u030d" +
    "\005\u030f\001\002\000\010\002\uffbe\003\uffbe\005\uffbe\001" +
    "\002\000\004\004\u035a\001\002\000\006\003\u030d\005\u030f" +
    "\001\002\000\010\002\uffc9\003\uffc9\005\uffc9\001\002\000" +
    "\006\004\uff69\010\u02bf\001\002\000\004\004\u035e\001\002" +
    "\000\004\005\u035f\001\002\000\004\007\u0360\001\002\000" +
    "\004\021\u0361\001\002\000\004\004\u0362\001\002\000\006" +
    "\003\u030d\005\u030f\001\002\000\010\002\uffd6\003\uffd6\005" +
    "\uffd6\001\002\000\006\004\uff3c\010\u0127\001\002\000\004" +
    "\004\u0366\001\002\000\020\005\uff83\007\145\055\143\056" +
    "\147\121\146\122\141\123\142\001\002\000\004\005\uffc1" +
    "\001\002\000\004\005\u0369\001\002\000\004\007\u036a\001" +
    "\002\000\004\032\u036b\001\002\000\004\004\u036c\001\002" +
    "\000\006\003\u030d\005\u030f\001\002\000\010\002\uffc0\003" +
    "\uffc0\005\uffc0\001\002\000\006\004\uff44\010\u02db\001\002" +
    "\000\004\004\u0370\001\002\000\020\005\uff83\007\145\055" +
    "\143\056\147\121\146\122\141\123\142\001\002\000\004" +
    "\005\uffc7\001\002\000\004\005\u0373\001\002\000\004\007" +
    "\u0374\001\002\000\004\030\u0375\001\002\000\004\004\u0376" +
    "\001\002\000\006\003\u030d\005\u030f\001\002\000\010\002" +
    "\uffc6\003\uffc6\005\uffc6\001\002\000\004\004\u0379\001\002" +
    "\000\006\003\014\005\015\001\002\000\004\002\uffe8\001" +
    "\002\000\006\004\uff69\010\u02bf\001\002\000\004\004\u037d" +
    "\001\002\000\004\005\u037e\001\002\000\004\007\u037f\001" +
    "\002\000\004\021\u0380\001\002\000\004\004\u0381\001\002" +
    "\000\006\003\014\005\015\001\002\000\004\002\ufff5\001" +
    "\002\000\006\004\uff71\010\u0385\001\002\000\004\004\u038a" +
    "\001\002\000\004\035\u0386\001\002\000\004\012\053\001" +
    "\002\000\004\011\uff73\001\002\000\004\011\u0389\001\002" +
    "\000\004\004\uff72\001\002\000\006\003\u030d\005\u030f\001" +
    "\002\000\006\003\ufffb\005\ufffb\001\002\000\006\003\014" +
    "\005\015\001\002\000\004\002\ufffa\001\002\000\006\004" +
    "\uff3c\010\u0127\001\002\000\004\004\u0390\001\002\000\020" +
    "\005\uff83\007\145\055\143\056\147\121\146\122\141\123" +
    "\142\001\002\000\004\005\uffe0\001\002\000\004\005\u0393" +
    "\001\002\000\004\007\u0394\001\002\000\004\032\u0395\001" +
    "\002\000\004\004\u0396\001\002\000\006\003\014\005\015" +
    "\001\002\000\004\002\uffdf\001\002\000\006\004\uff44\010" +
    "\u02db\001\002\000\004\004\u039a\001\002\000\020\005\uff83" +
    "\007\145\055\143\056\147\121\146\122\141\123\142\001" +
    "\002\000\004\005\uffe6\001\002\000\004\005\u039d\001\002" +
    "\000\004\007\u039e\001\002\000\004\030\u039f\001\002\000" +
    "\004\004\u03a0\001\002\000\006\003\014\005\015\001\002" +
    "\000\004\002\uffe5\001\002\000\004\012\053\001\002\000" +
    "\004\012\053\001\002\000\004\011\uff78\001\002\000\004" +
    "\011\u03a6\001\002\000\006\004\uff76\010\011\001\002\000" +
    "\004\004\uff77\001\002\000\004\011\uff7a\001\002\000\004" +
    "\011\u03aa\001\002\000\006\004\uff76\010\011\001\002\000" +
    "\004\004\uff79\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u03a9\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\061\007\001\001" +
    "\000\004\010\011\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\100\u0397\001\001\000" +
    "\004\104\u038d\001\001\000\004\063\u0382\001\001\000\004" +
    "\067\u037a\001\001\000\004\077\u0377\001\001\000\004\106" +
    "\u0304\001\001\000\004\074\332\001\001\000\002\001\001" +
    "\000\004\072\231\001\001\000\002\001\001\000\004\065" +
    "\205\001\001\000\004\102\163\001\001\000\004\070\100" +
    "\001\001\000\004\076\034\001\001\000\004\020\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\003\044\001\001\000\002\001\001\000\004\006\074" +
    "\001\001\000\004\006\070\001\001\000\004\006\064\001" +
    "\001\000\004\006\060\001\001\000\004\006\053\001\001" +
    "\000\002\001\001\000\004\206\054\001\001\000\002\001" +
    "\001\000\004\020\056\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\204\061\001\001\000\002\001\001\000" +
    "\004\020\063\001\001\000\002\001\001\000\004\207\065" +
    "\001\001\000\002\001\001\000\004\020\067\001\001\000" +
    "\002\001\001\000\004\205\071\001\001\000\002\001\001" +
    "\000\004\020\073\001\001\000\002\001\001\000\004\210" +
    "\075\001\001\000\002\001\001\000\004\020\077\001\001" +
    "\000\002\001\001\000\006\015\101\024\103\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\015\104\024\103" +
    "\001\001\000\002\001\001\000\004\006\134\001\001\000" +
    "\004\006\131\001\001\000\004\006\125\001\001\000\004" +
    "\006\121\001\001\000\004\006\116\001\001\000\004\006" +
    "\113\001\001\000\004\166\114\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\165\117\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\176\122\001\001\000\002" +
    "\001\001\000\006\015\124\024\103\001\001\000\002\001" +
    "\001\000\004\177\126\001\001\000\002\001\001\000\006" +
    "\015\130\024\103\001\001\000\002\001\001\000\004\167" +
    "\132\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\164\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\143\001\001\000\004\005\162\001\001\000\004" +
    "\005\161\001\001\000\004\005\160\001\001\000\004\071" +
    "\152\001\001\000\004\005\151\001\001\000\004\005\150" +
    "\001\001\000\004\005\147\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\157\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\022\165\024\166\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\022\167" +
    "\024\166\001\001\000\002\001\001\000\004\005\171\001" +
    "\001\000\004\103\172\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\003" +
    "\177\001\001\000\002\001\001\000\004\006\201\001\001" +
    "\000\004\214\202\001\001\000\002\001\001\000\006\022" +
    "\204\024\166\001\001\000\002\001\001\000\006\013\206" +
    "\024\210\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\013\211\024\210\001\001\000\002\001\001\000\004" +
    "\006\213\001\001\000\004\174\214\001\001\000\002\001" +
    "\001\000\006\013\216\024\210\001\001\000\002\001\001" +
    "\000\004\005\220\001\001\000\004\066\221\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\226\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\016\234\024\233" +
    "\001\001\000\002\001\001\000\006\016\260\024\233\001" +
    "\001\000\002\001\001\000\004\007\237\001\001\000\002" +
    "\001\001\000\004\073\256\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\162\243\001\001\000\002\001\001" +
    "\000\004\005\245\001\001\000\004\163\246\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\007\253\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\257\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\262\001" +
    "\001\000\004\200\263\001\001\000\002\001\001\000\006" +
    "\016\265\024\233\001\001\000\002\001\001\000\004\062" +
    "\267\001\001\000\004\004\272\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\157\313\001" +
    "\001\000\002\001\001\000\004\155\276\001\001\000\002" +
    "\001\001\000\004\005\300\001\001\000\004\156\301\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\306\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\161\311\001\001\000\004" +
    "\003\312\001\001\000\002\001\001\000\004\011\315\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\317" +
    "\001\001\000\004\160\320\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\325\001\001\000\002\001\001\000\004\006\327\001" +
    "\001\000\004\172\330\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\017\334\024\335\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\017\336\024\335\001\001" +
    "\000\002\001\001\000\004\056\342\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\075\343\001\001\000\004" +
    "\003\344\001\001\000\002\001\001\000\004\144\u02d9\001" +
    "\001\000\004\150\u02cf\001\001\000\004\143\u02cc\001\001" +
    "\000\004\133\u02bc\001\001\000\004\152\u0125\001\001\000" +
    "\004\140\u011f\001\001\000\004\136\u0119\001\001\000\004" +
    "\131\u010f\001\001\000\002\001\001\000\004\146\u0103\001" +
    "\001\000\004\134\371\001\001\000\004\142\361\001\001" +
    "\000\004\020\362\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\056\370\001\001\000\002\001\001\000\006\015" +
    "\372\024\103\001\001\000\002\001\001\000\004\005\374" +
    "\001\001\000\004\135\375\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\056\u0102\001\001\000\002\001\001\000\006\022\u0104\024" +
    "\166\001\001\000\002\001\001\000\004\005\u0106\001\001" +
    "\000\004\147\u0107\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\056\u010c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\013\u0110\024\210\001\001\000\002\001\001" +
    "\000\004\005\u0112\001\001\000\004\132\u0113\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\056\u0118\001\001\000\002\001\001\000" +
    "\006\016\u011a\024\233\001\001\000\002\001\001\000\004" +
    "\007\u011c\001\001\000\004\137\u011d\001\001\000\004\056" +
    "\u011e\001\001\000\002\001\001\000\006\017\u0120\024\335" +
    "\001\001\000\002\001\001\000\004\056\u0122\001\001\000" +
    "\004\141\u0123\001\001\000\004\056\u0124\001\001\000\002" +
    "\001\001\000\006\023\u0127\024\u0128\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\023\u0129\024\u0128\001\001" +
    "\000\002\001\001\000\004\055\u012b\001\001\000\002\001" +
    "\001\000\004\154\u02ab\001\001\000\004\153\u012e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\026\u0135\216\u0134\217\u0132\220\u013b\223\u0138\227\u0133" +
    "\232\u013a\233\u0139\235\u0137\236\u0136\001\001\000\006\041" +
    "\u021f\044\u02a9\001\001\000\002\001\001\000\006\040\u01b8" +
    "\043\u029e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\036" +
    "\u0143\041\u014b\046\u013e\001\001\000\004\054\u024c\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\316\u0245\001" +
    "\001\000\002\001\001\000\004\221\u019c\001\001\000\004" +
    "\314\u0197\001\001\000\004\277\u0195\001\001\000\002\001" +
    "\001\000\004\303\u018e\001\001\000\004\302\u018c\001\001" +
    "\000\002\001\001\000\004\300\u0186\001\001\000\004\301" +
    "\u0184\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\276\u016f\001\001\000" +
    "\002\001\001\000\006\041\u0154\052\u0153\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\311\u0158\001\001\000\006\051\u0161\053\u0159" +
    "\001\001\000\004\323\u016d\001\001\000\002\001\001\000" +
    "\004\317\u016b\001\001\000\002\001\001\000\004\321\u0169" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\322\u0167" +
    "\001\001\000\004\320\u0165\001\001\000\006\041\u014b\046" +
    "\u0166\001\001\000\002\001\001\000\006\041\u014b\046\u0168" +
    "\001\001\000\002\001\001\000\006\041\u014b\046\u016a\001" +
    "\001\000\002\001\001\000\006\041\u014b\046\u016c\001\001" +
    "\000\002\001\001\000\006\041\u014b\046\u016e\001\001\000" +
    "\002\001\001\000\006\051\u0170\053\u0159\001\001\000\002" +
    "\001\001\000\006\041\u0154\052\u0172\001\001\000\002\001" +
    "\001\000\004\307\u0174\001\001\000\006\051\u0175\053\u0159" +
    "\001\001\000\002\001\001\000\006\041\u0154\052\u0177\001" +
    "\001\000\002\001\001\000\004\310\u0179\001\001\000\006" +
    "\051\u017a\053\u0159\001\001\000\002\001\001\000\006\041" +
    "\u0154\052\u017c\001\001\000\002\001\001\000\004\305\u017e" +
    "\001\001\000\006\051\u017f\053\u0159\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\312\u0182\001\001\000\006" +
    "\051\u0183\053\u0159\001\001\000\002\001\001\000\006\051" +
    "\u0185\053\u0159\001\001\000\002\001\001\000\006\051\u0187" +
    "\053\u0159\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\313\u018a\001\001\000\006\051\u018b\053\u0159\001\001" +
    "\000\002\001\001\000\006\051\u018d\053\u0159\001\001\000" +
    "\002\001\001\000\006\051\u018f\053\u0159\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\304" +
    "\u0193\001\001\000\006\051\u0194\053\u0159\001\001\000\002" +
    "\001\001\000\006\051\u0196\053\u0159\001\001\000\002\001" +
    "\001\000\006\041\u014b\046\u0198\001\001\000\002\001\001" +
    "\000\004\315\u019a\001\001\000\006\051\u019b\053\u0159\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\027\u01a6\237\u01a5\240\u01a4\241\u01a3\242\u01a2\244" +
    "\u01a1\245\u01a0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\041\u021f\044\u0220\001\001\000\006\040\u01b8\043\u01b9" +
    "\001\001\000\004\030\u01a7\001\001\000\004\222\u01b4\001" +
    "\001\000\004\327\u01ac\001\001\000\004\326\u01aa\001\001" +
    "\000\020\027\u01ab\237\u01a5\240\u01a4\241\u01a3\242\u01a2\244" +
    "\u01a1\245\u01a0\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\036\u01ae\041\u014b\046\u013e\001\001\000\004\330" +
    "\u01af\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\027\u01b2\237\u01a5\240\u01a4\241\u01a3\242\u01a2\244\u01a1\245" +
    "\u01a0\001\001\000\004\030\u01b3\001\001\000\002\001\001" +
    "\000\026\026\u01b5\216\u0134\217\u0132\220\u013b\223\u0138\227" +
    "\u0133\232\u013a\233\u0139\235\u0137\236\u0136\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\042" +
    "\u01be\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\041" +
    "\u01bf\001\001\000\004\246\u01c0\001\001\000\004\047\u01c4" +
    "\001\001\000\004\041\u021c\001\001\000\002\001\001\000" +
    "\006\041\u01ce\045\u01cb\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\267\u0215\001\001\000\004\252\u0213\001" +
    "\001\000\002\001\001\000\004\256\u020c\001\001\000\004" +
    "\255\u020a\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\253\u0204\001\001\000\004\254\u0202\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\251\u01ed\001\001\000\002\001\001\000\006" +
    "\041\u0154\052\u01d6\001\001\000\002\001\001\000\004\264" +
    "\u01d8\001\001\000\006\050\u01df\053\u01d9\001\001\000\004" +
    "\275\u01eb\001\001\000\004\270\u01e9\001\001\000\004\272" +
    "\u01e7\001\001\000\002\001\001\000\004\274\u01e5\001\001" +
    "\000\004\273\u01e3\001\001\000\002\001\001\000\004\271" +
    "\u01e1\001\001\000\006\041\u01ce\045\u01e2\001\001\000\002" +
    "\001\001\000\006\041\u01ce\045\u01e4\001\001\000\002\001" +
    "\001\000\006\050\u01e6\053\u01d9\001\001\000\002\001\001" +
    "\000\006\041\u01ce\045\u01e8\001\001\000\002\001\001\000" +
    "\006\041\u01ce\045\u01ea\001\001\000\002\001\001\000\006" +
    "\041\u01ce\045\u01ec\001\001\000\002\001\001\000\006\050" +
    "\u01ee\053\u01d9\001\001\000\002\001\001\000\006\041\u0154" +
    "\052\u01f0\001\001\000\002\001\001\000\004\262\u01f2\001" +
    "\001\000\006\050\u01f3\053\u01d9\001\001\000\002\001\001" +
    "\000\006\041\u0154\052\u01f5\001\001\000\002\001\001\000" +
    "\004\263\u01f7\001\001\000\006\050\u01f8\053\u01d9\001\001" +
    "\000\002\001\001\000\006\041\u0154\052\u01fa\001\001\000" +
    "\002\001\001\000\004\260\u01fc\001\001\000\006\050\u01fd" +
    "\053\u01d9\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\265\u0200\001\001\000\006\050\u0201\053\u01d9\001\001" +
    "\000\002\001\001\000\006\050\u0203\053\u01d9\001\001\000" +
    "\002\001\001\000\006\050\u0205\053\u01d9\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\266\u0208\001\001\000" +
    "\006\050\u0209\053\u01d9\001\001\000\002\001\001\000\006" +
    "\050\u020b\053\u01d9\001\001\000\002\001\001\000\006\050" +
    "\u020d\053\u01d9\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\257\u0211\001\001\000\006\050" +
    "\u0212\053\u01d9\001\001\000\002\001\001\000\006\050\u0214" +
    "\053\u01d9\001\001\000\002\001\001\000\006\041\u01ce\045" +
    "\u0216\001\001\000\002\001\001\000\006\041\u0154\052\u0218" +
    "\001\001\000\002\001\001\000\004\261\u021a\001\001\000" +
    "\006\050\u021b\053\u01d9\001\001\000\002\001\001\000\004" +
    "\247\u021d\001\001\000\004\047\u021e\001\001\000\002\001" +
    "\001\000\004\250\u0221\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\041\u01ce\045\u0223\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\034\u0227\041\u0226\001\001" +
    "\000\004\343\u022f\001\001\000\002\001\001\000\004\344" +
    "\u0229\001\001\000\004\035\u022a\001\001\000\002\001\001" +
    "\000\006\034\u022c\041\u0226\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\035\u0230\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\041\u0154\052" +
    "\u0233\001\001\000\004\243\u0234\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\026\u0241\216\u0134\217\u0132" +
    "\220\u013b\223\u0138\227\u0133\232\u013a\233\u0139\235\u0137\236" +
    "\u0136\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\041\u014b\046\u0246\001" +
    "\001\000\002\001\001\000\006\041\u0154\052\u0248\001\001" +
    "\000\002\001\001\000\004\306\u024a\001\001\000\006\051" +
    "\u024b\053\u0159\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\325\u0251\001\001\000\004\324\u024f\001\001\000" +
    "\010\036\u0250\041\u014b\046\u013e\001\001\000\002\001\001" +
    "\000\010\036\u0252\041\u014b\046\u013e\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\034\u0255\041\u0226\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\026\u0258\216" +
    "\u0134\217\u0132\220\u013b\223\u0138\227\u0133\232\u013a\233\u0139" +
    "\235\u0137\236\u0136\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\041\u0154\052\u025b\001\001\000\004\234\u025c" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\026" +
    "\u025f\216\u0134\217\u0132\220\u013b\223\u0138\227\u0133\232\u013a" +
    "\233\u0139\235\u0137\236\u0136\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\031\u0262\331\u0264\332\u0263\001\001" +
    "\000\004\224\u0271\001\001\000\006\041\u026c\060\u026d\001" +
    "\001\000\006\040\u0266\057\u0265\001\001\000\002\001\001" +
    "\000\004\042\u0267\001\001\000\004\041\u0268\001\001\000" +
    "\004\345\u0269\001\001\000\002\001\001\000\006\041\u014b" +
    "\046\u026b\001\001\000\002\001\001\000\004\346\u026e\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\041\u014b" +
    "\046\u0270\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\225\u0275\001\001" +
    "\000\006\032\u0278\041\u0277\001\001\000\004\334\u0291\001" +
    "\001\000\004\333\u028f\001\001\000\002\001\001\000\004" +
    "\335\u027a\001\001\000\006\032\u027b\041\u0277\001\001\000" +
    "\002\001\001\000\004\336\u027d\001\001\000\004\033\u0282" +
    "\001\001\000\004\340\u0289\001\001\000\004\341\u0287\001" +
    "\001\000\004\342\u0285\001\001\000\004\337\u0283\001\001" +
    "\000\002\001\001\000\006\032\u0284\041\u0277\001\001\000" +
    "\002\001\001\000\006\032\u0286\041\u0277\001\001\000\002" +
    "\001\001\000\006\032\u0288\041\u0277\001\001\000\002\001" +
    "\001\000\006\032\u028a\041\u0277\001\001\000\002\001\001" +
    "\000\020\027\u028c\237\u01a5\240\u01a4\241\u01a3\242\u01a2\244" +
    "\u01a1\245\u01a0\001\001\000\004\226\u028d\001\001\000\026" +
    "\026\u028e\216\u0134\217\u0132\220\u013b\223\u0138\227\u0133\232" +
    "\u013a\233\u0139\235\u0137\236\u0136\001\001\000\002\001\001" +
    "\000\004\033\u0290\001\001\000\002\001\001\000\004\033" +
    "\u0292\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\026\u0297\216\u0134\217" +
    "\u0132\220\u013b\223\u0138\227\u0133\232\u013a\233\u0139\235\u0137" +
    "\236\u0136\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\055\u029d\001\001\000\002\001\001\000\026\026\u029f\216" +
    "\u0134\217\u0132\220\u013b\223\u0138\227\u0133\232\u013a\233\u0139" +
    "\235\u0137\236\u0136\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\036\u02a2\041\u014b\046\u013e\001\001\000\004" +
    "\230\u02a3\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\027\u02a6\237\u01a5\240\u01a4\241\u01a3\242\u01a2\244\u01a1" +
    "\245\u01a0\001\001\000\004\231\u02a7\001\001\000\026\026" +
    "\u02a8\216\u0134\217\u0132\220\u013b\223\u0138\227\u0133\232\u013a" +
    "\233\u0139\235\u0137\236\u0136\001\001\000\002\001\001\000" +
    "\026\026\u02aa\216\u0134\217\u0132\220\u013b\223\u0138\227\u0133" +
    "\232\u013a\233\u0139\235\u0137\236\u0136\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\026\u02af\216\u0134\217\u0132\220\u013b\223\u0138\227" +
    "\u0133\232\u013a\233\u0139\235\u0137\236\u0136\001\001\000\002" +
    "\001\001\000\004\055\u02b1\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\056\u02b6\001\001\000\002\001\001\000\004\006\u02b8\001" +
    "\001\000\004\215\u02b9\001\001\000\002\001\001\000\006" +
    "\023\u02bb\024\u0128\001\001\000\002\001\001\000\006\014" +
    "\u02bd\024\u02bf\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\014\u02c0\024\u02bf\001\001\000\002\001\001\000" +
    "\004\006\u02c2\001\001\000\004\175\u02c3\001\001\000\002" +
    "\001\001\000\006\014\u02c5\024\u02bf\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u02cb\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\u02ce\001\001\000\002" +
    "\001\001\000\006\023\u02d0\024\u0128\001\001\000\002\001" +
    "\001\000\004\005\u02d2\001\001\000\004\151\u02d3\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\056\u02d8\001\001\000\002\001\001" +
    "\000\006\021\u02db\024\u02dc\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\021\u02dd\024\u02dc\001\001\000\002" +
    "\001\001\000\004\005\u02df\001\001\000\004\145\u02e0\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u02e5\001\001\000\002\001" +
    "\001\000\004\006\u02f1\001\001\000\004\006\u02ed\001\001" +
    "\000\004\006\u02e9\001\001\000\004\211\u02ea\001\001\000" +
    "\002\001\001\000\006\021\u02ec\024\u02dc\001\001\000\002" +
    "\001\001\000\004\213\u02ee\001\001\000\002\001\001\000" +
    "\006\021\u02f0\024\u02dc\001\001\000\002\001\001\000\004" +
    "\212\u02f2\001\001\000\002\001\001\000\006\021\u02f4\024" +
    "\u02dc\001\001\000\002\001\001\000\004\006\u0300\001\001" +
    "\000\004\006\u02fc\001\001\000\004\006\u02f8\001\001\000" +
    "\004\201\u02f9\001\001\000\002\001\001\000\006\017\u02fb" +
    "\024\335\001\001\000\002\001\001\000\004\203\u02fd\001" +
    "\001\000\002\001\001\000\006\017\u02ff\024\335\001\001" +
    "\000\002\001\001\000\004\202\u0301\001\001\000\002\001" +
    "\001\000\006\017\u0303\024\335\001\001\000\002\001\001" +
    "\000\006\023\u0305\024\u0128\001\001\000\002\001\001\000" +
    "\004\055\u0307\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\u030d\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\122\u036d\001\001\000\004\126\u0363\001\001\000" +
    "\004\111\u035b\001\001\000\004\121\u0358\001\001\000\004" +
    "\130\u034f\001\001\000\004\116\u0349\001\001\000\004\114" +
    "\u0343\001\001\000\002\001\001\000\004\107\u0337\001\001" +
    "\000\004\124\u032d\001\001\000\004\112\u0323\001\001\000" +
    "\004\120\u031b\001\001\000\004\020\u031c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\u0322\001\001\000\002" +
    "\001\001\000\006\015\u0324\024\103\001\001\000\002\001" +
    "\001\000\004\005\u0326\001\001\000\004\113\u0327\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u032c\001\001\000\002\001\001" +
    "\000\006\022\u032e\024\166\001\001\000\002\001\001\000" +
    "\004\005\u0330\001\001\000\004\125\u0331\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\u0336\001\001\000\002\001\001\000\006" +
    "\013\u0338\024\210\001\001\000\002\001\001\000\004\005" +
    "\u033a\001\001\000\004\110\u033b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\u0340\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\016\u0344\024\233\001\001\000" +
    "\002\001\001\000\004\007\u0346\001\001\000\004\115\u0347" +
    "\001\001\000\004\025\u0348\001\001\000\002\001\001\000" +
    "\006\017\u034a\024\335\001\001\000\002\001\001\000\004" +
    "\056\u034c\001\001\000\004\117\u034d\001\001\000\004\025" +
    "\u034e\001\001\000\002\001\001\000\006\023\u0350\024\u0128" +
    "\001\001\000\002\001\001\000\004\055\u0352\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\u0357\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u035a\001\001\000\002\001\001" +
    "\000\006\014\u035c\024\u02bf\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\u0362\001\001\000\002\001\001\000" +
    "\006\023\u0364\024\u0128\001\001\000\002\001\001\000\004" +
    "\005\u0366\001\001\000\004\127\u0367\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u036c\001\001\000\002\001\001\000\006\021" +
    "\u036e\024\u02dc\001\001\000\002\001\001\000\004\005\u0370" +
    "\001\001\000\004\123\u0371\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\025\u0376\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\003\u0379\001\001\000\002\001\001\000\006\014\u037b" +
    "\024\u02bf\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u0381\001\001\000\002\001\001\000\004\012\u0383\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\u0386" +
    "\001\001\000\004\173\u0387\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u038a\001\001\000\004\064\u038b" +
    "\001\001\000\004\003\u038c\001\001\000\002\001\001\000" +
    "\006\023\u038e\024\u0128\001\001\000\002\001\001\000\004" +
    "\005\u0390\001\001\000\004\105\u0391\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\003\u0396\001\001\000\002\001\001\000\006\021" +
    "\u0398\024\u02dc\001\001\000\002\001\001\000\004\005\u039a" +
    "\001\001\000\004\101\u039b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u03a0\001\001\000\002\001\001\000\004\006\u03a7\001" +
    "\001\000\004\006\u03a3\001\001\000\004\171\u03a4\001\001" +
    "\000\002\001\001\000\004\010\u03a6\001\001\000\002\001" +
    "\001\000\004\170\u03a8\001\001\000\002\001\001\000\004" +
    "\010\u03aa\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserGCIC$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserGCIC$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserGCIC$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private List<ErrorCom> erroresCom;
    private List<Etiqueta> etiquetas;
    private List<ParametroEtiqueta> parametrosEtActl;
    //private List<Etiqueta> etiquetasBody;
    //private List<ParametroEtiqueta> parametrosBody;
    //private Etiqueta bodyAct;
    private Etiqueta etiquetaAct;
    private Etiqueta etiquetaPadre;
    private Etiqueta etiquetaScript;
    private DeclAsign delcAsignAct;
    private Instruccion instruccionAct;
    private Instruccion insIf;
    private Instruccion insPadre;
    private List<String> valoresCondicion;
    private AlertInfo alertInfoAct;
    private InsInsert insInsertAct;  
    private List<String> expresionNum;  
    

	public ParserGCIC(LexerGCIC lex) {
		super(lex);
        this.erroresCom = lex.getErroresCom();
        this.etiquetas = new ArrayList<>();        
        this.etiquetaAct = new Etiqueta();
        this.etiquetaPadre = null;
        this.insPadre = null;
        this.valoresCondicion = new ArrayList<>();
	}

    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        erroresCom.add(new ErrorCom("Sintactico","No se esperaba Componente",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    }

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        erroresCom.add(new ErrorCom("Sintactico","Error sintactico Irrecuperable",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    } 

    private void insertarEtiqueta(String tipo){
        this.etiquetaAct = new Etiqueta();
        this.etiquetaAct.setTipo(tipo);        
        if(this.etiquetaPadre == null){
            this.etiquetas.add(this.etiquetaAct);
        }else{
            //List<Etiqueta> etiquetasTemp = this.etiquetaPadre.getEtiquetas();
            this.etiquetaAct.setEtiquetaPadre(this.etiquetaPadre);
            etiquetaPadre.insertarEtiqueta(this.etiquetaAct);            
        }   
    }

    private void insertarScript(){
        this.etiquetaScript = this.etiquetaAct;           
    }

    private void insertarPadre(){
        this.etiquetaPadre = this.etiquetaAct;
    }

    private void cerrarPadre(){
        Etiqueta etiquetaTemp = this.etiquetaPadre.getEtiquetaPadre();
        this.etiquetaPadre = etiquetaTemp;
    }

    private void insertarParametro(String tipo,String val){
        ParametroEtiqueta parIns = new ParametroEtiqueta(tipo,val);
        this.etiquetaAct.insertarParametro(parIns);
    }   

    private void insertarContenido(String contenido){
        this.etiquetaAct.setContenido(contenido);
    }

    private void insertarDeclaracion(String desc){
        this.delcAsignAct = new DeclAsign(desc);
        /*
        InsIf instruccion1 = null;
        Ciclo instruccion2 = null;        
        if(this.insPadre == null){
            this.etiquetaScript.insertarInstruccion(this.delcAsignAct);
        }else{
            String tipo = insPadre.getTipo();
            switch(tipo)
            {
                case "INSIF":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "INSELSE":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "INSELSEIF":
                    instruccion1 = (InsIf)this.insPadre;
                    instruccion1.insertarInstruccion(this.delcAsignAct);
                    break;
                case "REPEAT":
                    instruccion2 = (Ciclo)this.insPadre;
                    instruccion2.insertarInstruccion(this.delcAsignAct);
                    break;
                case "WHILE":
                    instruccion2 = (Ciclo)this.insPadre;
                    instruccion2.insertarInstruccion(this.delcAsignAct);
                    break;
                default:
                    System.out.println("no match");
            }
        }   
        */
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(this.delcAsignAct);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(this.delcAsignAct);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.delcAsignAct);
        }      
    }

    private void insertarAsign(){
        delcAsignAct = new DeclAsign("asignacion");
        this.etiquetaScript.insertarInstruccion(this.delcAsignAct);
    }

    private void insertarEnDeclaracion(String tipo, String modo, String variable){
        this.delcAsignAct.setTipoVar(tipo);
        this.delcAsignAct.setModo(modo);
        this.delcAsignAct.insertarVariable(variable);
    }

    private void insertarVal(String val){
        this.delcAsignAct.insertarValor(val);
    }

    private void insertarInsIf() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new InsIf("INSIF");
        this.insIf = this.instruccionAct;
        if (this.insPadre != null) {
            InsIf temp = (InsIf) this.instruccionAct;
            temp.setInsPadre(insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }

    private void insertarInstruccionEnPadre(Instruccion instr) {
        String tipo = this.insPadre.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf) this.insPadre;
            temp.insertarInstruccion(instruccionAct);
        } else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo) this.insPadre;
            temp.insertarInstruccion(instruccionAct);
        }
    }

    private void insertarElse() {
        this.instruccionAct = new InsIf("INSELSE");
        InsIf temp = (InsIf) this.insIf;
        temp.insertarElse(this.instruccionAct);
    }

    private void insertarElseIF() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new InsIf("INSELSEIF");
        InsIf temp = (InsIf) this.insIf;
        temp.insertarElse(this.instruccionAct);
    }

    private void insertarRepeat() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new Ciclo("REPEAT");
        if (this.insPadre != null) {
            Ciclo temp = (Ciclo) this.instruccionAct;
            temp.setInsPadre(this.insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }

    private void insertarWhile() {
        this.valoresCondicion = new ArrayList<>();
        this.instruccionAct = new Ciclo("WHILE");
        if (this.insPadre != null) {
            Ciclo temp = (Ciclo) this.instruccionAct;
            temp.setInsPadre(this.insPadre);
            insertarInstruccionEnPadre(temp);
            this.insPadre = this.instruccionAct;
        } else {
            this.etiquetaScript.insertarInstruccion(this.instruccionAct);
            this.insPadre = this.instruccionAct;
        }
    }
    
    private void cerrarPadreIns(){
        String tipo = this.insPadre.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf)this.insPadre;
            this.insPadre = temp.getInsPadre();
            this.instruccionAct = this.insPadre;
        }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo)this.insPadre;
            this.insPadre = temp.getInsPadre();
            this.instruccionAct = this.insPadre;
        }        
    }

    private void insertarEnCondi(String condicion){        
        this.valoresCondicion.add(condicion);
    }

    private void insertarCondicion(){
        String tipo = this.instruccionAct.getTipo();
        if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
            InsIf temp = (InsIf)this.instruccionAct;
            temp.setCondicionValores(this.valoresCondicion);
        }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
            Ciclo temp = (Ciclo)this.instruccionAct;
            temp.setCondicionValores(this.valoresCondicion);
        } 
    }

    private void insertarAlertInf(){
        this.alertInfoAct = new AlertInfo("ALERTINFO");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(this.alertInfoAct);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(this.alertInfoAct);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.alertInfoAct);
        }
    }

    private void insertarInsInsert(){
        this.insInsertAct = new InsInsert("INSERT");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(this.insInsertAct);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(this.insInsertAct);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.insInsertAct);
        }
    }

    private void insertarRedirect(){
        Redireccionar red = new Redireccionar("REDIRECT");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(red);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(red);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.alertInfoAct);
        }    
    }
    
    private void insertarExit(){
        Instruccion exitIns = new Instruccion("EXIT");
        if(this.insPadre != null){
            String tipo = this.insPadre.getTipo();
            if (tipo.equals("INSIF") || tipo.equals("INSELSE") || tipo.equals("INSELSEIF")) {
                InsIf temp = (InsIf)this.instruccionAct;
                temp.insertarInstruccion(exitIns);
            }else if (tipo.equals("REPEAT") || tipo.equals("WHILE")) {
                Ciclo temp = (Ciclo)this.instruccionAct;
                temp.insertarInstruccion(exitIns);
            } 
        }else{
            this.etiquetaScript.insertarInstruccion(this.alertInfoAct);
        }  
    }

    private void insertarDeclaracionCiclo(String tipo){
        this.delcAsignAct = new DeclAsign(tipo);
        Ciclo temp = (Ciclo)this.instruccionAct;
        temp.setAsigDecl(this.delcAsignAct);
    }

    private void insertarToken(String token){
        this.insInsertAct.insertarToken(token);
    }

    private void crearExpresion(){
        this.expresionNum = new ArrayList<>();
        Ciclo temp = (Ciclo)this.instruccionAct;
        temp.setExpresionNum(this.expresionNum);
    }

    private void crearProceso(String nombre){
        Proceso proc = new Proceso();
        proc.setTipo(nombre);
        this.etiquetaScript.insertarProceso(proc);
    }

    private void insertarExp(String val){
        this.expresionNum.add(val);
    }

    public List<Etiqueta> getEtiquetasTotal(){
        return this.etiquetas;        
    } 

    protected int error_sync_size() {
		return 2;
	}

    public List<ErrorCom> getErroresCom(){
        return erroresCom;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserGCIC$actions {
  private final ParserGCIC parser;

  /** Constructor */
  CUP$ParserGCIC$actions(ParserGCIC parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action_part00000000(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserGCIC$result;

      /* select the action based on the action number */
      switch (CUP$ParserGCIC$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		RESULT = start_val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserGCIC$parser.done_parsing();
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("GCIC");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$0",47, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= MEN GCIC NT$0 par0 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NT$1 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("HEAD");insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$1",48, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // sig ::= MEN HEAD MAY NT$1 hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // NT$2 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BODY");insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$2",49, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$3 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$3",50, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // sig ::= MEN BODY NT$2 par2 MAY bod NT$3 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // NT$4 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$4",51, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$5 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$5",52, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // sig ::= MEN SPAM NT$4 par3 MAY pals NT$5 MEN BARRA SPAM MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NT$6 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$6",53, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // sig ::= MEN INPUT NT$6 par4 MAY MEN BARRA INPUT MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NT$7 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$7",54, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$8",55, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // sig ::= MEN TEXTAREA NT$7 par5 MAY pals NT$8 MEN BARRA TEXTAREA MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$9 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$9",56, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$10 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$10",57, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // sig ::= MEN SELECT NT$9 par6 MAY opt NT$10 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$11 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$11",58, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NT$12 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$12",59, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // sig ::= MEN DIV NT$11 par7 MAY div NT$12 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // NT$13 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$13",60, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // sig ::= MEN IMG NT$13 par8 MAY MEN BARRA IMG MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$14 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$14",61, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // sig ::= MEN BR NT$14 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$15 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$15",62, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$16 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$16",63, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // sig ::= MEN BUTTON NT$15 par9 MAY pals NT$16 MEN BARRA BUTTON MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // NT$17 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$17",64, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // NT$18 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$18",65, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // sig ::= MEN H1 NT$17 par10 MAY pals NT$18 MEN BARRA H1 MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // NT$19 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$19",66, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$20 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$20",67, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // sig ::= MEN PAR NT$19 par11 MAY pals NT$20 MEN BARRA PAR MAY sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NT$21 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$21",68, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // sig ::= MEN SCRIPTING NT$21 par11 MAY scrip MEN BARRA SCRIPTING MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$21
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // sig ::= MEN BARRA GCIC MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // sig ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("sig",1, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$22 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$22",69, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$23 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$23",70, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // bod ::= MEN SPAM NT$22 par3 MAY pals NT$23 MEN BARRA SPAM MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // NT$24 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$24",71, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // bod ::= MEN INPUT NT$24 par4 MAY MEN BARRA INPUT MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$24
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // NT$25 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$25",72, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$26 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$26",73, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // bod ::= MEN TEXTAREA NT$25 par5 MAY pals NT$26 MEN BARRA TEXTAREA MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$26
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$27 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$27",74, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // NT$28 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$28",75, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // bod ::= MEN SELECT NT$27 par6 MAY opt NT$28 bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$28
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // NT$29 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$29",76, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$30 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$30",77, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // bod ::= MEN DIV NT$29 par7 MAY div NT$30 bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$30
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$31 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$31",78, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // bod ::= MEN IMG NT$31 par8 MAY MEN BARRA IMG MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$31
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$32 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$32",79, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // bod ::= MEN BR NT$32 MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$32
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // NT$33 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$33",80, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // NT$34 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$34",81, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // bod ::= MEN BUTTON NT$33 par9 MAY pals NT$34 MEN BARRA BUTTON MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$34
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$35 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$35",82, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$36 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$36",83, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // bod ::= MEN H1 NT$35 par10 MAY pals NT$36 MEN BARRA H1 MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$36
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // NT$37 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$37",84, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$38 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$38",85, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // bod ::= MEN PAR NT$37 par11 MAY pals NT$38 MEN BARRA PAR MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$38
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$39 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$39",86, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // bod ::= MEN SCRIPTING NT$39 par11 MAY scrip MEN BARRA SCRIPTING MAY bod 
            {
              Object RESULT =null;
              // propagate RESULT from NT$39
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // bod ::= MEN BARRA BODY MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // bod ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("bod",19, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // NT$40 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SPAM");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$40",87, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // NT$41 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$41",88, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // div ::= MEN SPAM NT$40 par3 MAY pals NT$41 MEN BARRA SPAM MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$41
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // NT$42 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("INPUT");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$42",89, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // div ::= MEN INPUT NT$42 par4 MAY MEN BARRA INPUT MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$42
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // NT$43 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TEXTAREA");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$43",90, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // NT$44 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$44",91, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // div ::= MEN TEXTAREA NT$43 par5 MAY pals NT$44 MEN BARRA TEXTAREA MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$44
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // NT$45 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SELECT"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$45",92, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // NT$46 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$46",93, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // div ::= MEN SELECT NT$45 par6 MAY opt NT$46 div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$46
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // NT$47 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("DIV"); insertarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$47",94, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // NT$48 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$48",95, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // div ::= MEN DIV NT$47 par7 MAY div NT$48 div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$48
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // NT$49 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("IMG");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$49",96, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // div ::= MEN IMG NT$49 par8 MAY MEN BARRA IMG MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$49
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$50 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$50",97, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // div ::= MEN BR NT$50 MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$50
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$51 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("BUTTON");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$51",98, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // NT$52 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$52",99, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // div ::= MEN BUTTON NT$51 par9 MAY pals NT$52 MEN BARRA BUTTON MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$52
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // NT$53 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("H1");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$53",100, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // NT$54 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$54",101, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // div ::= MEN H1 NT$53 par10 MAY pals NT$54 MEN BARRA H1 MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$54
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NT$55 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("PAR");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$55",102, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // NT$56 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$56",103, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // div ::= MEN PAR NT$55 par11 MAY pals NT$56 MEN BARRA PAR MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$56
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // NT$57 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("SCRIPTING");insertarScript();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$57",104, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // div ::= MEN SCRIPTING NT$57 par11 MAY scrip MEN BARRA SCRIPTING MAY div 
            {
              Object RESULT =null;
              // propagate RESULT from NT$57
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // div ::= MEN BARRA DIV MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // div ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("div",44, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // NT$58 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
crearProceso(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$58",105, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // scrip ::= PROCESO NT$58 PARI PARD CORCHCUADI instrucciones CORCHCUADD scrip 
            {
              Object RESULT =null;
              // propagate RESULT from NT$58
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // NT$59 ::= 
            {
              Object RESULT =null;
crearProceso(String.valueOf("ONLOAD"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$59",106, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // scrip ::= ONLOAD NT$59 PARI PARD CORCHCUADI instrucciones CORCHCUADD scrip 
            {
              Object RESULT =null;
              // propagate RESULT from NT$59
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // scrip ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("scrip",43, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // NT$60 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("TITLE");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$60",107, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // NT$61 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$61",108, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // hed ::= MEN TITLE NT$60 MAY pals NT$61 MEN BARRA TITLE MAY hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$61
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NT$62 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("LINK");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$62",109, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // NT$63 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$63",110, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // hed ::= MEN LINK NT$62 par1 MAY pals NT$63 MEN BARRA LINK MAY hed 
            {
              Object RESULT =null;
              // propagate RESULT from NT$63
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-11)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // NT$64 ::= 
            {
              Object RESULT =null;
cerrarPadre();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$64",111, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // hed ::= MEN BARRA HEAD MAY NT$64 sig 
            {
              Object RESULT =null;
              // propagate RESULT from NT$64
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // hed ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hed",2, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // NT$65 ::= 
            {
              Object RESULT =null;
insertarEtiqueta("OPTION");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$65",112, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // NT$66 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarContenido(String.valueOf(contenido));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$66",113, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // opt ::= MEN OPTION NT$65 MAY pals NT$66 MEN BARRA OPTION MAY opt 
            {
              Object RESULT =null;
              // propagate RESULT from NT$66
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).right;
		Object contenido = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // opt ::= MEN BARRA SELECT MAY 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // opt ::= error 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opt",5, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // pals ::= PALABRA pals 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // pals ::= PALABRAS pals 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // pals ::= SUMA pals 
            {
              Object RESULT =null;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = "+"+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // pals ::= RESTA pals 
            {
              Object RESULT =null;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = "-"+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // pals ::= MULT pals 
            {
              Object RESULT =null;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = "*"+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // pals ::= BARRA pals 
            {
              Object RESULT =null;
		int p2left = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object p2 = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = "/"+p2;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // pals ::= 
            {
              Object RESULT =null;
		RESULT = "";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("pals",3, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // NT$67 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("FSIZE",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$67",114, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // parGlob ::= CORCHCUADI FSIZE valp NT$67 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$67
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // NT$68 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("FFAMILY",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$68",115, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // parGlob ::= CORCHCUADI FFAMILY valp NT$68 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$68
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // NT$69 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("TEXTALIGN",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$69",116, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // parGlob ::= CORCHCUADI TEXTALIGN valp NT$69 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$69
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // NT$70 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$70",117, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // parGlob ::= CORCHCUADI IDETIQUETA valp NT$70 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$70
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parGlob",18, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // NT$71 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$71",118, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // par0 ::= CORCHCUADI IDETIQUETA valp NT$71 CORCHCUADD par0 
            {
              Object RESULT =null;
              // propagate RESULT from NT$71
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // NT$72 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("NAME",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$72",119, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // par0 ::= CORCHCUADI NAME valp NT$72 CORCHCUADD par0 
            {
              Object RESULT =null;
              // propagate RESULT from NT$72
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // par0 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par0",6, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // NT$73 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("HREF",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$73",120, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // par1 ::= CORCHCUADI HREF valp NT$73 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$73
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par1",7, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // NT$74 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$74",121, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // par2 ::= CORCHCUADI BACK valp NT$74 CORCHCUADD 
            {
              Object RESULT =null;
              // propagate RESULT from NT$74
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par2",8, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // par2 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par2",8, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // NT$75 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$75",122, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // par3 ::= CORCHCUADI COLOR valp NT$75 CORCHCUADD par3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$75
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // par3 ::= parGlob par3 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // par3 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par3",9, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // NT$76 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("TYPE",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$76",123, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // par4 ::= CORCHCUADI TYPE valp NT$76 CORCHCUADD par4 
            {
              Object RESULT =null;
              // propagate RESULT from NT$76
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // par4 ::= parGlob par4 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // par4 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par4",10, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // NT$77 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$77",124, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // par5 ::= CORCHCUADI COLS valp NT$77 CORCHCUADD par5 
            {
              Object RESULT =null;
              // propagate RESULT from NT$77
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // NT$78 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ROWS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$78",125, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // par5 ::= CORCHCUADI ROWS valp NT$78 CORCHCUADD par5 
            {
              Object RESULT =null;
              // propagate RESULT from NT$78
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // par5 ::= parGlob par5 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // par5 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par5",11, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // NT$79 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$79",126, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // par6 ::= CORCHCUADI COLOR valp NT$79 CORCHCUADD par6 
            {
              Object RESULT =null;
              // propagate RESULT from NT$79
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // par6 ::= parGlob par6 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // par6 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par6",12, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // NT$80 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("CLASS",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$80",127, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // par7 ::= CORCHCUADI CLASS valp NT$80 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$80
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NT$81 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$81",128, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // par7 ::= CORCHCUADI COLOR valp NT$81 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$81
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // NT$82 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$82",129, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // par7 ::= CORCHCUADI BACK valp NT$82 CORCHCUADD par7 
            {
              Object RESULT =null;
              // propagate RESULT from NT$82
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // par7 ::= parGlob par7 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // par7 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par7",13, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // NT$83 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("SRC",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$83",130, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // par8 ::= CORCHCUADI SRC valp NT$83 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$83
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // NT$84 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("WIDTH",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$84",131, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // par8 ::= CORCHCUADI WIDTH valp NT$84 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$84
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // NT$85 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("HEIGHT",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$85",132, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // par8 ::= CORCHCUADI HEIGHT valp NT$85 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$85
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // NT$86 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ALT",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$86",133, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // par8 ::= CORCHCUADI ALT valp NT$86 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$86
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // NT$87 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("IDETIQUETA",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$87",134, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // par8 ::= CORCHCUADI IDETIQUETA valp NT$87 CORCHCUADD par8 
            {
              Object RESULT =null;
              // propagate RESULT from NT$87
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // par8 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par8",14, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // NT$88 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("ONCLICK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$88",135, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // par9 ::= CORCHCUADI ONCLICK valp NT$88 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$88
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // NT$89 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$89",136, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // par9 ::= CORCHCUADI COLOR valp NT$89 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$89
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // NT$90 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("BACK",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$90",137, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // par9 ::= CORCHCUADI BACK valp NT$90 CORCHCUADD par9 
            {
              Object RESULT =null;
              // propagate RESULT from NT$90
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // par9 ::= parGlob par9 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // par9 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par9",15, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // NT$91 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$91",138, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // par10 ::= CORCHCUADI COLOR valp NT$91 CORCHCUADD par10 
            {
              Object RESULT =null;
              // propagate RESULT from NT$91
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // par10 ::= parGlob par10 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // par10 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par10",16, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // NT$92 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarParametro("COLOR",String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$92",139, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // par11 ::= CORCHCUADI COLOR valp NT$92 CORCHCUADD par11 
            {
              Object RESULT =null;
              // propagate RESULT from NT$92
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // par11 ::= parGlob par11 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // par11 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("par11",17, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // valp ::= IGUAL VALP 
            {
              Object RESULT =null;
		int contenidoleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int contenidoright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String contenido = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = contenido;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("valp",4, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // NT$93 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("declaracion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$93",140, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // instrucciones ::= NT$93 declaracion instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$93
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // NT$94 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("asignacion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$94",141, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // instrucciones ::= NT$94 asignacion instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$94
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // NT$95 ::= 
            {
              Object RESULT =null;
insertarInsIf();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$95",142, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // NT$96 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$96",143, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // NT$97 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$97",144, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // instrucciones ::= NT$95 IF PARI condicion NT$96 PARD THEN inite ifp NT$97 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$97
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-10)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // NT$98 ::= 
            {
              Object RESULT =null;
insertarRepeat();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$98",145, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // NT$99 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$99",146, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // NT$100 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
crearExpresion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$100",147, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // NT$101 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$101",148, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // instrucciones ::= NT$98 REPEAT PARI rep NT$99 PARD HUNTIL PARI NT$100 hun PARD inite NT$101 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$101
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-13)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // NT$102 ::= 
            {
              Object RESULT =null;
insertarWhile();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$102",149, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // NT$103 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$103",150, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // NT$104 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
cerrarPadreIns();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$104",151, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // instrucciones ::= NT$102 WHILE PARI condicion NT$103 PARD THENWHILE inite NT$104 instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$104
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-9)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // NT$105 ::= 
            {
              Object RESULT =null;
insertarInsInsert();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$105",152, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // instrucciones ::= NT$105 INSERT PARI token PARD PUNTCOMA instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$105
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // NT$106 ::= 
            {
              Object RESULT =null;
insertarAlertInf();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$106",153, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // NT$107 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
alertInfoAct.setMensaje(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$107",154, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // instrucciones ::= NT$106 ALERTINFO PARI parS NT$107 PARD PUNTCOMA instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$107
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-7)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // NT$108 ::= 
            {
              Object RESULT =null;
insertarRedirect();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$108",155, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // instrucciones ::= NT$108 REDIRECT PARI PARD PUNTCOMA instrucciones 
            {
              Object RESULT =null;
              // propagate RESULT from NT$108
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // NT$109 ::= 
            {
              Object RESULT =null;
insertarExit();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$109",156, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // instrucciones ::= NT$109 EXIT PARI PARD PUNTCOMA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$109
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // instrucciones ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("instrucciones",20, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // inite ::= INITC CORCHI DOSPUNT instrucciones DOSPUNT CORCHD END 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // NT$110 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("declaracion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$110",157, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // inite ::= NT$110 declaracion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$110
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // NT$111 ::= 
            {
              Object RESULT =null;
insertarDeclaracion("asignacion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$111",158, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // inite ::= NT$111 asignacion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$111
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // NT$112 ::= 
            {
              Object RESULT =null;
insertarInsInsert();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$112",159, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // inite ::= NT$112 INSERT PARI token PARD PUNTCOMA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$112
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // NT$113 ::= 
            {
              Object RESULT =null;
insertarAlertInf();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$113",160, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // NT$114 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
alertInfoAct.setMensaje(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$114",161, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // inite ::= NT$113 ALERTINFO PARI parS NT$114 PARD PUNTCOMA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$114
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-6)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // NT$115 ::= 
            {
              Object RESULT =null;
insertarRedirect();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$115",162, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // inite ::= NT$115 REDIRECT PARI PARD PUNTCOMA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$115
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // NT$116 ::= 
            {
              Object RESULT =null;
insertarExit();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$116",163, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // inite ::= NT$116 EXIT PARI PARD PUNTCOMA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$116
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("inite",21, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // NT$117 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnDeclaracion(String.valueOf(t),String.valueOf(m),String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$117",164, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // declaracion ::= tipo modo variable NT$117 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$117
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("declaracion",33, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // tipo ::= INTEGER 
            {
              Object RESULT =null;
		RESULT = "INTEGER";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // tipo ::= STRING 
            {
              Object RESULT =null;
		RESULT = "STRING";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // tipo ::= DECIMAL 
            {
              Object RESULT =null;
		RESULT = "DECIMAL";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // tipo ::= BOOLEAN 
            {
              Object RESULT =null;
		RESULT = "BOOLEAN";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // tipo ::= CHAR 
            {
              Object RESULT =null;
		RESULT = "CHAR";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tipo",30, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // variable ::= PALABRAS 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("variable",31, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // variable ::= IDET 
            {
              Object RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = p;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("variable",31, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // modo ::= GLOBAL 
            {
              Object RESULT =null;
		RESULT = "GLOBAL";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("modo",32, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // modo ::= 
            {
              Object RESULT =null;
		RESULT = "";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("modo",32, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // fin1 ::= PUNTCOMA 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // NT$118 ::= 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
delcAsignAct.insertarVariable(String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$118",165, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // fin1 ::= COMA variable NT$118 fin1 
            {
              Object RESULT =null;
              // propagate RESULT from NT$118
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // fin1 ::= IGUAL asg 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin1",37, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // NT$119 ::= 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
delcAsignAct.insertarVariable(String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$119",166, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // asignacion ::= variable NT$119 IGUAL asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$119
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asignacion",34, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // NT$120 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$120",167, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // asg ::= VALP NT$120 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$120
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // NT$121 ::= 
            {
              Object RESULT =null;
insertarVal("true");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$121",168, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // asg ::= TRUE NT$121 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$121
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // NT$122 ::= 
            {
              Object RESULT =null;
insertarVal("false");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$122",169, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // asg ::= FALSE NT$122 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$122
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // NT$123 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$123",170, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // asg ::= variable NT$123 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$123
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // NT$124 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$124",171, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // asg ::= DECIM NT$124 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$124
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // NT$125 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$125",172, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // asg ::= CARACTER NT$125 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$125
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // NT$126 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcGetElement:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$126",173, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // asg ::= GETELEMENT PARI CARACTER PARD NT$126 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$126
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // NT$127 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcAsc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$127",174, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // asg ::= ASC PARI parS PARD NT$127 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$127
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // NT$128 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcDesc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$128",175, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // asg ::= DESC PARI parS PARD NT$128 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$128
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // NT$129 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcLetPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$129",176, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // asg ::= LETPAR PARI parS PARD NT$129 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$129
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // NT$130 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcLetImPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$130",177, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // asg ::= LETIMPAR PARI parS PARD NT$130 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$130
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // NT$131 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarVal("funcReverse:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$131",178, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // asg ::= REVERSE PARI parS PARD NT$131 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$131
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // NT$132 ::= 
            {
              Object RESULT =null;
insertarVal("funcCarAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$132",179, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // asg ::= CARALEATORIO PARI PARD NT$132 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$132
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // NT$133 ::= 
            {
              Object RESULT =null;
insertarVal("funcNumAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$133",180, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // asg ::= NUMALEA PARI PARD NT$133 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$133
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // NT$134 ::= 
            {
              Object RESULT =null;
insertarVal("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$134",181, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // asg ::= PARI NT$134 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$134
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg",35, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // parS ::= VALP 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // parS ::= CARACTER 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // parS ::= variable 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
		RESULT = val;
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("parS",40, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // NT$135 ::= 
            {
              Object RESULT =null;
insertarVal("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$135",182, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // fin2 ::= SUMA NT$135 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$135
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // NT$136 ::= 
            {
              Object RESULT =null;
insertarVal("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$136",183, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // fin2 ::= RESTA NT$136 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$136
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // NT$137 ::= 
            {
              Object RESULT =null;
insertarVal("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$137",184, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // fin2 ::= MULT NT$137 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$137
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // NT$138 ::= 
            {
              Object RESULT =null;
insertarVal("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$138",185, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // fin2 ::= BARRA NT$138 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$138
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // NT$139 ::= 
            {
              Object RESULT =null;
insertarVal(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$139",186, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // fin2 ::= PARD NT$139 fin2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$139
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserGCIC$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action_part00000001(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserGCIC$result;

      /* select the action based on the action number */
      switch (CUP$ParserGCIC$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // NT$140 ::= 
            {
              Object RESULT =null;
		int opleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int opright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarVal(String.valueOf(op));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$140",187, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // fin2 ::= opRel NT$140 asg 
            {
              Object RESULT =null;
              // propagate RESULT from NT$140
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // fin2 ::= PUNTCOMA 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin2",38, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // condicion ::= asg2 opLog 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("condicion",28, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // NT$141 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$141",188, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // asg2 ::= VALP NT$141 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$141
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // NT$142 ::= 
            {
              Object RESULT =null;
insertarEnCondi("true");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$142",189, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // asg2 ::= TRUE NT$142 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$142
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // NT$143 ::= 
            {
              Object RESULT =null;
insertarEnCondi("false");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$143",190, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // asg2 ::= FALSE NT$143 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$143
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // NT$144 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$144",191, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // asg2 ::= variable NT$144 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$144
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // NT$145 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$145",192, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // asg2 ::= DECIM NT$145 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$145
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // NT$146 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(val);
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$146",193, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // asg2 ::= CARACTER NT$146 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$146
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // NT$147 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcGetElement:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$147",194, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // asg2 ::= GETELEMENT PARI CARACTER PARD NT$147 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$147
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // NT$148 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcAsc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$148",195, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // asg2 ::= ASC PARI parS PARD NT$148 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$148
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // NT$149 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcDesc:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$149",196, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // asg2 ::= DESC PARI parS PARD NT$149 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$149
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // NT$150 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcLetPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$150",197, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // asg2 ::= LETPAR PARI parS PARD NT$150 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$150
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // NT$151 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcLetImPar:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$151",198, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // asg2 ::= LETIMPAR PARI parS PARD NT$151 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$151
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // NT$152 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
insertarEnCondi("funcReverse:"+String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$152",199, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // asg2 ::= REVERSE PARI parS PARD NT$152 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$152
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // NT$153 ::= 
            {
              Object RESULT =null;
insertarEnCondi("funcCarAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$153",200, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // asg2 ::= CARALEATORIO PARI PARD NT$153 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$153
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // NT$154 ::= 
            {
              Object RESULT =null;
insertarEnCondi("funcNumAleatorio");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$154",201, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // asg2 ::= NUMALEA PARI PARD NT$154 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$154
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // NT$155 ::= 
            {
              Object RESULT =null;
insertarEnCondi("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$155",202, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // NT$156 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarEnCondi(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$156",203, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // asg2 ::= PARI NT$155 asg2 PARD NT$156 fin3 
            {
              Object RESULT =null;
              // propagate RESULT from NT$156
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // NT$157 ::= 
            {
              Object RESULT =null;
insertarEnCondi("!");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$157",204, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // asg2 ::= EXCL NT$157 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$157
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asg2",36, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // NT$158 ::= 
            {
              Object RESULT =null;
insertarEnCondi("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$158",205, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // fin3 ::= SUMA NT$158 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$158
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // NT$159 ::= 
            {
              Object RESULT =null;
insertarEnCondi("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$159",206, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // fin3 ::= RESTA NT$159 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$159
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // NT$160 ::= 
            {
              Object RESULT =null;
insertarEnCondi("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$160",207, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // fin3 ::= MULT NT$160 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$160
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // NT$161 ::= 
            {
              Object RESULT =null;
insertarEnCondi("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$161",208, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // fin3 ::= BARRA NT$161 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$161
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // NT$162 ::= 
            {
              Object RESULT =null;
		int opleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int opright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnCondi(String.valueOf(op));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$162",209, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // fin3 ::= opRel NT$162 asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$162
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // fin3 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("fin3",39, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // opRel ::= MAYIG 
            {
              Object RESULT =null;
		RESULT = ">=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // opRel ::= MENIG 
            {
              Object RESULT =null;
		RESULT = "<=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // opRel ::= MEN 
            {
              Object RESULT =null;
		RESULT = "<";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // opRel ::= MAY 
            {
              Object RESULT =null;
		RESULT = ">";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // opRel ::= DOBIGUAL 
            {
              Object RESULT =null;
		RESULT = "==";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // opRel ::= DIFER 
            {
              Object RESULT =null;
		RESULT = "!=";
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opRel",41, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // NT$163 ::= 
            {
              Object RESULT =null;
insertarEnCondi(String.valueOf("||"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$163",210, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // opLog ::= OR NT$163 condicion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$163
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // NT$164 ::= 
            {
              Object RESULT =null;
insertarEnCondi(String.valueOf("&&"));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$164",211, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // opLog ::= AND NT$164 condicion 
            {
              Object RESULT =null;
              // propagate RESULT from NT$164
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // opLog ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("opLog",42, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // NT$165 ::= 
            {
              Object RESULT =null;
insertarElse();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$165",212, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // ifp ::= ELSE NT$165 inite 
            {
              Object RESULT =null;
              // propagate RESULT from NT$165
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // NT$166 ::= 
            {
              Object RESULT =null;
insertarElseIF();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$166",213, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // NT$167 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarCondicion();
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$167",214, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // ifp ::= ELSEIF NT$166 PARI condicion NT$167 PARD THEN inite ifp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$167
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-8)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // ifp ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("ifp",22, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // NT$168 ::= 
            {
              Object RESULT =null;
insertarDeclaracionCiclo("declaracion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$168",215, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // rep ::= NT$168 declaracion2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$168
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("rep",23, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // NT$169 ::= 
            {
              Object RESULT =null;
insertarDeclaracionCiclo("asignacion");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$169",216, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // rep ::= NT$169 asignacion2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$169
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("rep",23, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // NT$170 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarExp(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$170",217, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // hun ::= variable NT$170 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$170
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // NT$171 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarExp(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$171",218, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // hun ::= DECIM NT$171 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$171
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // NT$172 ::= 
            {
              Object RESULT =null;
insertarExp("(");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$172",219, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // NT$173 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
insertarExp(")");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$173",220, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // hun ::= PARI NT$172 hun PARD NT$173 hun2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$173
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun",24, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // NT$174 ::= 
            {
              Object RESULT =null;
insertarExp("+");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$174",221, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // hun2 ::= SUMA NT$174 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$174
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // NT$175 ::= 
            {
              Object RESULT =null;
insertarExp("-");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$175",222, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // hun2 ::= RESTA NT$175 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$175
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // NT$176 ::= 
            {
              Object RESULT =null;
insertarExp("*");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$176",223, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // hun2 ::= MULT NT$176 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$176
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // NT$177 ::= 
            {
              Object RESULT =null;
insertarExp("/");
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$177",224, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // hun2 ::= BARRA NT$177 hun 
            {
              Object RESULT =null;
              // propagate RESULT from NT$177
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // hun2 ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("hun2",25, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // NT$178 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarToken(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$178",225, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // token ::= variable NT$178 tokenp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$178
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("token",26, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // NT$179 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarToken(String.valueOf(val));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$179",226, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // token ::= CARACTER NT$179 tokenp 
            {
              Object RESULT =null;
              // propagate RESULT from NT$179
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("token",26, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // tokenp ::= COMA token 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tokenp",27, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // tokenp ::= 
            {
              Object RESULT =null;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("tokenp",27, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // NT$180 ::= 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
insertarEnDeclaracion(String.valueOf(t),String.valueOf(m),String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$180",227, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // declaracion2 ::= tipo modo variable NT$180 IGUAL asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$180
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).right;
		Object m = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-4)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("declaracion2",45, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-5)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // NT$181 ::= 
            {
              Object RESULT =null;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.peek()).value;
delcAsignAct.insertarVariable(String.valueOf(v));
              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("NT$181",228, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // asignacion2 ::= variable NT$181 IGUAL asg2 
            {
              Object RESULT =null;
              // propagate RESULT from NT$181
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-2)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)).value;

              CUP$ParserGCIC$result = parser.getSymbolFactory().newSymbol("asignacion2",46, ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.elementAt(CUP$ParserGCIC$top-3)), ((java_cup.runtime.Symbol)CUP$ParserGCIC$stack.peek()), RESULT);
            }
          return CUP$ParserGCIC$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserGCIC$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserGCIC$do_action(
    int                        CUP$ParserGCIC$act_num,
    java_cup.runtime.lr_parser CUP$ParserGCIC$parser,
    java.util.Stack            CUP$ParserGCIC$stack,
    int                        CUP$ParserGCIC$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$ParserGCIC$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$ParserGCIC$do_action_part00000000(
                               CUP$ParserGCIC$act_num,
                               CUP$ParserGCIC$parser,
                               CUP$ParserGCIC$stack,
                               CUP$ParserGCIC$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$ParserGCIC$do_action_part00000001(
                               CUP$ParserGCIC$act_num,
                               CUP$ParserGCIC$parser,
                               CUP$ParserGCIC$stack,
                               CUP$ParserGCIC$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
