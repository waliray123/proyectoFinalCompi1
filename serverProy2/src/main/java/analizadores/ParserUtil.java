
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import objetos.ErrorCom;
import objetos.Etiqueta;
import objetos.ParametroEtiqueta;
import objetos.Instrucciones.DeclAsign;
import objetos.Instrucciones.InsIf;
import objetos.Instruccion;
import objetos.Instrucciones.Ciclo;
import objetos.Instrucciones.InsInsert;
import objetos.Instrucciones.AlertInfo;
import objetos.Captcha;
import objetos.Proceso;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ParserUtil extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symU.class;
}

  /** Default constructor. */
  @Deprecated
  public ParserUtil() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ParserUtil(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ParserUtil(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\021\000\002\002\004\000\002\004\002\000\002\003" +
    "\007\000\002\003\002\000\002\005\002\000\002\002\014" +
    "\000\002\006\002\000\002\002\014\000\002\007\002\000" +
    "\002\002\014\000\002\010\002\000\002\002\014\000\002" +
    "\011\002\000\002\002\014\000\002\012\002\000\002\002" +
    "\013\000\002\002\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\102\000\006\002\ufffe\005\004\001\002\000\004\016" +
    "\007\001\002\000\004\002\006\001\002\000\004\002\001" +
    "\001\002\000\004\004\010\001\002\000\004\005\000\001" +
    "\002\000\004\005\012\001\002\000\020\006\020\010\022" +
    "\011\021\012\015\013\014\014\017\015\016\001\002\000" +
    "\004\002\uffff\001\002\000\004\004\075\001\002\000\004" +
    "\004\065\001\002\000\004\004\056\001\002\000\004\004" +
    "\046\001\002\000\004\016\043\001\002\000\004\004\033" +
    "\001\002\000\004\004\023\001\002\000\004\007\024\001" +
    "\002\000\004\005\ufffd\001\002\000\004\005\026\001\002" +
    "\000\004\006\027\001\002\000\004\010\030\001\002\000" +
    "\004\004\031\001\002\000\004\005\012\001\002\000\004" +
    "\002\ufffc\001\002\000\004\007\034\001\002\000\004\005" +
    "\ufffb\001\002\000\004\005\036\001\002\000\004\006\037" +
    "\001\002\000\004\011\040\001\002\000\004\004\041\001" +
    "\002\000\004\005\012\001\002\000\004\002\ufffa\001\002" +
    "\000\004\004\044\001\002\000\006\002\ufffe\005\004\001" +
    "\002\000\004\002\ufff1\001\002\000\004\007\047\001\002" +
    "\000\004\005\ufff5\001\002\000\004\005\051\001\002\000" +
    "\004\006\052\001\002\000\004\014\053\001\002\000\004" +
    "\004\054\001\002\000\004\005\012\001\002\000\004\002" +
    "\ufff4\001\002\000\004\007\057\001\002\000\004\005\ufff3" +
    "\001\002\000\004\005\061\001\002\000\004\015\062\001" +
    "\002\000\004\004\063\001\002\000\004\005\012\001\002" +
    "\000\004\002\ufff2\001\002\000\004\007\066\001\002\000" +
    "\004\005\ufff9\001\002\000\004\005\070\001\002\000\004" +
    "\006\071\001\002\000\004\012\072\001\002\000\004\004" +
    "\073\001\002\000\004\005\012\001\002\000\004\002\ufff8" +
    "\001\002\000\004\007\076\001\002\000\004\005\ufff7\001" +
    "\002\000\004\005\100\001\002\000\004\006\101\001\002" +
    "\000\004\013\102\001\002\000\004\004\103\001\002\000" +
    "\004\005\012\001\002\000\004\002\ufff6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\102\000\004\003\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\010\001\001\000\004\002\012\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\024\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\002\031\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\034\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\002\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\044\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\002\054\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\057\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\002\063\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\066" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\002\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\076\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\002\103\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserUtil$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserUtil$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserUtil$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
    private List<Captcha> captchas;         
    private Captcha captchaAct;
    private List<ErrorCom> erroresCom;
    

	public ParserUtil(LexerUtil lex) {
		super(lex);
        this.erroresCom = lex.getErroresCom();        
        this.captchas = new ArrayList<>();        
	}

    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        erroresCom.add(new ErrorCom("Sintactico","No se esperaba Componente",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    }

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        erroresCom.add(new ErrorCom("Sintactico","Error sintactico Irrecuperable",String.valueOf(s.left),String.valueOf(s.right),String.valueOf(s.value),""));
    } 

    private void insertarCaptcha(){
        this.captchaAct = new Captcha();
        this.captchas.add(this.captchaAct);
    }

    public List<Captcha> getCaptchas(){
        return this.captchas;
    }

    protected int error_sync_size() {
		return 2;
	}

    public List<ErrorCom> getErroresCom(){
        return erroresCom;
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ParserUtil$actions {
  private final ParserUtil parser;

  /** Constructor */
  CUP$ParserUtil$actions(ParserUtil parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ParserUtil$do_action_part00000000(
    int                        CUP$ParserUtil$act_num,
    java_cup.runtime.lr_parser CUP$ParserUtil$parser,
    java.util.Stack            CUP$ParserUtil$stack,
    int                        CUP$ParserUtil$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserUtil$result;

      /* select the action based on the action number */
      switch (CUP$ParserUtil$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio2 EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-1)).value;
		RESULT = start_val;
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-1)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ParserUtil$parser.done_parsing();
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
insertarCaptcha();
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$0",2, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio2 ::= MEN DATOS_FORM MAY NT$0 inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-1)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio2",1, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-4)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // inicio2 ::= 
            {
              Object RESULT =null;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio2",1, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // NT$1 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setIdCaptcha(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$1",3, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // inicio ::= MEN ID_CAP MAY VALP NT$1 MEN BARRA ID_CAP MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-9)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$2 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setNombreCaptcha(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$2",4, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // inicio ::= MEN NOMBRE_CAP MAY VALP NT$2 MEN BARRA NOMBRE_CAP MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-9)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // NT$3 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setCantUsos(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$3",5, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // inicio ::= MEN CANT_USOS MAY VALP NT$3 MEN BARRA CANT_USOS MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-9)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // NT$4 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setCantAciertos(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$4",6, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // inicio ::= MEN CANT_ACIERTOS MAY VALP NT$4 MEN BARRA CANT_ACIERTOS MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-9)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NT$5 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setCantFallos(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$5",7, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // inicio ::= MEN CANT_FALLOS MAY VALP NT$5 MEN BARRA CANT_FALLOS MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-6)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-9)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$6 ::= 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.peek()).value;
captchaAct.setUltFecha(String.valueOf(val));
              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("NT$6",8, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // inicio ::= MEN ULTIMA_FECHA MAY VALP NT$6 MEN ULTIMA_FECHA MAY inicio 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-4)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-5)).value;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-8)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // inicio ::= MEN BARRA DATOS_FORM MAY inicio2 
            {
              Object RESULT =null;

              CUP$ParserUtil$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.elementAt(CUP$ParserUtil$top-4)), ((java_cup.runtime.Symbol)CUP$ParserUtil$stack.peek()), RESULT);
            }
          return CUP$ParserUtil$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ParserUtil$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ParserUtil$do_action(
    int                        CUP$ParserUtil$act_num,
    java_cup.runtime.lr_parser CUP$ParserUtil$parser,
    java.util.Stack            CUP$ParserUtil$stack,
    int                        CUP$ParserUtil$top)
    throws java.lang.Exception
    {
              return CUP$ParserUtil$do_action_part00000000(
                               CUP$ParserUtil$act_num,
                               CUP$ParserUtil$parser,
                               CUP$ParserUtil$stack,
                               CUP$ParserUtil$top);
    }
}

}
